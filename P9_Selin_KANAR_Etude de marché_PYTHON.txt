{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3d04a57f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>4281.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5611</td>\n",
       "      <td>Importations - Quantité</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>2302.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5072</td>\n",
       "      <td>Variation de stock</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>-119.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5911</td>\n",
       "      <td>Exportations - Quantité</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5301</td>\n",
       "      <td>Disponibilité intérieure</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>6701.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176595</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>5142</td>\n",
       "      <td>Nourriture</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>19.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176596</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>645</td>\n",
       "      <td>Disponibilité alimentaire en quantité (kg/pers...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>kg</td>\n",
       "      <td>1.33</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176597</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Kcal/personne/jour</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176598</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>674</td>\n",
       "      <td>Disponibilité de protéines en quantité (g/pers...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>0.04</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176599</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>0.02</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>176600 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine                      Domaine  Code zone         Zone  \\\n",
       "0               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "1               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "2               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "3               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "4               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "...             ...                          ...        ...          ...   \n",
       "176595          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176596          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176597          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176598          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176599          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                            Élément  \\\n",
       "0               5511                                         Production   \n",
       "1               5611                            Importations - Quantité   \n",
       "2               5072                                 Variation de stock   \n",
       "3               5911                            Exportations - Quantité   \n",
       "4               5301                           Disponibilité intérieure   \n",
       "...              ...                                                ...   \n",
       "176595          5142                                         Nourriture   \n",
       "176596           645  Disponibilité alimentaire en quantité (kg/pers...   \n",
       "176597           664     Disponibilité alimentaire (Kcal/personne/jour)   \n",
       "176598           674  Disponibilité de protéines en quantité (g/pers...   \n",
       "176599           684  Disponibilité de matière grasse en quantité (g...   \n",
       "\n",
       "        Code Produit          Produit  Code année  Année               Unité  \\\n",
       "0               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "1               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "2               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "3               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "4               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "...              ...              ...         ...    ...                 ...   \n",
       "176595          2899     Miscellanees        2017   2017  Milliers de tonnes   \n",
       "176596          2899     Miscellanees        2017   2017                  kg   \n",
       "176597          2899     Miscellanees        2017   2017  Kcal/personne/jour   \n",
       "176598          2899     Miscellanees        2017   2017     g/personne/jour   \n",
       "176599          2899     Miscellanees        2017   2017     g/personne/jour   \n",
       "\n",
       "         Valeur Symbole Description du Symbole  \n",
       "0       4281.00       S  Données standardisées  \n",
       "1       2302.00       S  Données standardisées  \n",
       "2       -119.00       S  Données standardisées  \n",
       "3          0.00       S  Données standardisées  \n",
       "4       6701.00       S  Données standardisées  \n",
       "...         ...     ...                    ...  \n",
       "176595    19.00       S  Données standardisées  \n",
       "176596     1.33      Fc        Donnée calculée  \n",
       "176597     1.00      Fc        Donnée calculée  \n",
       "176598     0.04      Fc        Donnée calculée  \n",
       "176599     0.02      Fc        Donnée calculée  \n",
       "\n",
       "[176600 rows x 14 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#import data \"dispo alimentaire\"\n",
    "\n",
    "import pandas as pd\n",
    "data1 = pd.read_csv(\"C:\\\\Users\\\\selin\\\\Documents\\\\AAAAOPENCLASSROOMS DATA ANALYST\\\\PROJET 9\\\\Livrables\\\\DisponibiliteAlimentaire_2017.csv\")\n",
    "data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "99099e22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2000</td>\n",
       "      <td>2000</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>20779.953</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2001</td>\n",
       "      <td>2001</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>21606.988</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>22600.770</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2003</td>\n",
       "      <td>2003</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>23680.871</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2004</td>\n",
       "      <td>2004</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>24726.684</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4406</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2014</td>\n",
       "      <td>2014</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>13586.707</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4407</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2015</td>\n",
       "      <td>2015</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>13814.629</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4408</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2016</td>\n",
       "      <td>2016</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14030.331</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4409</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4410</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14438.802</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4411 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Code Domaine                       Domaine  Code zone         Zone  \\\n",
       "0              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "1              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "2              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "3              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "4              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "...           ...                           ...        ...          ...   \n",
       "4406           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4407           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4408           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4409           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4410           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "\n",
       "      Code Élément            Élément  Code Produit                 Produit  \\\n",
       "0              511  Population totale          3010  Population-Estimations   \n",
       "1              511  Population totale          3010  Population-Estimations   \n",
       "2              511  Population totale          3010  Population-Estimations   \n",
       "3              511  Population totale          3010  Population-Estimations   \n",
       "4              511  Population totale          3010  Population-Estimations   \n",
       "...            ...                ...           ...                     ...   \n",
       "4406           511  Population totale          3010  Population-Estimations   \n",
       "4407           511  Population totale          3010  Population-Estimations   \n",
       "4408           511  Population totale          3010  Population-Estimations   \n",
       "4409           511  Population totale          3010  Population-Estimations   \n",
       "4410           511  Population totale          3010  Population-Estimations   \n",
       "\n",
       "      Code année  Année           Unité     Valeur Symbole  \\\n",
       "0           2000   2000  1000 personnes  20779.953       X   \n",
       "1           2001   2001  1000 personnes  21606.988       X   \n",
       "2           2002   2002  1000 personnes  22600.770       X   \n",
       "3           2003   2003  1000 personnes  23680.871       X   \n",
       "4           2004   2004  1000 personnes  24726.684       X   \n",
       "...          ...    ...             ...        ...     ...   \n",
       "4406        2014   2014  1000 personnes  13586.707       X   \n",
       "4407        2015   2015  1000 personnes  13814.629       X   \n",
       "4408        2016   2016  1000 personnes  14030.331       X   \n",
       "4409        2017   2017  1000 personnes  14236.595       X   \n",
       "4410        2018   2018  1000 personnes  14438.802       X   \n",
       "\n",
       "             Description du Symbole Note  \n",
       "0     Sources internationales sûres  NaN  \n",
       "1     Sources internationales sûres  NaN  \n",
       "2     Sources internationales sûres  NaN  \n",
       "3     Sources internationales sûres  NaN  \n",
       "4     Sources internationales sûres  NaN  \n",
       "...                             ...  ...  \n",
       "4406  Sources internationales sûres  NaN  \n",
       "4407  Sources internationales sûres  NaN  \n",
       "4408  Sources internationales sûres  NaN  \n",
       "4409  Sources internationales sûres  NaN  \n",
       "4410  Sources internationales sûres  NaN  \n",
       "\n",
       "[4411 rows x 15 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#import data \"population\"\n",
    "\n",
    "import pandas as pd\n",
    "data2 = pd.read_csv(\"C:\\\\Users\\\\selin\\\\Documents\\\\AAAAOPENCLASSROOMS DATA ANALYST\\\\PROJET 9\\\\Livrables\\\\Population_2000_2018.csv\")\n",
    "data2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cb176303",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Code Domaine, Domaine, Code zone, Zone, Code Élément, Élément, Code Produit, Produit, Code année, Année, Unité, Valeur, Symbole, Description du Symbole]\n",
       "Index: []"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#detecter les valeurs manquantes\n",
    "\n",
    "data1[data1['Valeur'].isnull()]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "570a6008",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20002002</td>\n",
       "      <td>2000-2002</td>\n",
       "      <td>%</td>\n",
       "      <td>87</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20012003</td>\n",
       "      <td>2001-2003</td>\n",
       "      <td>%</td>\n",
       "      <td>88</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20022004</td>\n",
       "      <td>2002-2004</td>\n",
       "      <td>%</td>\n",
       "      <td>91</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20032005</td>\n",
       "      <td>2003-2005</td>\n",
       "      <td>%</td>\n",
       "      <td>92</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20042006</td>\n",
       "      <td>2004-2006</td>\n",
       "      <td>%</td>\n",
       "      <td>92</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120693</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20122014</td>\n",
       "      <td>2012-2014</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>56.3</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120694</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20132015</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>54.3</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120695</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20142016</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>52.3</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120696</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20152017</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>51.7</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120697</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20162018</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120698 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine                            Domaine  Code zone (FAO)  \\\n",
       "0                FS  Données de lasécurité alimentaire                2   \n",
       "1                FS  Données de lasécurité alimentaire                2   \n",
       "2                FS  Données de lasécurité alimentaire                2   \n",
       "3                FS  Données de lasécurité alimentaire                2   \n",
       "4                FS  Données de lasécurité alimentaire                2   \n",
       "...             ...                                ...              ...   \n",
       "120693           FS  Données de lasécurité alimentaire              181   \n",
       "120694           FS  Données de lasécurité alimentaire              181   \n",
       "120695           FS  Données de lasécurité alimentaire              181   \n",
       "120696           FS  Données de lasécurité alimentaire              181   \n",
       "120697           FS  Données de lasécurité alimentaire              181   \n",
       "\n",
       "               Zone  Code Élément Élément  Code Produit  \\\n",
       "0       Afghanistan          6121  Valeur         21010   \n",
       "1       Afghanistan          6121  Valeur         21010   \n",
       "2       Afghanistan          6121  Valeur         21010   \n",
       "3       Afghanistan          6121  Valeur         21010   \n",
       "4       Afghanistan          6121  Valeur         21010   \n",
       "...             ...           ...     ...           ...   \n",
       "120693     Zimbabwe          6123  Valeur         21061   \n",
       "120694     Zimbabwe          6123  Valeur         21061   \n",
       "120695     Zimbabwe          6123  Valeur         21061   \n",
       "120696     Zimbabwe          6123  Valeur         21061   \n",
       "120697     Zimbabwe          6123  Valeur         21061   \n",
       "\n",
       "                                                  Produit  Code année  \\\n",
       "0       Suffisance des apports énergétiques alimentair...    20002002   \n",
       "1       Suffisance des apports énergétiques alimentair...    20012003   \n",
       "2       Suffisance des apports énergétiques alimentair...    20022004   \n",
       "3       Suffisance des apports énergétiques alimentair...    20032005   \n",
       "4       Suffisance des apports énergétiques alimentair...    20042006   \n",
       "...                                                   ...         ...   \n",
       "120693  Disponibilités moyennes de matière grasse (g/p...    20122014   \n",
       "120694  Disponibilités moyennes de matière grasse (g/p...    20132015   \n",
       "120695  Disponibilités moyennes de matière grasse (g/p...    20142016   \n",
       "120696  Disponibilités moyennes de matière grasse (g/p...    20152017   \n",
       "120697  Disponibilités moyennes de matière grasse (g/p...    20162018   \n",
       "\n",
       "            Année            Unité Valeur Symbole Description du Symbole  Note  \n",
       "0       2000-2002                %     87       F         Estimation FAO   NaN  \n",
       "1       2001-2003                %     88       F         Estimation FAO   NaN  \n",
       "2       2002-2004                %     91       F         Estimation FAO   NaN  \n",
       "3       2003-2005                %     92       F         Estimation FAO   NaN  \n",
       "4       2004-2006                %     92       F         Estimation FAO   NaN  \n",
       "...           ...              ...    ...     ...                    ...   ...  \n",
       "120693  2012-2014  g/personne/jour   56.3       F         Estimation FAO   NaN  \n",
       "120694  2013-2015  g/personne/jour   54.3       F         Estimation FAO   NaN  \n",
       "120695  2014-2016  g/personne/jour   52.3       F         Estimation FAO   NaN  \n",
       "120696  2015-2017  g/personne/jour   51.7       F         Estimation FAO   NaN  \n",
       "120697  2016-2018  g/personne/jour     51       F         Estimation FAO   NaN  \n",
       "\n",
       "[120698 rows x 15 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#import data \"sécurité\"\n",
    "\n",
    "import pandas as pd\n",
    "data3= pd.read_csv(\"C:\\\\Users\\\\selin\\\\Documents\\\\AAAAOPENCLASSROOMS DATA ANALYST\\\\PROJET 9\\\\Livrables\\\\sécurité.csv\", sep = ',', quotechar='\"')\n",
    "\n",
    "data3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "feacf841",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>195740.846106</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>4141.523943</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>183.247028</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>458140.931411</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>331.532293</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238244</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>millions</td>\n",
       "      <td>19835.846559</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238245</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>US$</td>\n",
       "      <td>1354.401687</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238246</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6155</td>\n",
       "      <td>Croissance annuelle en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238247</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238248</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-13.875718</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>238249 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "0                MK  Indicateurs macro                2  Afghanistan   \n",
       "1                MK  Indicateurs macro                2  Afghanistan   \n",
       "2                MK  Indicateurs macro                2  Afghanistan   \n",
       "3                MK  Indicateurs macro                2  Afghanistan   \n",
       "4                MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "238244           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238245           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238246           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238247           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238248           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                     Élément  \\\n",
       "0               6109                     Valeur en devise locale   \n",
       "1               6110                                 Valeur US $   \n",
       "2               6119                    Valeur US $ par habitant   \n",
       "3               6183   Valeur en devise locale, aux prix de 2015   \n",
       "4               6185  Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                         ...   \n",
       "238244          6110                                 Valeur US $   \n",
       "238245          6119                    Valeur US $ par habitant   \n",
       "238246          6155        Croissance annuelle en devise locale   \n",
       "238247          6129                     Croissance annuelle US$   \n",
       "238248         61290        Croissance annuelle US$ par habitant   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "0              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "1              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "2              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "3              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "4              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "238244         22011    Revenu national brut        2019   2019  millions   \n",
       "238245         22011    Revenu national brut        2019   2019       US$   \n",
       "238246         22011    Revenu national brut        2019   2019         %   \n",
       "238247         22011    Revenu national brut        2019   2019         %   \n",
       "238248         22011    Revenu national brut        2019   2019         %   \n",
       "\n",
       "               Valeur Symbole         Description du Symbole  Note  \n",
       "0       195740.846106       X  Sources internationales sûres   NaN  \n",
       "1         4141.523943       X  Sources internationales sûres   NaN  \n",
       "2          183.247028       X  Sources internationales sûres   NaN  \n",
       "3       458140.931411       X  Sources internationales sûres   NaN  \n",
       "4          331.532293       X  Sources internationales sûres   NaN  \n",
       "...               ...     ...                            ...   ...  \n",
       "238244   19835.846559       X  Sources internationales sûres   NaN  \n",
       "238245    1354.401687      Fc                Donnée calculée   NaN  \n",
       "238246     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238247     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238248     -13.875718      Fc                Donnée calculée   NaN  \n",
       "\n",
       "[238249 rows x 15 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#import data \"macro\"\n",
    "\n",
    "import pandas as pd\n",
    "data4= pd.read_csv(\"C:\\\\Users\\\\selin\\\\Documents\\\\AAAAOPENCLASSROOMS DATA ANALYST\\\\PROJET 9\\\\Livrables\\\\macro.csv\", encoding = 'utf-8', sep=\",\",  quotechar='\"')\n",
    "\n",
    "data4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "995f9e49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code Survey</th>\n",
       "      <th>Survey</th>\n",
       "      <th>Breakdown Variable Code</th>\n",
       "      <th>Breakdown Variable</th>\n",
       "      <th>Breadown by Sex of the Household Head Code</th>\n",
       "      <th>Breadown by Sex of the Household Head</th>\n",
       "      <th>Indicator Code</th>\n",
       "      <th>Indicator</th>\n",
       "      <th>Measure Code</th>\n",
       "      <th>Measure</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6076</td>\n",
       "      <td>Mean</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>6617.690</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6077</td>\n",
       "      <td>Median</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>5541.070</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6078</td>\n",
       "      <td>Standard Deviation</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>4375.790</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6079</td>\n",
       "      <td>Number Observations</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>3445.000</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20001</td>\n",
       "      <td>Female-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6076</td>\n",
       "      <td>Mean</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>7085.920</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148615</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6074</td>\n",
       "      <td>Share of food consumed away from home in total...</td>\n",
       "      <td>6079</td>\n",
       "      <td>Number Observations</td>\n",
       "      <td>%</td>\n",
       "      <td>2288.000</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148616</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6076</td>\n",
       "      <td>Mean</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>1002.190</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148617</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6077</td>\n",
       "      <td>Median</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>832.828</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148618</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6078</td>\n",
       "      <td>Standard Deviation</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>614.723</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148619</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6079</td>\n",
       "      <td>Number Observations</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>2288.000</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>148620 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine                                            Domaine  \\\n",
       "0                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "1                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "2                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "3                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "4                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "...             ...                                                ...   \n",
       "148615           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148616           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148617           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148618           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148619           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "\n",
       "        Code Survey              Survey  Breakdown Variable Code  \\\n",
       "0             32005      Albanie - 2005                    20008   \n",
       "1             32005      Albanie - 2005                    20008   \n",
       "2             32005      Albanie - 2005                    20008   \n",
       "3             32005      Albanie - 2005                    20008   \n",
       "4             32005      Albanie - 2005                    20008   \n",
       "...             ...                 ...                      ...   \n",
       "148615  25120022003  Zambie - 2002-2003                    20013   \n",
       "148616  25120022003  Zambie - 2002-2003                    20013   \n",
       "148617  25120022003  Zambie - 2002-2003                    20013   \n",
       "148618  25120022003  Zambie - 2002-2003                    20013   \n",
       "148619  25120022003  Zambie - 2002-2003                    20013   \n",
       "\n",
       "                                       Breakdown Variable  \\\n",
       "0                                           Country-level   \n",
       "1                                           Country-level   \n",
       "2                                           Country-level   \n",
       "3                                           Country-level   \n",
       "4                                           Country-level   \n",
       "...                                                   ...   \n",
       "148615  Education of adult women in household: At leas...   \n",
       "148616  Education of adult women in household: At leas...   \n",
       "148617  Education of adult women in household: At leas...   \n",
       "148618  Education of adult women in household: At leas...   \n",
       "148619  Education of adult women in household: At leas...   \n",
       "\n",
       "        Breadown by Sex of the Household Head Code  \\\n",
       "0                                            20002   \n",
       "1                                            20002   \n",
       "2                                            20002   \n",
       "3                                            20002   \n",
       "4                                            20001   \n",
       "...                                            ...   \n",
       "148615                                       20000   \n",
       "148616                                       20000   \n",
       "148617                                       20000   \n",
       "148618                                       20000   \n",
       "148619                                       20000   \n",
       "\n",
       "       Breadown by Sex of the Household Head  Indicator Code  \\\n",
       "0                      Male-headed household            6061   \n",
       "1                      Male-headed household            6061   \n",
       "2                      Male-headed household            6061   \n",
       "3                      Male-headed household            6061   \n",
       "4                    Female-headed household            6061   \n",
       "...                                      ...             ...   \n",
       "148615                                 Total            6074   \n",
       "148616                                 Total            6075   \n",
       "148617                                 Total            6075   \n",
       "148618                                 Total            6075   \n",
       "148619                                 Total            6075   \n",
       "\n",
       "                                                Indicator  Measure Code  \\\n",
       "0                     Total consumption in monetary value          6076   \n",
       "1                     Total consumption in monetary value          6077   \n",
       "2                     Total consumption in monetary value          6078   \n",
       "3                     Total consumption in monetary value          6079   \n",
       "4                     Total consumption in monetary value          6076   \n",
       "...                                                   ...           ...   \n",
       "148615  Share of food consumed away from home in total...          6079   \n",
       "148616                  Average dietary energy unit value          6076   \n",
       "148617                  Average dietary energy unit value          6077   \n",
       "148618                  Average dietary energy unit value          6078   \n",
       "148619                  Average dietary energy unit value          6079   \n",
       "\n",
       "                    Measure            Unité    Valeur Symbole  \\\n",
       "0                      Mean   LCU/person/day  6617.690      CS   \n",
       "1                    Median   LCU/person/day  5541.070      CS   \n",
       "2        Standard Deviation   LCU/person/day  4375.790      CS   \n",
       "3       Number Observations   LCU/person/day  3445.000      CS   \n",
       "4                      Mean   LCU/person/day  7085.920      CS   \n",
       "...                     ...              ...       ...     ...   \n",
       "148615  Number Observations                %  2288.000      CS   \n",
       "148616                 Mean  (LCU/1000 kcal)  1002.190      CS   \n",
       "148617               Median  (LCU/1000 kcal)   832.828      CS   \n",
       "148618   Standard Deviation  (LCU/1000 kcal)   614.723      CS   \n",
       "148619  Number Observations  (LCU/1000 kcal)  2288.000      CS   \n",
       "\n",
       "        Description du Symbole  \n",
       "0                          NaN  \n",
       "1                          NaN  \n",
       "2                          NaN  \n",
       "3                          NaN  \n",
       "4                          NaN  \n",
       "...                        ...  \n",
       "148615                     NaN  \n",
       "148616                     NaN  \n",
       "148617                     NaN  \n",
       "148618                     NaN  \n",
       "148619                     NaN  \n",
       "\n",
       "[148620 rows x 16 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#import data \"menage\"\n",
    "\n",
    "import pandas as pd\n",
    "data5= pd.read_csv(\"C:\\\\Users\\\\selin\\\\Documents\\\\AAAAOPENCLASSROOMS DATA ANALYST\\\\PROJET 9\\\\Livrables\\\\menage.csv\", sep = ',', quotechar='\"')\n",
    "\n",
    "data5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "af33d71c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 176600 entries, 0 to 176599\n",
      "Data columns (total 14 columns):\n",
      " #   Column                  Non-Null Count   Dtype  \n",
      "---  ------                  --------------   -----  \n",
      " 0   Code Domaine            176600 non-null  object \n",
      " 1   Domaine                 176600 non-null  object \n",
      " 2   Code zone               176600 non-null  int64  \n",
      " 3   Zone                    176600 non-null  object \n",
      " 4   Code Élément            176600 non-null  int64  \n",
      " 5   Élément                 176600 non-null  object \n",
      " 6   Code Produit            176600 non-null  int64  \n",
      " 7   Produit                 176600 non-null  object \n",
      " 8   Code année              176600 non-null  int64  \n",
      " 9   Année                   176600 non-null  int64  \n",
      " 10  Unité                   176600 non-null  object \n",
      " 11  Valeur                  176600 non-null  float64\n",
      " 12  Symbole                 176600 non-null  object \n",
      " 13  Description du Symbole  176600 non-null  object \n",
      "dtypes: float64(1), int64(5), object(8)\n",
      "memory usage: 18.9+ MB\n"
     ]
    }
   ],
   "source": [
    "#info colonnes data1 \n",
    "\n",
    "data1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "55bb36bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Milliers de tonnes', 'kg', 'Kcal/personne/jour',\n",
       "       'g/personne/jour'], dtype=object)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#analyse données colonnes \"Unité\" data1\n",
    "\n",
    "data1['Unité'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e35add9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Production', 'Importations - Quantité', 'Variation de stock',\n",
       "       'Exportations - Quantité', 'Disponibilité intérieure',\n",
       "       'Aliments pour animaux', 'Semences', 'Pertes', 'Résidus',\n",
       "       'Nourriture',\n",
       "       'Disponibilité alimentaire en quantité (kg/personne/an)',\n",
       "       'Disponibilité alimentaire (Kcal/personne/jour)',\n",
       "       'Disponibilité de protéines en quantité (g/personne/jour)',\n",
       "       'Disponibilité de matière grasse en quantité (g/personne/jour)',\n",
       "       'Traitement', 'Autres utilisations (non alimentaire)',\n",
       "       'Alimentation pour touristes'], dtype=object)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#analyse données colonnes \"Element\" data1\n",
    "\n",
    "data1['Élément'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d3327516",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Blé et produits', 'Riz et produits', 'Orge et produits',\n",
       "       'Maïs et produits', 'Seigle et produits', 'Avoine',\n",
       "       'Millet et produits', 'Sorgho et produits', 'Céréales, Autres',\n",
       "       'Pommes de Terre et produits', 'Ignames', 'Racines nda',\n",
       "       'Sucre, canne', 'Sucre, betterave', 'Sucre Eq Brut',\n",
       "       'Edulcorants Autres', 'Miel', 'Haricots', 'Pois',\n",
       "       'Légumineuses Autres et produits', 'Noix et produits', 'Soja',\n",
       "       'Arachides Decortiquees', 'Graines de tournesol',\n",
       "       'Graines Colza/Moutarde', 'Graines de coton', 'Coco (Incl Coprah)',\n",
       "       'Sésame', 'Olives', 'Plantes Oleiferes, Autre', 'Huile de Soja',\n",
       "       \"Huile d'Arachide\", 'Huile de Tournesol',\n",
       "       'Huile de Colza&Moutarde', 'Huile Graines de Coton',\n",
       "       'Huile de Palmistes', 'Huile de Palme', 'Huile de Coco',\n",
       "       'Huile de Sésame', \"Huile d'Olive\", 'Huile de Son de Riz',\n",
       "       'Huile de Germe de Maïs', 'Huil Plantes Oleif Autr',\n",
       "       'Tomates et produits', 'Oignons', 'Légumes, Autres',\n",
       "       'Oranges, Mandarines', 'Citrons & Limes et produits',\n",
       "       'Pamplemousse et produits', 'Agrumes, Autres', 'Bananes',\n",
       "       'Pommes et produits', 'Ananas et produits', 'Dattes', 'Raisin',\n",
       "       'Fruits, Autres', 'Café et produits', 'Feve de Cacao et produits',\n",
       "       'Thé', 'Poivre', 'Piments', 'Girofles', 'Épices, Autres', 'Vin',\n",
       "       'Bière', 'Boissons Fermentés', 'Boissons Alcooliques',\n",
       "       'Alcool, non Comestible', 'Viande de Bovins',\n",
       "       \"Viande d'Ovins/Caprins\", 'Viande de Suides',\n",
       "       'Viande de Volailles', 'Viande, Autre', 'Abats Comestible',\n",
       "       'Beurre, Ghee', 'Crème', 'Graisses Animales Crue', 'Oeufs',\n",
       "       'Lait - Excl Beurre', 'Poissons Eau Douce',\n",
       "       'Aliments pour enfants', 'Miscellanees', 'Manioc et produits',\n",
       "       'Patates douces', 'Palmistes', 'Bananes plantains',\n",
       "       'Huiles de Poissons', 'Huiles de Foie de Poisso', 'Perciform',\n",
       "       'Poissons Pelagiques', 'Poissons Marins, Autres', 'Crustacés',\n",
       "       'Cephalopodes', 'Mollusques, Autres', 'Animaux Aquatiques Autre',\n",
       "       'Plantes Aquatiques', 'Sucre non centrifugé',\n",
       "       'Viande de Anim Aquatiq'], dtype=object)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#analyse données colonnes \"Produit\" data1\n",
    "\n",
    "data1['Produit'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a646d48f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2017], dtype=int64)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#analyse données colonnes \"Année\" data1\n",
    "\n",
    "data1['Année'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4298d484",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4411 entries, 0 to 4410\n",
      "Data columns (total 15 columns):\n",
      " #   Column                  Non-Null Count  Dtype  \n",
      "---  ------                  --------------  -----  \n",
      " 0   Code Domaine            4411 non-null   object \n",
      " 1   Domaine                 4411 non-null   object \n",
      " 2   Code zone               4411 non-null   int64  \n",
      " 3   Zone                    4411 non-null   object \n",
      " 4   Code Élément            4411 non-null   int64  \n",
      " 5   Élément                 4411 non-null   object \n",
      " 6   Code Produit            4411 non-null   int64  \n",
      " 7   Produit                 4411 non-null   object \n",
      " 8   Code année              4411 non-null   int64  \n",
      " 9   Année                   4411 non-null   int64  \n",
      " 10  Unité                   4411 non-null   object \n",
      " 11  Valeur                  4411 non-null   float64\n",
      " 12  Symbole                 4411 non-null   object \n",
      " 13  Description du Symbole  4411 non-null   object \n",
      " 14  Note                    258 non-null    object \n",
      "dtypes: float64(1), int64(5), object(9)\n",
      "memory usage: 517.0+ KB\n"
     ]
    }
   ],
   "source": [
    "data2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c03854d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['1000 personnes'], dtype=object)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2['Unité'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2bef04ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Population-Estimations'], dtype=object)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2['Produit'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ff67d854",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Population totale'], dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2['Élément'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9129f493",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n",
       "       2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018], dtype=int64)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2['Année'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c411ea13",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#détecter si valeurs manquantes\n",
    "\n",
    "data1.isnull().any().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b10ad167",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Code Domaine              False\n",
       "Domaine                   False\n",
       "Code zone                 False\n",
       "Zone                      False\n",
       "Code Élément              False\n",
       "Élément                   False\n",
       "Code Produit              False\n",
       "Produit                   False\n",
       "Code année                False\n",
       "Année                     False\n",
       "Unité                     False\n",
       "Valeur                    False\n",
       "Symbole                   False\n",
       "Description du Symbole    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#détecter si valeurs manquantes\n",
    "\n",
    "data1.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ba693f0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#détecter si valeurs manquantes\n",
    "\n",
    "data2.isnull().any().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "64cc4941",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Code Domaine              False\n",
       "Domaine                   False\n",
       "Code zone                 False\n",
       "Zone                      False\n",
       "Code Élément              False\n",
       "Élément                   False\n",
       "Code Produit              False\n",
       "Produit                   False\n",
       "Code année                False\n",
       "Année                     False\n",
       "Unité                     False\n",
       "Valeur                    False\n",
       "Symbole                   False\n",
       "Description du Symbole    False\n",
       "Note                       True\n",
       "dtype: bool"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#détecter si valeurs manquantes\n",
    "\n",
    "data2.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "137d2fb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>4281.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5611</td>\n",
       "      <td>Importations - Quantité</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>2302.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5072</td>\n",
       "      <td>Variation de stock</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>-119.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5911</td>\n",
       "      <td>Exportations - Quantité</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>0.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5301</td>\n",
       "      <td>Disponibilité intérieure</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>6701.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176595</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>5142</td>\n",
       "      <td>Nourriture</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Milliers de tonnes</td>\n",
       "      <td>19.00</td>\n",
       "      <td>S</td>\n",
       "      <td>Données standardisées</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176596</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>645</td>\n",
       "      <td>Disponibilité alimentaire en quantité (kg/pers...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>kg</td>\n",
       "      <td>1.33</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176597</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>Kcal/personne/jour</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176598</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>674</td>\n",
       "      <td>Disponibilité de protéines en quantité (g/pers...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>0.04</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176599</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>0.02</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>176600 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine                      Domaine  Code zone         Zone  \\\n",
       "0               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "1               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "2               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "3               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "4               FBS  Nouveaux Bilans Alimentaire          2  Afghanistan   \n",
       "...             ...                          ...        ...          ...   \n",
       "176595          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176596          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176597          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176598          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "176599          FBS  Nouveaux Bilans Alimentaire        181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                            Élément  \\\n",
       "0               5511                                         Production   \n",
       "1               5611                            Importations - Quantité   \n",
       "2               5072                                 Variation de stock   \n",
       "3               5911                            Exportations - Quantité   \n",
       "4               5301                           Disponibilité intérieure   \n",
       "...              ...                                                ...   \n",
       "176595          5142                                         Nourriture   \n",
       "176596           645  Disponibilité alimentaire en quantité (kg/pers...   \n",
       "176597           664     Disponibilité alimentaire (Kcal/personne/jour)   \n",
       "176598           674  Disponibilité de protéines en quantité (g/pers...   \n",
       "176599           684  Disponibilité de matière grasse en quantité (g...   \n",
       "\n",
       "        Code Produit          Produit  Code année  Année               Unité  \\\n",
       "0               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "1               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "2               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "3               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "4               2511  Blé et produits        2017   2017  Milliers de tonnes   \n",
       "...              ...              ...         ...    ...                 ...   \n",
       "176595          2899     Miscellanees        2017   2017  Milliers de tonnes   \n",
       "176596          2899     Miscellanees        2017   2017                  kg   \n",
       "176597          2899     Miscellanees        2017   2017  Kcal/personne/jour   \n",
       "176598          2899     Miscellanees        2017   2017     g/personne/jour   \n",
       "176599          2899     Miscellanees        2017   2017     g/personne/jour   \n",
       "\n",
       "         Valeur Symbole Description du Symbole  \n",
       "0       4281.00       S  Données standardisées  \n",
       "1       2302.00       S  Données standardisées  \n",
       "2       -119.00       S  Données standardisées  \n",
       "3          0.00       S  Données standardisées  \n",
       "4       6701.00       S  Données standardisées  \n",
       "...         ...     ...                    ...  \n",
       "176595    19.00       S  Données standardisées  \n",
       "176596     1.33      Fc        Donnée calculée  \n",
       "176597     1.00      Fc        Donnée calculée  \n",
       "176598     0.04      Fc        Donnée calculée  \n",
       "176599     0.02      Fc        Donnée calculée  \n",
       "\n",
       "[176600 rows x 14 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "428057d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2000</td>\n",
       "      <td>2000</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>20779.953</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2001</td>\n",
       "      <td>2001</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>21606.988</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>22600.770</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2003</td>\n",
       "      <td>2003</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>23680.871</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2004</td>\n",
       "      <td>2004</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>24726.684</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4406</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2014</td>\n",
       "      <td>2014</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>13586.707</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4407</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2015</td>\n",
       "      <td>2015</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>13814.629</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4408</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2016</td>\n",
       "      <td>2016</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14030.331</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4409</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4410</th>\n",
       "      <td>OA</td>\n",
       "      <td>Séries temporelles annuelles</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14438.802</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4411 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Code Domaine                       Domaine  Code zone         Zone  \\\n",
       "0              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "1              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "2              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "3              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "4              OA  Séries temporelles annuelles          2  Afghanistan   \n",
       "...           ...                           ...        ...          ...   \n",
       "4406           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4407           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4408           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4409           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "4410           OA  Séries temporelles annuelles        181     Zimbabwe   \n",
       "\n",
       "      Code Élément            Élément  Code Produit                 Produit  \\\n",
       "0              511  Population totale          3010  Population-Estimations   \n",
       "1              511  Population totale          3010  Population-Estimations   \n",
       "2              511  Population totale          3010  Population-Estimations   \n",
       "3              511  Population totale          3010  Population-Estimations   \n",
       "4              511  Population totale          3010  Population-Estimations   \n",
       "...            ...                ...           ...                     ...   \n",
       "4406           511  Population totale          3010  Population-Estimations   \n",
       "4407           511  Population totale          3010  Population-Estimations   \n",
       "4408           511  Population totale          3010  Population-Estimations   \n",
       "4409           511  Population totale          3010  Population-Estimations   \n",
       "4410           511  Population totale          3010  Population-Estimations   \n",
       "\n",
       "      Code année  Année           Unité     Valeur Symbole  \\\n",
       "0           2000   2000  1000 personnes  20779.953       X   \n",
       "1           2001   2001  1000 personnes  21606.988       X   \n",
       "2           2002   2002  1000 personnes  22600.770       X   \n",
       "3           2003   2003  1000 personnes  23680.871       X   \n",
       "4           2004   2004  1000 personnes  24726.684       X   \n",
       "...          ...    ...             ...        ...     ...   \n",
       "4406        2014   2014  1000 personnes  13586.707       X   \n",
       "4407        2015   2015  1000 personnes  13814.629       X   \n",
       "4408        2016   2016  1000 personnes  14030.331       X   \n",
       "4409        2017   2017  1000 personnes  14236.595       X   \n",
       "4410        2018   2018  1000 personnes  14438.802       X   \n",
       "\n",
       "             Description du Symbole Note  \n",
       "0     Sources internationales sûres  NaN  \n",
       "1     Sources internationales sûres  NaN  \n",
       "2     Sources internationales sûres  NaN  \n",
       "3     Sources internationales sûres  NaN  \n",
       "4     Sources internationales sûres  NaN  \n",
       "...                             ...  ...  \n",
       "4406  Sources internationales sûres  NaN  \n",
       "4407  Sources internationales sûres  NaN  \n",
       "4408  Sources internationales sûres  NaN  \n",
       "4409  Sources internationales sûres  NaN  \n",
       "4410  Sources internationales sûres  NaN  \n",
       "\n",
       "[4411 rows x 15 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "80c35431",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20002002</td>\n",
       "      <td>2000-2002</td>\n",
       "      <td>%</td>\n",
       "      <td>87</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20012003</td>\n",
       "      <td>2001-2003</td>\n",
       "      <td>%</td>\n",
       "      <td>88</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20022004</td>\n",
       "      <td>2002-2004</td>\n",
       "      <td>%</td>\n",
       "      <td>91</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20032005</td>\n",
       "      <td>2003-2005</td>\n",
       "      <td>%</td>\n",
       "      <td>92</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6121</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21010</td>\n",
       "      <td>Suffisance des apports énergétiques alimentair...</td>\n",
       "      <td>20042006</td>\n",
       "      <td>2004-2006</td>\n",
       "      <td>%</td>\n",
       "      <td>92</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120693</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20122014</td>\n",
       "      <td>2012-2014</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>56.3</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120694</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20132015</td>\n",
       "      <td>2013-2015</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>54.3</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120695</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20142016</td>\n",
       "      <td>2014-2016</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>52.3</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120696</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20152017</td>\n",
       "      <td>2015-2017</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>51.7</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120697</th>\n",
       "      <td>FS</td>\n",
       "      <td>Données de lasécurité alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6123</td>\n",
       "      <td>Valeur</td>\n",
       "      <td>21061</td>\n",
       "      <td>Disponibilités moyennes de matière grasse (g/p...</td>\n",
       "      <td>20162018</td>\n",
       "      <td>2016-2018</td>\n",
       "      <td>g/personne/jour</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>Estimation FAO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120698 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine                            Domaine  Code zone (FAO)  \\\n",
       "0                FS  Données de lasécurité alimentaire                2   \n",
       "1                FS  Données de lasécurité alimentaire                2   \n",
       "2                FS  Données de lasécurité alimentaire                2   \n",
       "3                FS  Données de lasécurité alimentaire                2   \n",
       "4                FS  Données de lasécurité alimentaire                2   \n",
       "...             ...                                ...              ...   \n",
       "120693           FS  Données de lasécurité alimentaire              181   \n",
       "120694           FS  Données de lasécurité alimentaire              181   \n",
       "120695           FS  Données de lasécurité alimentaire              181   \n",
       "120696           FS  Données de lasécurité alimentaire              181   \n",
       "120697           FS  Données de lasécurité alimentaire              181   \n",
       "\n",
       "               Zone  Code Élément Élément  Code Produit  \\\n",
       "0       Afghanistan          6121  Valeur         21010   \n",
       "1       Afghanistan          6121  Valeur         21010   \n",
       "2       Afghanistan          6121  Valeur         21010   \n",
       "3       Afghanistan          6121  Valeur         21010   \n",
       "4       Afghanistan          6121  Valeur         21010   \n",
       "...             ...           ...     ...           ...   \n",
       "120693     Zimbabwe          6123  Valeur         21061   \n",
       "120694     Zimbabwe          6123  Valeur         21061   \n",
       "120695     Zimbabwe          6123  Valeur         21061   \n",
       "120696     Zimbabwe          6123  Valeur         21061   \n",
       "120697     Zimbabwe          6123  Valeur         21061   \n",
       "\n",
       "                                                  Produit  Code année  \\\n",
       "0       Suffisance des apports énergétiques alimentair...    20002002   \n",
       "1       Suffisance des apports énergétiques alimentair...    20012003   \n",
       "2       Suffisance des apports énergétiques alimentair...    20022004   \n",
       "3       Suffisance des apports énergétiques alimentair...    20032005   \n",
       "4       Suffisance des apports énergétiques alimentair...    20042006   \n",
       "...                                                   ...         ...   \n",
       "120693  Disponibilités moyennes de matière grasse (g/p...    20122014   \n",
       "120694  Disponibilités moyennes de matière grasse (g/p...    20132015   \n",
       "120695  Disponibilités moyennes de matière grasse (g/p...    20142016   \n",
       "120696  Disponibilités moyennes de matière grasse (g/p...    20152017   \n",
       "120697  Disponibilités moyennes de matière grasse (g/p...    20162018   \n",
       "\n",
       "            Année            Unité Valeur Symbole Description du Symbole  Note  \n",
       "0       2000-2002                %     87       F         Estimation FAO   NaN  \n",
       "1       2001-2003                %     88       F         Estimation FAO   NaN  \n",
       "2       2002-2004                %     91       F         Estimation FAO   NaN  \n",
       "3       2003-2005                %     92       F         Estimation FAO   NaN  \n",
       "4       2004-2006                %     92       F         Estimation FAO   NaN  \n",
       "...           ...              ...    ...     ...                    ...   ...  \n",
       "120693  2012-2014  g/personne/jour   56.3       F         Estimation FAO   NaN  \n",
       "120694  2013-2015  g/personne/jour   54.3       F         Estimation FAO   NaN  \n",
       "120695  2014-2016  g/personne/jour   52.3       F         Estimation FAO   NaN  \n",
       "120696  2015-2017  g/personne/jour   51.7       F         Estimation FAO   NaN  \n",
       "120697  2016-2018  g/personne/jour     51       F         Estimation FAO   NaN  \n",
       "\n",
       "[120698 rows x 15 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "36937fa9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>195740.846106</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>4141.523943</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>183.247028</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>458140.931411</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>331.532293</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238244</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>millions</td>\n",
       "      <td>19835.846559</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238245</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>US$</td>\n",
       "      <td>1354.401687</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238246</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6155</td>\n",
       "      <td>Croissance annuelle en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238247</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238248</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-13.875718</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>238249 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "0                MK  Indicateurs macro                2  Afghanistan   \n",
       "1                MK  Indicateurs macro                2  Afghanistan   \n",
       "2                MK  Indicateurs macro                2  Afghanistan   \n",
       "3                MK  Indicateurs macro                2  Afghanistan   \n",
       "4                MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "238244           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238245           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238246           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238247           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238248           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                     Élément  \\\n",
       "0               6109                     Valeur en devise locale   \n",
       "1               6110                                 Valeur US $   \n",
       "2               6119                    Valeur US $ par habitant   \n",
       "3               6183   Valeur en devise locale, aux prix de 2015   \n",
       "4               6185  Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                         ...   \n",
       "238244          6110                                 Valeur US $   \n",
       "238245          6119                    Valeur US $ par habitant   \n",
       "238246          6155        Croissance annuelle en devise locale   \n",
       "238247          6129                     Croissance annuelle US$   \n",
       "238248         61290        Croissance annuelle US$ par habitant   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "0              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "1              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "2              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "3              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "4              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "238244         22011    Revenu national brut        2019   2019  millions   \n",
       "238245         22011    Revenu national brut        2019   2019       US$   \n",
       "238246         22011    Revenu national brut        2019   2019         %   \n",
       "238247         22011    Revenu national brut        2019   2019         %   \n",
       "238248         22011    Revenu national brut        2019   2019         %   \n",
       "\n",
       "               Valeur Symbole         Description du Symbole  Note  \n",
       "0       195740.846106       X  Sources internationales sûres   NaN  \n",
       "1         4141.523943       X  Sources internationales sûres   NaN  \n",
       "2          183.247028       X  Sources internationales sûres   NaN  \n",
       "3       458140.931411       X  Sources internationales sûres   NaN  \n",
       "4          331.532293       X  Sources internationales sûres   NaN  \n",
       "...               ...     ...                            ...   ...  \n",
       "238244   19835.846559       X  Sources internationales sûres   NaN  \n",
       "238245    1354.401687      Fc                Donnée calculée   NaN  \n",
       "238246     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238247     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238248     -13.875718      Fc                Donnée calculée   NaN  \n",
       "\n",
       "[238249 rows x 15 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b34f4e1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code Survey</th>\n",
       "      <th>Survey</th>\n",
       "      <th>Breakdown Variable Code</th>\n",
       "      <th>Breakdown Variable</th>\n",
       "      <th>Breadown by Sex of the Household Head Code</th>\n",
       "      <th>Breadown by Sex of the Household Head</th>\n",
       "      <th>Indicator Code</th>\n",
       "      <th>Indicator</th>\n",
       "      <th>Measure Code</th>\n",
       "      <th>Measure</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6076</td>\n",
       "      <td>Mean</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>6617.690</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6077</td>\n",
       "      <td>Median</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>5541.070</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6078</td>\n",
       "      <td>Standard Deviation</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>4375.790</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20002</td>\n",
       "      <td>Male-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6079</td>\n",
       "      <td>Number Observations</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>3445.000</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>32005</td>\n",
       "      <td>Albanie - 2005</td>\n",
       "      <td>20008</td>\n",
       "      <td>Country-level</td>\n",
       "      <td>20001</td>\n",
       "      <td>Female-headed household</td>\n",
       "      <td>6061</td>\n",
       "      <td>Total consumption in monetary value</td>\n",
       "      <td>6076</td>\n",
       "      <td>Mean</td>\n",
       "      <td>LCU/person/day</td>\n",
       "      <td>7085.920</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148615</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6074</td>\n",
       "      <td>Share of food consumed away from home in total...</td>\n",
       "      <td>6079</td>\n",
       "      <td>Number Observations</td>\n",
       "      <td>%</td>\n",
       "      <td>2288.000</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148616</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6076</td>\n",
       "      <td>Mean</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>1002.190</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148617</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6077</td>\n",
       "      <td>Median</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>832.828</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148618</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6078</td>\n",
       "      <td>Standard Deviation</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>614.723</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148619</th>\n",
       "      <td>HS</td>\n",
       "      <td>Indicateurs d’enquêtes sur les ménages (sexe, ...</td>\n",
       "      <td>25120022003</td>\n",
       "      <td>Zambie - 2002-2003</td>\n",
       "      <td>20013</td>\n",
       "      <td>Education of adult women in household: At leas...</td>\n",
       "      <td>20000</td>\n",
       "      <td>Total</td>\n",
       "      <td>6075</td>\n",
       "      <td>Average dietary energy unit value</td>\n",
       "      <td>6079</td>\n",
       "      <td>Number Observations</td>\n",
       "      <td>(LCU/1000 kcal)</td>\n",
       "      <td>2288.000</td>\n",
       "      <td>CS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>148620 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine                                            Domaine  \\\n",
       "0                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "1                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "2                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "3                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "4                HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "...             ...                                                ...   \n",
       "148615           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148616           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148617           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148618           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "148619           HS  Indicateurs d’enquêtes sur les ménages (sexe, ...   \n",
       "\n",
       "        Code Survey              Survey  Breakdown Variable Code  \\\n",
       "0             32005      Albanie - 2005                    20008   \n",
       "1             32005      Albanie - 2005                    20008   \n",
       "2             32005      Albanie - 2005                    20008   \n",
       "3             32005      Albanie - 2005                    20008   \n",
       "4             32005      Albanie - 2005                    20008   \n",
       "...             ...                 ...                      ...   \n",
       "148615  25120022003  Zambie - 2002-2003                    20013   \n",
       "148616  25120022003  Zambie - 2002-2003                    20013   \n",
       "148617  25120022003  Zambie - 2002-2003                    20013   \n",
       "148618  25120022003  Zambie - 2002-2003                    20013   \n",
       "148619  25120022003  Zambie - 2002-2003                    20013   \n",
       "\n",
       "                                       Breakdown Variable  \\\n",
       "0                                           Country-level   \n",
       "1                                           Country-level   \n",
       "2                                           Country-level   \n",
       "3                                           Country-level   \n",
       "4                                           Country-level   \n",
       "...                                                   ...   \n",
       "148615  Education of adult women in household: At leas...   \n",
       "148616  Education of adult women in household: At leas...   \n",
       "148617  Education of adult women in household: At leas...   \n",
       "148618  Education of adult women in household: At leas...   \n",
       "148619  Education of adult women in household: At leas...   \n",
       "\n",
       "        Breadown by Sex of the Household Head Code  \\\n",
       "0                                            20002   \n",
       "1                                            20002   \n",
       "2                                            20002   \n",
       "3                                            20002   \n",
       "4                                            20001   \n",
       "...                                            ...   \n",
       "148615                                       20000   \n",
       "148616                                       20000   \n",
       "148617                                       20000   \n",
       "148618                                       20000   \n",
       "148619                                       20000   \n",
       "\n",
       "       Breadown by Sex of the Household Head  Indicator Code  \\\n",
       "0                      Male-headed household            6061   \n",
       "1                      Male-headed household            6061   \n",
       "2                      Male-headed household            6061   \n",
       "3                      Male-headed household            6061   \n",
       "4                    Female-headed household            6061   \n",
       "...                                      ...             ...   \n",
       "148615                                 Total            6074   \n",
       "148616                                 Total            6075   \n",
       "148617                                 Total            6075   \n",
       "148618                                 Total            6075   \n",
       "148619                                 Total            6075   \n",
       "\n",
       "                                                Indicator  Measure Code  \\\n",
       "0                     Total consumption in monetary value          6076   \n",
       "1                     Total consumption in monetary value          6077   \n",
       "2                     Total consumption in monetary value          6078   \n",
       "3                     Total consumption in monetary value          6079   \n",
       "4                     Total consumption in monetary value          6076   \n",
       "...                                                   ...           ...   \n",
       "148615  Share of food consumed away from home in total...          6079   \n",
       "148616                  Average dietary energy unit value          6076   \n",
       "148617                  Average dietary energy unit value          6077   \n",
       "148618                  Average dietary energy unit value          6078   \n",
       "148619                  Average dietary energy unit value          6079   \n",
       "\n",
       "                    Measure            Unité    Valeur Symbole  \\\n",
       "0                      Mean   LCU/person/day  6617.690      CS   \n",
       "1                    Median   LCU/person/day  5541.070      CS   \n",
       "2        Standard Deviation   LCU/person/day  4375.790      CS   \n",
       "3       Number Observations   LCU/person/day  3445.000      CS   \n",
       "4                      Mean   LCU/person/day  7085.920      CS   \n",
       "...                     ...              ...       ...     ...   \n",
       "148615  Number Observations                %  2288.000      CS   \n",
       "148616                 Mean  (LCU/1000 kcal)  1002.190      CS   \n",
       "148617               Median  (LCU/1000 kcal)   832.828      CS   \n",
       "148618   Standard Deviation  (LCU/1000 kcal)   614.723      CS   \n",
       "148619  Number Observations  (LCU/1000 kcal)  2288.000      CS   \n",
       "\n",
       "        Description du Symbole  \n",
       "0                          NaN  \n",
       "1                          NaN  \n",
       "2                          NaN  \n",
       "3                          NaN  \n",
       "4                          NaN  \n",
       "...                        ...  \n",
       "148615                     NaN  \n",
       "148616                     NaN  \n",
       "148617                     NaN  \n",
       "148618                     NaN  \n",
       "148619                     NaN  \n",
       "\n",
       "[148620 rows x 16 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "a370bb05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Code Élément_y</th>\n",
       "      <th>Élément_y</th>\n",
       "      <th>Code Produit_y</th>\n",
       "      <th>Produit_y</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5611</td>\n",
       "      <td>Importations - Quantité</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5072</td>\n",
       "      <td>Variation de stock</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5911</td>\n",
       "      <td>Exportations - Quantité</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5301</td>\n",
       "      <td>Disponibilité intérieure</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176595</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>5142</td>\n",
       "      <td>Nourriture</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176596</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>645</td>\n",
       "      <td>Disponibilité alimentaire en quantité (kg/pers...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176597</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176598</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>674</td>\n",
       "      <td>Disponibilité de protéines en quantité (g/pers...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176599</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>176600 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine_x                    Domaine_x  Code zone_x         Zone  \\\n",
       "0                 FBS  Nouveaux Bilans Alimentaire            2  Afghanistan   \n",
       "1                 FBS  Nouveaux Bilans Alimentaire            2  Afghanistan   \n",
       "2                 FBS  Nouveaux Bilans Alimentaire            2  Afghanistan   \n",
       "3                 FBS  Nouveaux Bilans Alimentaire            2  Afghanistan   \n",
       "4                 FBS  Nouveaux Bilans Alimentaire            2  Afghanistan   \n",
       "...               ...                          ...          ...          ...   \n",
       "176595            FBS  Nouveaux Bilans Alimentaire          181     Zimbabwe   \n",
       "176596            FBS  Nouveaux Bilans Alimentaire          181     Zimbabwe   \n",
       "176597            FBS  Nouveaux Bilans Alimentaire          181     Zimbabwe   \n",
       "176598            FBS  Nouveaux Bilans Alimentaire          181     Zimbabwe   \n",
       "176599            FBS  Nouveaux Bilans Alimentaire          181     Zimbabwe   \n",
       "\n",
       "        Code Élément_x                                          Élément_x  \\\n",
       "0                 5511                                         Production   \n",
       "1                 5611                            Importations - Quantité   \n",
       "2                 5072                                 Variation de stock   \n",
       "3                 5911                            Exportations - Quantité   \n",
       "4                 5301                           Disponibilité intérieure   \n",
       "...                ...                                                ...   \n",
       "176595            5142                                         Nourriture   \n",
       "176596             645  Disponibilité alimentaire en quantité (kg/pers...   \n",
       "176597             664     Disponibilité alimentaire (Kcal/personne/jour)   \n",
       "176598             674  Disponibilité de protéines en quantité (g/pers...   \n",
       "176599             684  Disponibilité de matière grasse en quantité (g...   \n",
       "\n",
       "        Code Produit_x        Produit_x  Code année_x  Année  ...  \\\n",
       "0                 2511  Blé et produits          2017   2017  ...   \n",
       "1                 2511  Blé et produits          2017   2017  ...   \n",
       "2                 2511  Blé et produits          2017   2017  ...   \n",
       "3                 2511  Blé et produits          2017   2017  ...   \n",
       "4                 2511  Blé et produits          2017   2017  ...   \n",
       "...                ...              ...           ...    ...  ...   \n",
       "176595            2899     Miscellanees          2017   2017  ...   \n",
       "176596            2899     Miscellanees          2017   2017  ...   \n",
       "176597            2899     Miscellanees          2017   2017  ...   \n",
       "176598            2899     Miscellanees          2017   2017  ...   \n",
       "176599            2899     Miscellanees          2017   2017  ...   \n",
       "\n",
       "       Code Élément_y          Élément_y Code Produit_y  \\\n",
       "0                 511  Population totale           3010   \n",
       "1                 511  Population totale           3010   \n",
       "2                 511  Population totale           3010   \n",
       "3                 511  Population totale           3010   \n",
       "4                 511  Population totale           3010   \n",
       "...               ...                ...            ...   \n",
       "176595            511  Population totale           3010   \n",
       "176596            511  Population totale           3010   \n",
       "176597            511  Population totale           3010   \n",
       "176598            511  Population totale           3010   \n",
       "176599            511  Population totale           3010   \n",
       "\n",
       "                     Produit_y Code année_y         Unité_y   Valeur_y  \\\n",
       "0       Population-Estimations         2017  1000 personnes  36296.113   \n",
       "1       Population-Estimations         2017  1000 personnes  36296.113   \n",
       "2       Population-Estimations         2017  1000 personnes  36296.113   \n",
       "3       Population-Estimations         2017  1000 personnes  36296.113   \n",
       "4       Population-Estimations         2017  1000 personnes  36296.113   \n",
       "...                        ...          ...             ...        ...   \n",
       "176595  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "176596  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "176597  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "176598  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "176599  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "\n",
       "        Symbole_y       Description du Symbole_y  Note  \n",
       "0               X  Sources internationales sûres   NaN  \n",
       "1               X  Sources internationales sûres   NaN  \n",
       "2               X  Sources internationales sûres   NaN  \n",
       "3               X  Sources internationales sûres   NaN  \n",
       "4               X  Sources internationales sûres   NaN  \n",
       "...           ...                            ...   ...  \n",
       "176595          X  Sources internationales sûres   NaN  \n",
       "176596          X  Sources internationales sûres   NaN  \n",
       "176597          X  Sources internationales sûres   NaN  \n",
       "176598          X  Sources internationales sûres   NaN  \n",
       "176599          X  Sources internationales sûres   NaN  \n",
       "\n",
       "[176600 rows x 27 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#jointure data 1 dispo alimentaire  et data 2 population\n",
    "\n",
    "union1 = pd.merge(data1,data2, how=\"left\", on=[\"Zone\", \"Année\"])\n",
    "union1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "1de0bca8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2000-2002', '2001-2003', '2002-2004', '2003-2005', '2004-2006',\n",
       "       '2005-2007', '2006-2008', '2007-2009', '2008-2010', '2009-2011',\n",
       "       '2010-2012', '2011-2013', '2012-2014', '2013-2015', '2014-2016',\n",
       "       '2015-2017', '2016-2018', '2017-2019', '2018-2020', '2002', '2003',\n",
       "       '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011',\n",
       "       '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019',\n",
       "       '2020', '2000', '2001'], dtype=object)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3[\"Année\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "afbb0023",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Suffisance des apports énergétiques alimentaires moyens (%) (moyenne sur 3 ans)',\n",
       "       'Valeur moyenne de la production alimentaire ($I constants par personne) (moyenne sur 3 ans)',\n",
       "       \"Disponibilité alimentaire par habitant utilisée dans l'estimation de la prévalence de la sous-alimentation (kcal/personne/jour) (moyenne sur 3 ans)\",\n",
       "       'Part des céréales, des racines et des tubercules dans les apports énergétiques alimentaires (%) (moyenne sur 3 ans)',\n",
       "       'Disponibilités protéiques moyennes (g/personne/jour) (moyenne sur 3 ans)',\n",
       "       'Disponibilités protéines moyennes d’origine animale (g/personne/jour) (moyenne sur 3 ans)',\n",
       "       'PIB par habitant, ($ PPA internationaux constants de 2011)',\n",
       "       'Prévalence de la sous-alimentation (%) (moyenne sur 3 ans)',\n",
       "       'Nombre de personnes sous-alimentées (millions) (moyenne sur 3 ans)',\n",
       "       'Prévalence de l’insécurité alimentaire grave – population totale (%) (moyenne sur 3 ans)',\n",
       "       'Prévalence de l’insécurité alimentaire modérée ou grave – population totale (%) (moyenne sur 3 ans)',\n",
       "       'Nombre de personnes en situation d’insécurité alimentaire grave (millions) (moyenne sur 3 ans)',\n",
       "       'Nombre de personnes en situation d’insécurité alimentaire modérée ou grave (millions) (moyenne sur 3 ans)',\n",
       "       \"Taux de dépendance à l'égard des importations céréalières (%) (moyenne sur 3 ans)\",\n",
       "       \"Pourcentage des terres arables aménagées pour l'irrigation (%) (moyenne sur 3 ans)\",\n",
       "       'Valeur des importations alimentaires par rapport aux exportations totales de marchandises (%) (moyenne sur 3 ans)',\n",
       "       'Stabilité politique et absence de violence/terrorisme (indice)',\n",
       "       'Variabilité de la production alimentaire par habitant ($I par personne constant 2004-06)',\n",
       "       'Variabilité des disponibilités alimentaires par habitant (Kcal/personne/jour)',\n",
       "       \"Pourcentage de la population ayant accès à des services d'eau potable gérés en toute sécurité\",\n",
       "       \"Pourcentage de la population utilisant au moins les services d'eau de base\",\n",
       "       \"Pourcentage de la population utilisant au moins les services d'assainissement de base\",\n",
       "       'Pourcentage des enfants de moins de 5 ans émaciés (%)',\n",
       "       \"Nombre d'enfants de moins de 5 ans émaciés (millions)\",\n",
       "       'Pourcentage des enfants de moins de 5 ans présentant un retard de croissance (estimation modélisée) (%)',\n",
       "       \"Nombre d'enfants de moins de 5 ans présentant un retard de croissance (estimation modélisée) (millions)\",\n",
       "       \"Prévalence de l'excès pondéral chez l’enfant de moins de 5 ans (estimation modélisée) (%)\",\n",
       "       \"Nombre d'enfants de moins de 5 ans présentant un excès pondéral (estimation modélisée) (millions)\",\n",
       "       \"Prévalence de l'obésité chez l'adulte (18 ans ou plus)\",\n",
       "       \"Nombre d'adultes (18 ans ou plus) obèses (millions)\",\n",
       "       \"Prévalence de l'anémie chez la femme en âge de procréer (15-49 ans)\",\n",
       "       'Nombre de femmes en âge de procréer (15-49 ans) anémiques (millions)',\n",
       "       \"Prévalence de l'allaitement exclusif au sein du nourrisson de 0 à 5 mois\",\n",
       "       'Besoins énergétiques alimentaires minimaux (kcal/personne/jour)',\n",
       "       'Besoins énergétiques alimentaires moyens (kcal/personne/jour)',\n",
       "       'Coefficient de variation de la distribution de la consommation calorique habituelle (vraie valeur)',\n",
       "       'Incidence des pertes caloriques au niveau de la vente au détail (%)',\n",
       "       'Disponibilités moyennes de matière grasse (g/personne/jour) (moyenne sur 3 ans)',\n",
       "       'Densité du réseau ferroviaire (pour 100 km carrés de surface totale du pays)',\n",
       "       \"Prévalence de l'insuffisance pondérale à la naissance (%)\",\n",
       "       'Nombre de nouveaux-nés en insuffisance pondérale (millions)',\n",
       "       \"Pourcentage de la population ayant accès à des services d'assainissement gérés en toute sécurité\"],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3['Produit'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0f1572b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>195740.846106</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>4141.523943</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>183.247028</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>458140.931411</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>331.532293</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238244</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>millions</td>\n",
       "      <td>19835.846559</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238245</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>US$</td>\n",
       "      <td>1354.401687</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238246</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6155</td>\n",
       "      <td>Croissance annuelle en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238247</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238248</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-13.875718</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>238249 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "0                MK  Indicateurs macro                2  Afghanistan   \n",
       "1                MK  Indicateurs macro                2  Afghanistan   \n",
       "2                MK  Indicateurs macro                2  Afghanistan   \n",
       "3                MK  Indicateurs macro                2  Afghanistan   \n",
       "4                MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "238244           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238245           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238246           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238247           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238248           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                     Élément  \\\n",
       "0               6109                     Valeur en devise locale   \n",
       "1               6110                                 Valeur US $   \n",
       "2               6119                    Valeur US $ par habitant   \n",
       "3               6183   Valeur en devise locale, aux prix de 2015   \n",
       "4               6185  Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                         ...   \n",
       "238244          6110                                 Valeur US $   \n",
       "238245          6119                    Valeur US $ par habitant   \n",
       "238246          6155        Croissance annuelle en devise locale   \n",
       "238247          6129                     Croissance annuelle US$   \n",
       "238248         61290        Croissance annuelle US$ par habitant   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "0              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "1              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "2              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "3              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "4              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "238244         22011    Revenu national brut        2019   2019  millions   \n",
       "238245         22011    Revenu national brut        2019   2019       US$   \n",
       "238246         22011    Revenu national brut        2019   2019         %   \n",
       "238247         22011    Revenu national brut        2019   2019         %   \n",
       "238248         22011    Revenu national brut        2019   2019         %   \n",
       "\n",
       "               Valeur Symbole         Description du Symbole  Note  \n",
       "0       195740.846106       X  Sources internationales sûres   NaN  \n",
       "1         4141.523943       X  Sources internationales sûres   NaN  \n",
       "2          183.247028       X  Sources internationales sûres   NaN  \n",
       "3       458140.931411       X  Sources internationales sûres   NaN  \n",
       "4          331.532293       X  Sources internationales sûres   NaN  \n",
       "...               ...     ...                            ...   ...  \n",
       "238244   19835.846559       X  Sources internationales sûres   NaN  \n",
       "238245    1354.401687      Fc                Donnée calculée   NaN  \n",
       "238246     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238247     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238248     -13.875718      Fc                Donnée calculée   NaN  \n",
       "\n",
       "[238249 rows x 15 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8a8527a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Produit Intérieur Brut', 'Formation brute de capital fixe',\n",
       "       'Valeur ajoutée (agriculture, sylviculture et pêche)',\n",
       "       'Valeur ajoutée (Industrie manufacturière)',\n",
       "       'Revenu national brut',\n",
       "       'Valeur ajoutée (Fabrication de produits alimentaires, boissons et de produits à base de tabac)',\n",
       "       'Valeur ajoutée (Fabrication de produits alimentaires et boissons)',\n",
       "       'Valeur ajoutée (Fabrication de produits à base de tabac)',\n",
       "       'Production brute (Agriculture, Sylviculture et Pêche)',\n",
       "       'Valeur ajoutée (Agriculture)', 'Production brute (Agriculture)'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data4['Produit'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ab6a8e56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6110.0</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.862303e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6119.0</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>US$</td>\n",
       "      <td>5.130860e+02</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6183.0</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.193944e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6185.0</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>US$</td>\n",
       "      <td>5.379896e+02</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584679</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6110.0</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22011.0</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.007960e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584680</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6119.0</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22011.0</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>US$</td>\n",
       "      <td>1.410421e+03</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584681</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6155.0</td>\n",
       "      <td>Croissance annuelle en devise locale</td>\n",
       "      <td>22011.0</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>%</td>\n",
       "      <td>6.960250e+00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584682</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>6129.0</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22011.0</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>%</td>\n",
       "      <td>6.960250e+00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584683</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>61290.0</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22011.0</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>%</td>\n",
       "      <td>5.410578e+00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11584684 rows × 40 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584679            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584680            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584681            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584682            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584683            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584679     Zimbabwe             684   \n",
       "11584680     Zimbabwe             684   \n",
       "11584681     Zimbabwe             684   \n",
       "11584682     Zimbabwe             684   \n",
       "11584683     Zimbabwe             684   \n",
       "\n",
       "                                                  Élément_x  Code Produit_x  \\\n",
       "0                                                Production            2511   \n",
       "1                                                Production            2511   \n",
       "2                                                Production            2511   \n",
       "3                                                Production            2511   \n",
       "4                                                Production            2511   \n",
       "...                                                     ...             ...   \n",
       "11584679  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584680  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584681  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584682  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584683  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ... Code Élément  \\\n",
       "0         Blé et produits          2017   2017  ...       6109.0   \n",
       "1         Blé et produits          2017   2017  ...       6110.0   \n",
       "2         Blé et produits          2017   2017  ...       6119.0   \n",
       "3         Blé et produits          2017   2017  ...       6183.0   \n",
       "4         Blé et produits          2017   2017  ...       6185.0   \n",
       "...                   ...           ...    ...  ...          ...   \n",
       "11584679     Miscellanees          2017   2017  ...       6110.0   \n",
       "11584680     Miscellanees          2017   2017  ...       6119.0   \n",
       "11584681     Miscellanees          2017   2017  ...       6155.0   \n",
       "11584682     Miscellanees          2017   2017  ...       6129.0   \n",
       "11584683     Miscellanees          2017   2017  ...      61290.0   \n",
       "\n",
       "                                             Élément Code Produit  \\\n",
       "0                            Valeur en devise locale      22008.0   \n",
       "1                                        Valeur US $      22008.0   \n",
       "2                           Valeur US $ par habitant      22008.0   \n",
       "3          Valeur en devise locale, aux prix de 2015      22008.0   \n",
       "4         Valeur US $ par habitant, aux prix du 2015      22008.0   \n",
       "...                                              ...          ...   \n",
       "11584679                                 Valeur US $      22011.0   \n",
       "11584680                    Valeur US $ par habitant      22011.0   \n",
       "11584681        Croissance annuelle en devise locale      22011.0   \n",
       "11584682                     Croissance annuelle US$      22011.0   \n",
       "11584683        Croissance annuelle US$ par habitant      22011.0   \n",
       "\n",
       "                         Produit Code année     Unité        Valeur  Symbole  \\\n",
       "0         Produit Intérieur Brut     2017.0  millions  1.266867e+06        X   \n",
       "1         Produit Intérieur Brut     2017.0  millions  1.862303e+04        X   \n",
       "2         Produit Intérieur Brut     2017.0       US$  5.130860e+02        X   \n",
       "3         Produit Intérieur Brut     2017.0  millions  1.193944e+06        X   \n",
       "4         Produit Intérieur Brut     2017.0       US$  5.379896e+02        X   \n",
       "...                          ...        ...       ...           ...      ...   \n",
       "11584679    Revenu national brut     2017.0  millions  2.007960e+04        X   \n",
       "11584680    Revenu national brut     2017.0       US$  1.410421e+03       Fc   \n",
       "11584681    Revenu national brut     2017.0         %  6.960250e+00       Fc   \n",
       "11584682    Revenu national brut     2017.0         %  6.960250e+00       Fc   \n",
       "11584683    Revenu national brut     2017.0         %  5.410578e+00       Fc   \n",
       "\n",
       "                 Description du Symbole  Note_y  \n",
       "0         Sources internationales sûres     NaN  \n",
       "1         Sources internationales sûres     NaN  \n",
       "2         Sources internationales sûres     NaN  \n",
       "3         Sources internationales sûres     NaN  \n",
       "4         Sources internationales sûres     NaN  \n",
       "...                                 ...     ...  \n",
       "11584679  Sources internationales sûres     NaN  \n",
       "11584680                Donnée calculée     NaN  \n",
       "11584681                Donnée calculée     NaN  \n",
       "11584682                Donnée calculée     NaN  \n",
       "11584683                Donnée calculée     NaN  \n",
       "\n",
       "[11584684 rows x 40 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#jointure data union 1 et data 4 \"macro\" avec données PIB\n",
    "\n",
    "union2 = pd.merge(union1,data4, how=\"left\", on=[\"Zone\", \"Année\"])\n",
    "union2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "21f8499a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Code zone_y</th>\n",
       "      <th>Code Élément_y</th>\n",
       "      <th>Élément_y</th>\n",
       "      <th>Code Produit_y</th>\n",
       "      <th>Produit_y</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584679</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584680</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584681</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584682</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584683</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11584684 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584679            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584680            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584681            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584682            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584683            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584679     Zimbabwe             684   \n",
       "11584680     Zimbabwe             684   \n",
       "11584681     Zimbabwe             684   \n",
       "11584682     Zimbabwe             684   \n",
       "11584683     Zimbabwe             684   \n",
       "\n",
       "                                                  Élément_x  Code Produit_x  \\\n",
       "0                                                Production            2511   \n",
       "1                                                Production            2511   \n",
       "2                                                Production            2511   \n",
       "3                                                Production            2511   \n",
       "4                                                Production            2511   \n",
       "...                                                     ...             ...   \n",
       "11584679  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584680  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584681  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584682  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584683  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ... Code zone_y  \\\n",
       "0         Blé et produits          2017   2017  ...           2   \n",
       "1         Blé et produits          2017   2017  ...           2   \n",
       "2         Blé et produits          2017   2017  ...           2   \n",
       "3         Blé et produits          2017   2017  ...           2   \n",
       "4         Blé et produits          2017   2017  ...           2   \n",
       "...                   ...           ...    ...  ...         ...   \n",
       "11584679     Miscellanees          2017   2017  ...         181   \n",
       "11584680     Miscellanees          2017   2017  ...         181   \n",
       "11584681     Miscellanees          2017   2017  ...         181   \n",
       "11584682     Miscellanees          2017   2017  ...         181   \n",
       "11584683     Miscellanees          2017   2017  ...         181   \n",
       "\n",
       "          Code Élément_y          Élément_y Code Produit_y  \\\n",
       "0                    511  Population totale           3010   \n",
       "1                    511  Population totale           3010   \n",
       "2                    511  Population totale           3010   \n",
       "3                    511  Population totale           3010   \n",
       "4                    511  Population totale           3010   \n",
       "...                  ...                ...            ...   \n",
       "11584679             511  Population totale           3010   \n",
       "11584680             511  Population totale           3010   \n",
       "11584681             511  Population totale           3010   \n",
       "11584682             511  Population totale           3010   \n",
       "11584683             511  Population totale           3010   \n",
       "\n",
       "                       Produit_y Code année_y         Unité_y   Valeur_y  \\\n",
       "0         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "1         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "2         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "3         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "4         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "...                          ...          ...             ...        ...   \n",
       "11584679  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584680  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584681  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584682  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584683  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "\n",
       "         Symbole_y       Description du Symbole_y  \n",
       "0                X  Sources internationales sûres  \n",
       "1                X  Sources internationales sûres  \n",
       "2                X  Sources internationales sûres  \n",
       "3                X  Sources internationales sûres  \n",
       "4                X  Sources internationales sûres  \n",
       "...            ...                            ...  \n",
       "11584679         X  Sources internationales sûres  \n",
       "11584680         X  Sources internationales sûres  \n",
       "11584681         X  Sources internationales sûres  \n",
       "11584682         X  Sources internationales sûres  \n",
       "11584683         X  Sources internationales sûres  \n",
       "\n",
       "[11584684 rows x 26 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#supprimer valeur NAN\n",
    "\n",
    "df_final_test1 = union2.dropna(axis=1)\n",
    "df_final_test1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "a29f5313",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Code zone_y</th>\n",
       "      <th>Code Élément_y</th>\n",
       "      <th>Élément_y</th>\n",
       "      <th>Code Produit_y</th>\n",
       "      <th>Produit_y</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584679</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584680</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584681</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584682</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584683</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>684</td>\n",
       "      <td>Disponibilité de matière grasse en quantité (g...</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11584684 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584679            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584680            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584681            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584682            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584683            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584679     Zimbabwe             684   \n",
       "11584680     Zimbabwe             684   \n",
       "11584681     Zimbabwe             684   \n",
       "11584682     Zimbabwe             684   \n",
       "11584683     Zimbabwe             684   \n",
       "\n",
       "                                                  Élément_x  Code Produit_x  \\\n",
       "0                                                Production            2511   \n",
       "1                                                Production            2511   \n",
       "2                                                Production            2511   \n",
       "3                                                Production            2511   \n",
       "4                                                Production            2511   \n",
       "...                                                     ...             ...   \n",
       "11584679  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584680  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584681  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584682  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "11584683  Disponibilité de matière grasse en quantité (g...            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ... Code zone_y  \\\n",
       "0         Blé et produits          2017   2017  ...           2   \n",
       "1         Blé et produits          2017   2017  ...           2   \n",
       "2         Blé et produits          2017   2017  ...           2   \n",
       "3         Blé et produits          2017   2017  ...           2   \n",
       "4         Blé et produits          2017   2017  ...           2   \n",
       "...                   ...           ...    ...  ...         ...   \n",
       "11584679     Miscellanees          2017   2017  ...         181   \n",
       "11584680     Miscellanees          2017   2017  ...         181   \n",
       "11584681     Miscellanees          2017   2017  ...         181   \n",
       "11584682     Miscellanees          2017   2017  ...         181   \n",
       "11584683     Miscellanees          2017   2017  ...         181   \n",
       "\n",
       "          Code Élément_y          Élément_y Code Produit_y  \\\n",
       "0                    511  Population totale           3010   \n",
       "1                    511  Population totale           3010   \n",
       "2                    511  Population totale           3010   \n",
       "3                    511  Population totale           3010   \n",
       "4                    511  Population totale           3010   \n",
       "...                  ...                ...            ...   \n",
       "11584679             511  Population totale           3010   \n",
       "11584680             511  Population totale           3010   \n",
       "11584681             511  Population totale           3010   \n",
       "11584682             511  Population totale           3010   \n",
       "11584683             511  Population totale           3010   \n",
       "\n",
       "                       Produit_y Code année_y         Unité_y   Valeur_y  \\\n",
       "0         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "1         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "2         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "3         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "4         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "...                          ...          ...             ...        ...   \n",
       "11584679  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584680  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584681  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584682  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584683  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "\n",
       "         Symbole_y       Description du Symbole_y  \n",
       "0                X  Sources internationales sûres  \n",
       "1                X  Sources internationales sûres  \n",
       "2                X  Sources internationales sûres  \n",
       "3                X  Sources internationales sûres  \n",
       "4                X  Sources internationales sûres  \n",
       "...            ...                            ...  \n",
       "11584679         X  Sources internationales sûres  \n",
       "11584680         X  Sources internationales sûres  \n",
       "11584681         X  Sources internationales sûres  \n",
       "11584682         X  Sources internationales sûres  \n",
       "11584683         X  Sources internationales sûres  \n",
       "\n",
       "[11584684 rows x 26 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #Nettoyage des données \n",
    "\n",
    "df_final_test1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a4255666",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Code zone_y</th>\n",
       "      <th>Code Élément_y</th>\n",
       "      <th>Élément_y</th>\n",
       "      <th>Code Produit_y</th>\n",
       "      <th>Produit_y</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584519</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584520</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584521</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584522</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584523</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>181</td>\n",
       "      <td>511</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3437859 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584519            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584520            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584521            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584522            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584523            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584519     Zimbabwe             664   \n",
       "11584520     Zimbabwe             664   \n",
       "11584521     Zimbabwe             664   \n",
       "11584522     Zimbabwe             664   \n",
       "11584523     Zimbabwe             664   \n",
       "\n",
       "                                               Élément_x  Code Produit_x  \\\n",
       "0                                             Production            2511   \n",
       "1                                             Production            2511   \n",
       "2                                             Production            2511   \n",
       "3                                             Production            2511   \n",
       "4                                             Production            2511   \n",
       "...                                                  ...             ...   \n",
       "11584519  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584520  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584521  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584522  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584523  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ... Code zone_y  \\\n",
       "0         Blé et produits          2017   2017  ...           2   \n",
       "1         Blé et produits          2017   2017  ...           2   \n",
       "2         Blé et produits          2017   2017  ...           2   \n",
       "3         Blé et produits          2017   2017  ...           2   \n",
       "4         Blé et produits          2017   2017  ...           2   \n",
       "...                   ...           ...    ...  ...         ...   \n",
       "11584519     Miscellanees          2017   2017  ...         181   \n",
       "11584520     Miscellanees          2017   2017  ...         181   \n",
       "11584521     Miscellanees          2017   2017  ...         181   \n",
       "11584522     Miscellanees          2017   2017  ...         181   \n",
       "11584523     Miscellanees          2017   2017  ...         181   \n",
       "\n",
       "          Code Élément_y          Élément_y Code Produit_y  \\\n",
       "0                    511  Population totale           3010   \n",
       "1                    511  Population totale           3010   \n",
       "2                    511  Population totale           3010   \n",
       "3                    511  Population totale           3010   \n",
       "4                    511  Population totale           3010   \n",
       "...                  ...                ...            ...   \n",
       "11584519             511  Population totale           3010   \n",
       "11584520             511  Population totale           3010   \n",
       "11584521             511  Population totale           3010   \n",
       "11584522             511  Population totale           3010   \n",
       "11584523             511  Population totale           3010   \n",
       "\n",
       "                       Produit_y Code année_y         Unité_y   Valeur_y  \\\n",
       "0         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "1         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "2         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "3         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "4         Population-Estimations         2017  1000 personnes  36296.113   \n",
       "...                          ...          ...             ...        ...   \n",
       "11584519  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584520  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584521  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584522  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "11584523  Population-Estimations         2017  1000 personnes  14236.595   \n",
       "\n",
       "         Symbole_y       Description du Symbole_y  \n",
       "0                X  Sources internationales sûres  \n",
       "1                X  Sources internationales sûres  \n",
       "2                X  Sources internationales sûres  \n",
       "3                X  Sources internationales sûres  \n",
       "4                X  Sources internationales sûres  \n",
       "...            ...                            ...  \n",
       "11584519         X  Sources internationales sûres  \n",
       "11584520         X  Sources internationales sûres  \n",
       "11584521         X  Sources internationales sûres  \n",
       "11584522         X  Sources internationales sûres  \n",
       "11584523         X  Sources internationales sûres  \n",
       "\n",
       "[3437859 rows x 26 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonnes \"Element_x\" et valeur Production, Importations-Quantité, Exportations-Quantité, Disponibilité alimentaire Kcal/pers/j\n",
    "\n",
    "df_final_test2= df_final_test1[(df_final_test1[\"Élément_x\"]=='Production') | (df_final_test1[\"Élément_x\"]=='Importations - Quantité') | (df_final_test1[\"Élément_x\"]== 'Exportations - Quantité') | (df_final_test1[\"Élément_x\"]=='Disponibilité alimentaire (Kcal/personne/jour)')]\n",
    "df_final_test2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "419f9647",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\pandas\\core\\indexing.py:1599: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self.obj[key] = infer_fill_value(value)\n",
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\pandas\\core\\indexing.py:1676: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._setitem_single_column(ilocs[0], value, pi)\n"
     ]
    }
   ],
   "source": [
    "#transformation Element_x = Productions * 1000000 pour avoir bonne unité en kg et créer une colonne \"Valeur _ Production\"\n",
    "\n",
    "df_final_test2.loc[df_final_test2['Élément_x'] == 'Production', 'Valeur_Production'] = df_final_test2['Valeur_x']*1000000\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "8d40d45d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Élément_y</th>\n",
       "      <th>Code Produit_y</th>\n",
       "      <th>Produit_y</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584519</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584520</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584521</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584522</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584523</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population totale</td>\n",
       "      <td>3010</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3437859 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584519            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584520            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584521            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584522            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584523            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584519     Zimbabwe             664   \n",
       "11584520     Zimbabwe             664   \n",
       "11584521     Zimbabwe             664   \n",
       "11584522     Zimbabwe             664   \n",
       "11584523     Zimbabwe             664   \n",
       "\n",
       "                                               Élément_x  Code Produit_x  \\\n",
       "0                                             Production            2511   \n",
       "1                                             Production            2511   \n",
       "2                                             Production            2511   \n",
       "3                                             Production            2511   \n",
       "4                                             Production            2511   \n",
       "...                                                  ...             ...   \n",
       "11584519  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584520  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584521  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584522  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584523  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ...          Élément_y  \\\n",
       "0         Blé et produits          2017   2017  ...  Population totale   \n",
       "1         Blé et produits          2017   2017  ...  Population totale   \n",
       "2         Blé et produits          2017   2017  ...  Population totale   \n",
       "3         Blé et produits          2017   2017  ...  Population totale   \n",
       "4         Blé et produits          2017   2017  ...  Population totale   \n",
       "...                   ...           ...    ...  ...                ...   \n",
       "11584519     Miscellanees          2017   2017  ...  Population totale   \n",
       "11584520     Miscellanees          2017   2017  ...  Population totale   \n",
       "11584521     Miscellanees          2017   2017  ...  Population totale   \n",
       "11584522     Miscellanees          2017   2017  ...  Population totale   \n",
       "11584523     Miscellanees          2017   2017  ...  Population totale   \n",
       "\n",
       "          Code Produit_y               Produit_y Code année_y         Unité_y  \\\n",
       "0                   3010  Population-Estimations         2017  1000 personnes   \n",
       "1                   3010  Population-Estimations         2017  1000 personnes   \n",
       "2                   3010  Population-Estimations         2017  1000 personnes   \n",
       "3                   3010  Population-Estimations         2017  1000 personnes   \n",
       "4                   3010  Population-Estimations         2017  1000 personnes   \n",
       "...                  ...                     ...          ...             ...   \n",
       "11584519            3010  Population-Estimations         2017  1000 personnes   \n",
       "11584520            3010  Population-Estimations         2017  1000 personnes   \n",
       "11584521            3010  Population-Estimations         2017  1000 personnes   \n",
       "11584522            3010  Population-Estimations         2017  1000 personnes   \n",
       "11584523            3010  Population-Estimations         2017  1000 personnes   \n",
       "\n",
       "           Valeur_y  Symbole_y       Description du Symbole_y  \\\n",
       "0         36296.113          X  Sources internationales sûres   \n",
       "1         36296.113          X  Sources internationales sûres   \n",
       "2         36296.113          X  Sources internationales sûres   \n",
       "3         36296.113          X  Sources internationales sûres   \n",
       "4         36296.113          X  Sources internationales sûres   \n",
       "...             ...        ...                            ...   \n",
       "11584519  14236.595          X  Sources internationales sûres   \n",
       "11584520  14236.595          X  Sources internationales sûres   \n",
       "11584521  14236.595          X  Sources internationales sûres   \n",
       "11584522  14236.595          X  Sources internationales sûres   \n",
       "11584523  14236.595          X  Sources internationales sûres   \n",
       "\n",
       "         Valeur_Production  Valeur_pop_réelle  \n",
       "0             4.281000e+09         36296113.0  \n",
       "1             4.281000e+09         36296113.0  \n",
       "2             4.281000e+09         36296113.0  \n",
       "3             4.281000e+09         36296113.0  \n",
       "4             4.281000e+09         36296113.0  \n",
       "...                    ...                ...  \n",
       "11584519               NaN         14236595.0  \n",
       "11584520               NaN         14236595.0  \n",
       "11584521               NaN         14236595.0  \n",
       "11584522               NaN         14236595.0  \n",
       "11584523               NaN         14236595.0  \n",
       "\n",
       "[3437859 rows x 28 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#transformation unité = \"1000 personnes\" pour transformer et créer valeur population\" *1000 pour avoir la bonne unité\n",
    "\n",
    "df_final_test2.loc[df_final_test2['Unité_y'] == '1000 personnes', 'Valeur_pop_réelle'] = df_final_test2['Valeur_y']*1000\n",
    "df_final_test2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "d9e45700",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Production', 'Importations - Quantité', 'Exportations - Quantité',\n",
       "       'Disponibilité alimentaire (Kcal/personne/jour)'], dtype=object)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final_test2['Élément_x'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3aff7bbf",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\pandas\\core\\indexing.py:1599: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self.obj[key] = infer_fill_value(value)\n",
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\pandas\\core\\indexing.py:1676: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._setitem_single_column(ilocs[0], value, pi)\n"
     ]
    }
   ],
   "source": [
    "#transformation Element_x = 'Importations * 1000000 pour avoir bonne unité en kg et créer une colonne \"Valeur _ Importations\"\n",
    "\n",
    "df_final_test2.loc[df_final_test2['Élément_x'] == 'Importations - Quantité', 'Valeur_Importations_Quantité'] = df_final_test2['Valeur_x']*1000000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "2cfd86f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#transformation Element_x = ''Exportations - Quantité * 1000000 pour avoir bonne unité en kg et créer une colonne \"Exportations_Quantité\"\n",
    "\n",
    "df_final_test2.loc[df_final_test2['Élément_x'] == 'Exportations - Quantité', 'Valeur_Exportations_Quantité'] = df_final_test2['Valeur_x']*1000000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e78f7c83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Produit_y</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584519</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584520</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584521</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584522</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584523</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>Population-Estimations</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3437859 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584519            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584520            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584521            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584522            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584523            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584519     Zimbabwe             664   \n",
       "11584520     Zimbabwe             664   \n",
       "11584521     Zimbabwe             664   \n",
       "11584522     Zimbabwe             664   \n",
       "11584523     Zimbabwe             664   \n",
       "\n",
       "                                               Élément_x  Code Produit_x  \\\n",
       "0                                             Production            2511   \n",
       "1                                             Production            2511   \n",
       "2                                             Production            2511   \n",
       "3                                             Production            2511   \n",
       "4                                             Production            2511   \n",
       "...                                                  ...             ...   \n",
       "11584519  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584520  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584521  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584522  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584523  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ...               Produit_y  \\\n",
       "0         Blé et produits          2017   2017  ...  Population-Estimations   \n",
       "1         Blé et produits          2017   2017  ...  Population-Estimations   \n",
       "2         Blé et produits          2017   2017  ...  Population-Estimations   \n",
       "3         Blé et produits          2017   2017  ...  Population-Estimations   \n",
       "4         Blé et produits          2017   2017  ...  Population-Estimations   \n",
       "...                   ...           ...    ...  ...                     ...   \n",
       "11584519     Miscellanees          2017   2017  ...  Population-Estimations   \n",
       "11584520     Miscellanees          2017   2017  ...  Population-Estimations   \n",
       "11584521     Miscellanees          2017   2017  ...  Population-Estimations   \n",
       "11584522     Miscellanees          2017   2017  ...  Population-Estimations   \n",
       "11584523     Miscellanees          2017   2017  ...  Population-Estimations   \n",
       "\n",
       "          Code année_y         Unité_y   Valeur_y Symbole_y  \\\n",
       "0                 2017  1000 personnes  36296.113         X   \n",
       "1                 2017  1000 personnes  36296.113         X   \n",
       "2                 2017  1000 personnes  36296.113         X   \n",
       "3                 2017  1000 personnes  36296.113         X   \n",
       "4                 2017  1000 personnes  36296.113         X   \n",
       "...                ...             ...        ...       ...   \n",
       "11584519          2017  1000 personnes  14236.595         X   \n",
       "11584520          2017  1000 personnes  14236.595         X   \n",
       "11584521          2017  1000 personnes  14236.595         X   \n",
       "11584522          2017  1000 personnes  14236.595         X   \n",
       "11584523          2017  1000 personnes  14236.595         X   \n",
       "\n",
       "               Description du Symbole_y  Valeur_Production  Valeur_pop_réelle  \\\n",
       "0         Sources internationales sûres       4.281000e+09         36296113.0   \n",
       "1         Sources internationales sûres       4.281000e+09         36296113.0   \n",
       "2         Sources internationales sûres       4.281000e+09         36296113.0   \n",
       "3         Sources internationales sûres       4.281000e+09         36296113.0   \n",
       "4         Sources internationales sûres       4.281000e+09         36296113.0   \n",
       "...                                 ...                ...                ...   \n",
       "11584519  Sources internationales sûres                NaN         14236595.0   \n",
       "11584520  Sources internationales sûres                NaN         14236595.0   \n",
       "11584521  Sources internationales sûres                NaN         14236595.0   \n",
       "11584522  Sources internationales sûres                NaN         14236595.0   \n",
       "11584523  Sources internationales sûres                NaN         14236595.0   \n",
       "\n",
       "         Valeur_Importations_Quantité  Valeur_Exportations_Quantité  \n",
       "0                                 NaN                           NaN  \n",
       "1                                 NaN                           NaN  \n",
       "2                                 NaN                           NaN  \n",
       "3                                 NaN                           NaN  \n",
       "4                                 NaN                           NaN  \n",
       "...                               ...                           ...  \n",
       "11584519                          NaN                           NaN  \n",
       "11584520                          NaN                           NaN  \n",
       "11584521                          NaN                           NaN  \n",
       "11584522                          NaN                           NaN  \n",
       "11584523                          NaN                           NaN  \n",
       "\n",
       "[3437859 rows x 30 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final_test2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "460f041f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\pandas\\core\\indexing.py:1599: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self.obj[key] = infer_fill_value(value)\n",
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\pandas\\core\\indexing.py:1676: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._setitem_single_column(ilocs[0], value, pi)\n"
     ]
    }
   ],
   "source": [
    "#Element_x = ''Disponibilité alimentaire (Kcal/personne/jour)' en bonne unité en kg et créer une colonne \"Valeur_Disponibilité_alimentaire_Kg_an\"\n",
    "\n",
    "#1 kg de graisse vaut bien 9 000 kcal\n",
    "# 1kg = 9000 kcal\n",
    "# x = 1 kcal \n",
    "# x= 1*1/9000 \n",
    "\n",
    "# multiplier par nombre de personne par pays\n",
    "\n",
    "df_final_test2.loc[df_final_test2['Élément_x'] == 'Disponibilité alimentaire (Kcal/personne/jour)', 'Valeur_Disponibilité_alimentaire_Kg_an'] = df_final_test2['Valeur_x']*(1*1/9000)*365*df_final_test2['Valeur_pop_réelle']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0b12da79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine_x</th>\n",
       "      <th>Domaine_x</th>\n",
       "      <th>Code zone_x</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Code Produit_x</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Code année_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>...</th>\n",
       "      <th>Code année_y</th>\n",
       "      <th>Unité_y</th>\n",
       "      <th>Valeur_y</th>\n",
       "      <th>Symbole_y</th>\n",
       "      <th>Description du Symbole_y</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>5511</td>\n",
       "      <td>Production</td>\n",
       "      <td>2511</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>36296.113</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584519</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584520</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584521</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584522</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584523</th>\n",
       "      <td>FBS</td>\n",
       "      <td>Nouveaux Bilans Alimentaire</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>664</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2899</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>1000 personnes</td>\n",
       "      <td>14236.595</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3437859 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Code Domaine_x                    Domaine_x  Code zone_x  \\\n",
       "0                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "1                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "2                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "3                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "4                   FBS  Nouveaux Bilans Alimentaire            2   \n",
       "...                 ...                          ...          ...   \n",
       "11584519            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584520            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584521            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584522            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "11584523            FBS  Nouveaux Bilans Alimentaire          181   \n",
       "\n",
       "                 Zone  Code Élément_x  \\\n",
       "0         Afghanistan            5511   \n",
       "1         Afghanistan            5511   \n",
       "2         Afghanistan            5511   \n",
       "3         Afghanistan            5511   \n",
       "4         Afghanistan            5511   \n",
       "...               ...             ...   \n",
       "11584519     Zimbabwe             664   \n",
       "11584520     Zimbabwe             664   \n",
       "11584521     Zimbabwe             664   \n",
       "11584522     Zimbabwe             664   \n",
       "11584523     Zimbabwe             664   \n",
       "\n",
       "                                               Élément_x  Code Produit_x  \\\n",
       "0                                             Production            2511   \n",
       "1                                             Production            2511   \n",
       "2                                             Production            2511   \n",
       "3                                             Production            2511   \n",
       "4                                             Production            2511   \n",
       "...                                                  ...             ...   \n",
       "11584519  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584520  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584521  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584522  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "11584523  Disponibilité alimentaire (Kcal/personne/jour)            2899   \n",
       "\n",
       "                Produit_x  Code année_x  Année  ... Code année_y  \\\n",
       "0         Blé et produits          2017   2017  ...         2017   \n",
       "1         Blé et produits          2017   2017  ...         2017   \n",
       "2         Blé et produits          2017   2017  ...         2017   \n",
       "3         Blé et produits          2017   2017  ...         2017   \n",
       "4         Blé et produits          2017   2017  ...         2017   \n",
       "...                   ...           ...    ...  ...          ...   \n",
       "11584519     Miscellanees          2017   2017  ...         2017   \n",
       "11584520     Miscellanees          2017   2017  ...         2017   \n",
       "11584521     Miscellanees          2017   2017  ...         2017   \n",
       "11584522     Miscellanees          2017   2017  ...         2017   \n",
       "11584523     Miscellanees          2017   2017  ...         2017   \n",
       "\n",
       "                 Unité_y   Valeur_y Symbole_y       Description du Symbole_y  \\\n",
       "0         1000 personnes  36296.113         X  Sources internationales sûres   \n",
       "1         1000 personnes  36296.113         X  Sources internationales sûres   \n",
       "2         1000 personnes  36296.113         X  Sources internationales sûres   \n",
       "3         1000 personnes  36296.113         X  Sources internationales sûres   \n",
       "4         1000 personnes  36296.113         X  Sources internationales sûres   \n",
       "...                  ...        ...       ...                            ...   \n",
       "11584519  1000 personnes  14236.595         X  Sources internationales sûres   \n",
       "11584520  1000 personnes  14236.595         X  Sources internationales sûres   \n",
       "11584521  1000 personnes  14236.595         X  Sources internationales sûres   \n",
       "11584522  1000 personnes  14236.595         X  Sources internationales sûres   \n",
       "11584523  1000 personnes  14236.595         X  Sources internationales sûres   \n",
       "\n",
       "         Valeur_Production  Valeur_pop_réelle  Valeur_Importations_Quantité  \\\n",
       "0             4.281000e+09         36296113.0                           NaN   \n",
       "1             4.281000e+09         36296113.0                           NaN   \n",
       "2             4.281000e+09         36296113.0                           NaN   \n",
       "3             4.281000e+09         36296113.0                           NaN   \n",
       "4             4.281000e+09         36296113.0                           NaN   \n",
       "...                    ...                ...                           ...   \n",
       "11584519               NaN         14236595.0                           NaN   \n",
       "11584520               NaN         14236595.0                           NaN   \n",
       "11584521               NaN         14236595.0                           NaN   \n",
       "11584522               NaN         14236595.0                           NaN   \n",
       "11584523               NaN         14236595.0                           NaN   \n",
       "\n",
       "         Valeur_Exportations_Quantité  Valeur_Disponibilité_alimentaire_Kg_an  \n",
       "0                                 NaN                                     NaN  \n",
       "1                                 NaN                                     NaN  \n",
       "2                                 NaN                                     NaN  \n",
       "3                                 NaN                                     NaN  \n",
       "4                                 NaN                                     NaN  \n",
       "...                               ...                                     ...  \n",
       "11584519                          NaN                           577373.019444  \n",
       "11584520                          NaN                           577373.019444  \n",
       "11584521                          NaN                           577373.019444  \n",
       "11584522                          NaN                           577373.019444  \n",
       "11584523                          NaN                           577373.019444  \n",
       "\n",
       "[3437859 rows x 31 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final_test2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "5df4be88",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 3437859 entries, 0 to 11584523\n",
      "Data columns (total 31 columns):\n",
      " #   Column                                  Dtype  \n",
      "---  ------                                  -----  \n",
      " 0   Code Domaine_x                          object \n",
      " 1   Domaine_x                               object \n",
      " 2   Code zone_x                             int64  \n",
      " 3   Zone                                    object \n",
      " 4   Code Élément_x                          int64  \n",
      " 5   Élément_x                               object \n",
      " 6   Code Produit_x                          int64  \n",
      " 7   Produit_x                               object \n",
      " 8   Code année_x                            int64  \n",
      " 9   Année                                   int64  \n",
      " 10  Unité_x                                 object \n",
      " 11  Valeur_x                                float64\n",
      " 12  Symbole_x                               object \n",
      " 13  Description du Symbole_x                object \n",
      " 14  Code Domaine_y                          object \n",
      " 15  Domaine_y                               object \n",
      " 16  Code zone_y                             int64  \n",
      " 17  Code Élément_y                          int64  \n",
      " 18  Élément_y                               object \n",
      " 19  Code Produit_y                          int64  \n",
      " 20  Produit_y                               object \n",
      " 21  Code année_y                            int64  \n",
      " 22  Unité_y                                 object \n",
      " 23  Valeur_y                                float64\n",
      " 24  Symbole_y                               object \n",
      " 25  Description du Symbole_y                object \n",
      " 26  Valeur_Production                       float64\n",
      " 27  Valeur_pop_réelle                       float64\n",
      " 28  Valeur_Importations_Quantité            float64\n",
      " 29  Valeur_Exportations_Quantité            float64\n",
      " 30  Valeur_Disponibilité_alimentaire_Kg_an  float64\n",
      "dtypes: float64(7), int64(9), object(15)\n",
      "memory usage: 968.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df_final_test2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "b3962eb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Blé et produits</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>4.281000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584519</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584520</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584521</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584522</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11584523</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Miscellanees</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>577373.019444</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3437859 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Zone        Produit_x  \\\n",
       "0         Afghanistan  Blé et produits   \n",
       "1         Afghanistan  Blé et produits   \n",
       "2         Afghanistan  Blé et produits   \n",
       "3         Afghanistan  Blé et produits   \n",
       "4         Afghanistan  Blé et produits   \n",
       "...               ...              ...   \n",
       "11584519     Zimbabwe     Miscellanees   \n",
       "11584520     Zimbabwe     Miscellanees   \n",
       "11584521     Zimbabwe     Miscellanees   \n",
       "11584522     Zimbabwe     Miscellanees   \n",
       "11584523     Zimbabwe     Miscellanees   \n",
       "\n",
       "                                               Élément_x  Année  \\\n",
       "0                                             Production   2017   \n",
       "1                                             Production   2017   \n",
       "2                                             Production   2017   \n",
       "3                                             Production   2017   \n",
       "4                                             Production   2017   \n",
       "...                                                  ...    ...   \n",
       "11584519  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11584520  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11584521  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11584522  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11584523  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "\n",
       "          Valeur_pop_réelle  Valeur_Production  Valeur_Importations_Quantité  \\\n",
       "0                36296113.0       4.281000e+09                           NaN   \n",
       "1                36296113.0       4.281000e+09                           NaN   \n",
       "2                36296113.0       4.281000e+09                           NaN   \n",
       "3                36296113.0       4.281000e+09                           NaN   \n",
       "4                36296113.0       4.281000e+09                           NaN   \n",
       "...                     ...                ...                           ...   \n",
       "11584519         14236595.0                NaN                           NaN   \n",
       "11584520         14236595.0                NaN                           NaN   \n",
       "11584521         14236595.0                NaN                           NaN   \n",
       "11584522         14236595.0                NaN                           NaN   \n",
       "11584523         14236595.0                NaN                           NaN   \n",
       "\n",
       "          Valeur_Exportations_Quantité  Valeur_Disponibilité_alimentaire_Kg_an  \n",
       "0                                  NaN                                     NaN  \n",
       "1                                  NaN                                     NaN  \n",
       "2                                  NaN                                     NaN  \n",
       "3                                  NaN                                     NaN  \n",
       "4                                  NaN                                     NaN  \n",
       "...                                ...                                     ...  \n",
       "11584519                           NaN                           577373.019444  \n",
       "11584520                           NaN                           577373.019444  \n",
       "11584521                           NaN                           577373.019444  \n",
       "11584522                           NaN                           577373.019444  \n",
       "11584523                           NaN                           577373.019444  \n",
       "\n",
       "[3437859 rows x 9 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonne Zone, Produit_x, Element_x , Année, Valeur_pop_reelle, 'Valeur_Production', 'Valeur_Importations_Quantité', 'Valeur_Exportations_Quantité', 'Valeur_Disponibilité_alimentaire_Kg_an\n",
    "\n",
    "df_final_test3 = df_final_test2.filter(items=['Zone', 'Produit_x', 'Élément_x', 'Année' , 'Valeur_pop_réelle', 'Valeur_Production', 'Valeur_Importations_Quantité', 'Valeur_Exportations_Quantité', 'Valeur_Disponibilité_alimentaire_Kg_an']) \n",
    "df_final_test3\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "71494df3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>36456</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>28000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36457</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>28000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36458</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>28000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36459</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>28000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36460</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>28000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11568599</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.237968e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11568600</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.237968e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11568601</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.237968e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11568602</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.237968e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11568603</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.237968e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>42326 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Zone            Produit_x  \\\n",
       "36456     Afghanistan  Viande de Volailles   \n",
       "36457     Afghanistan  Viande de Volailles   \n",
       "36458     Afghanistan  Viande de Volailles   \n",
       "36459     Afghanistan  Viande de Volailles   \n",
       "36460     Afghanistan  Viande de Volailles   \n",
       "...               ...                  ...   \n",
       "11568599     Zimbabwe  Viande de Volailles   \n",
       "11568600     Zimbabwe  Viande de Volailles   \n",
       "11568601     Zimbabwe  Viande de Volailles   \n",
       "11568602     Zimbabwe  Viande de Volailles   \n",
       "11568603     Zimbabwe  Viande de Volailles   \n",
       "\n",
       "                                               Élément_x  Année  \\\n",
       "36456                                         Production   2017   \n",
       "36457                                         Production   2017   \n",
       "36458                                         Production   2017   \n",
       "36459                                         Production   2017   \n",
       "36460                                         Production   2017   \n",
       "...                                                  ...    ...   \n",
       "11568599  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11568600  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11568601  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11568602  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11568603  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "\n",
       "          Valeur_pop_réelle  Valeur_Production  Valeur_Importations_Quantité  \\\n",
       "36456            36296113.0         28000000.0                           NaN   \n",
       "36457            36296113.0         28000000.0                           NaN   \n",
       "36458            36296113.0         28000000.0                           NaN   \n",
       "36459            36296113.0         28000000.0                           NaN   \n",
       "36460            36296113.0         28000000.0                           NaN   \n",
       "...                     ...                ...                           ...   \n",
       "11568599         14236595.0                NaN                           NaN   \n",
       "11568600         14236595.0                NaN                           NaN   \n",
       "11568601         14236595.0                NaN                           NaN   \n",
       "11568602         14236595.0                NaN                           NaN   \n",
       "11568603         14236595.0                NaN                           NaN   \n",
       "\n",
       "          Valeur_Exportations_Quantité  Valeur_Disponibilité_alimentaire_Kg_an  \n",
       "36456                              NaN                                     NaN  \n",
       "36457                              NaN                                     NaN  \n",
       "36458                              NaN                                     NaN  \n",
       "36459                              NaN                                     NaN  \n",
       "36460                              NaN                                     NaN  \n",
       "...                                ...                                     ...  \n",
       "11568599                           NaN                            9.237968e+06  \n",
       "11568600                           NaN                            9.237968e+06  \n",
       "11568601                           NaN                            9.237968e+06  \n",
       "11568602                           NaN                            9.237968e+06  \n",
       "11568603                           NaN                            9.237968e+06  \n",
       "\n",
       "[42326 rows x 9 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonne \"Produit_x\" et valeur \"Viande de Volailles\"\n",
    "\n",
    "df_filtre_final = df_final_test3[df_final_test3['Produit_x'] == 'Viande de Volailles']\n",
    "df_filtre_final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "e081739a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Produit_x</th>\n",
       "      <th>Élément_x</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>36456</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>2.800000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36512</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Importations - Quantité</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>29000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36904</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>36296113.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.360045e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118200</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>57009756.0</td>\n",
       "      <td>1.667000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118280</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Importations - Quantité</td>\n",
       "      <td>2017</td>\n",
       "      <td>57009756.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>514000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11487934</th>\n",
       "      <td>Zambie</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Exportations - Quantité</td>\n",
       "      <td>2017</td>\n",
       "      <td>16853599.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11488424</th>\n",
       "      <td>Zambie</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>16853599.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.518578e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11567724</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Production</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>6.900000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11567804</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Importations - Quantité</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11568524</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Viande de Volailles</td>\n",
       "      <td>Disponibilité alimentaire (Kcal/personne/jour)</td>\n",
       "      <td>2017</td>\n",
       "      <td>14236595.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.237968e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>645 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Zone            Produit_x  \\\n",
       "36456        Afghanistan  Viande de Volailles   \n",
       "36512        Afghanistan  Viande de Volailles   \n",
       "36904        Afghanistan  Viande de Volailles   \n",
       "118200    Afrique du Sud  Viande de Volailles   \n",
       "118280    Afrique du Sud  Viande de Volailles   \n",
       "...                  ...                  ...   \n",
       "11487934          Zambie  Viande de Volailles   \n",
       "11488424          Zambie  Viande de Volailles   \n",
       "11567724        Zimbabwe  Viande de Volailles   \n",
       "11567804        Zimbabwe  Viande de Volailles   \n",
       "11568524        Zimbabwe  Viande de Volailles   \n",
       "\n",
       "                                               Élément_x  Année  \\\n",
       "36456                                         Production   2017   \n",
       "36512                            Importations - Quantité   2017   \n",
       "36904     Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "118200                                        Production   2017   \n",
       "118280                           Importations - Quantité   2017   \n",
       "...                                                  ...    ...   \n",
       "11487934                         Exportations - Quantité   2017   \n",
       "11488424  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "11567724                                      Production   2017   \n",
       "11567804                         Importations - Quantité   2017   \n",
       "11568524  Disponibilité alimentaire (Kcal/personne/jour)   2017   \n",
       "\n",
       "          Valeur_pop_réelle  Valeur_Production  Valeur_Importations_Quantité  \\\n",
       "36456            36296113.0       2.800000e+07                           NaN   \n",
       "36512            36296113.0                NaN                    29000000.0   \n",
       "36904            36296113.0                NaN                           NaN   \n",
       "118200           57009756.0       1.667000e+09                           NaN   \n",
       "118280           57009756.0                NaN                   514000000.0   \n",
       "...                     ...                ...                           ...   \n",
       "11487934         16853599.0                NaN                           NaN   \n",
       "11488424         16853599.0                NaN                           NaN   \n",
       "11567724         14236595.0       6.900000e+07                           NaN   \n",
       "11567804         14236595.0                NaN                     6000000.0   \n",
       "11568524         14236595.0                NaN                           NaN   \n",
       "\n",
       "          Valeur_Exportations_Quantité  Valeur_Disponibilité_alimentaire_Kg_an  \n",
       "36456                              NaN                                     NaN  \n",
       "36512                              NaN                                     NaN  \n",
       "36904                              NaN                            7.360045e+06  \n",
       "118200                             NaN                                     NaN  \n",
       "118280                             NaN                                     NaN  \n",
       "...                                ...                                     ...  \n",
       "11487934                     1000000.0                                     NaN  \n",
       "11488424                           NaN                            7.518578e+06  \n",
       "11567724                           NaN                                     NaN  \n",
       "11567804                           NaN                                     NaN  \n",
       "11568524                           NaN                            9.237968e+06  \n",
       "\n",
       "[645 rows x 9 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#suppression doublons\n",
    "\n",
    "df_filtre_final1 = df_filtre_final.drop_duplicates()\n",
    "df_filtre_final1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "0e1899ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur_pop_réelle</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <th>2017</th>\n",
       "      <th>36296113.0</th>\n",
       "      <td>2.800000e+07</td>\n",
       "      <td>29000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>7.360045e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afrique du Sud</th>\n",
       "      <th>2017</th>\n",
       "      <th>57009756.0</th>\n",
       "      <td>1.667000e+09</td>\n",
       "      <td>514000000.0</td>\n",
       "      <td>6.300000e+07</td>\n",
       "      <td>3.306249e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Albanie</th>\n",
       "      <th>2017</th>\n",
       "      <th>2884169.0</th>\n",
       "      <td>1.300000e+07</td>\n",
       "      <td>38000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>9.942371e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Algérie</th>\n",
       "      <th>2017</th>\n",
       "      <th>41389189.0</th>\n",
       "      <td>2.750000e+08</td>\n",
       "      <td>2000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.692835e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allemagne</th>\n",
       "      <th>2017</th>\n",
       "      <th>82658409.0</th>\n",
       "      <td>1.514000e+09</td>\n",
       "      <td>842000000.0</td>\n",
       "      <td>6.460000e+08</td>\n",
       "      <td>2.380103e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Émirats arabes unis</th>\n",
       "      <th>2017</th>\n",
       "      <th>9487203.0</th>\n",
       "      <td>4.800000e+07</td>\n",
       "      <td>433000000.0</td>\n",
       "      <td>9.400000e+07</td>\n",
       "      <td>5.655954e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Équateur</th>\n",
       "      <th>2017</th>\n",
       "      <th>16785361.0</th>\n",
       "      <td>3.400000e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.650139e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>États-Unis d'Amérique</th>\n",
       "      <th>2017</th>\n",
       "      <th>325084756.0</th>\n",
       "      <td>2.191400e+10</td>\n",
       "      <td>123000000.0</td>\n",
       "      <td>3.692000e+09</td>\n",
       "      <td>2.887294e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Éthiopie</th>\n",
       "      <th>2017</th>\n",
       "      <th>106399924.0</th>\n",
       "      <td>1.400000e+07</td>\n",
       "      <td>1000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Îles Salomon</th>\n",
       "      <th>2017</th>\n",
       "      <th>636039.0</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.643085e+05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               Valeur_Production  \\\n",
       "Zone                  Année Valeur_pop_réelle                      \n",
       "Afghanistan           2017  36296113.0              2.800000e+07   \n",
       "Afrique du Sud        2017  57009756.0              1.667000e+09   \n",
       "Albanie               2017  2884169.0               1.300000e+07   \n",
       "Algérie               2017  41389189.0              2.750000e+08   \n",
       "Allemagne             2017  82658409.0              1.514000e+09   \n",
       "...                                                          ...   \n",
       "Émirats arabes unis   2017  9487203.0               4.800000e+07   \n",
       "Équateur              2017  16785361.0              3.400000e+08   \n",
       "États-Unis d'Amérique 2017  325084756.0             2.191400e+10   \n",
       "Éthiopie              2017  106399924.0             1.400000e+07   \n",
       "Îles Salomon          2017  636039.0                0.000000e+00   \n",
       "\n",
       "                                               Valeur_Importations_Quantité  \\\n",
       "Zone                  Année Valeur_pop_réelle                                 \n",
       "Afghanistan           2017  36296113.0                           29000000.0   \n",
       "Afrique du Sud        2017  57009756.0                          514000000.0   \n",
       "Albanie               2017  2884169.0                            38000000.0   \n",
       "Algérie               2017  41389189.0                            2000000.0   \n",
       "Allemagne             2017  82658409.0                          842000000.0   \n",
       "...                                                                     ...   \n",
       "Émirats arabes unis   2017  9487203.0                           433000000.0   \n",
       "Équateur              2017  16785361.0                                  0.0   \n",
       "États-Unis d'Amérique 2017  325084756.0                         123000000.0   \n",
       "Éthiopie              2017  106399924.0                           1000000.0   \n",
       "Îles Salomon          2017  636039.0                              6000000.0   \n",
       "\n",
       "                                               Valeur_Exportations_Quantité  \\\n",
       "Zone                  Année Valeur_pop_réelle                                 \n",
       "Afghanistan           2017  36296113.0                         0.000000e+00   \n",
       "Afrique du Sud        2017  57009756.0                         6.300000e+07   \n",
       "Albanie               2017  2884169.0                          0.000000e+00   \n",
       "Algérie               2017  41389189.0                         0.000000e+00   \n",
       "Allemagne             2017  82658409.0                         6.460000e+08   \n",
       "...                                                                     ...   \n",
       "Émirats arabes unis   2017  9487203.0                          9.400000e+07   \n",
       "Équateur              2017  16785361.0                         0.000000e+00   \n",
       "États-Unis d'Amérique 2017  325084756.0                        3.692000e+09   \n",
       "Éthiopie              2017  106399924.0                        0.000000e+00   \n",
       "Îles Salomon          2017  636039.0                           0.000000e+00   \n",
       "\n",
       "                                               Valeur_Disponibilité_alimentaire_Kg_an  \n",
       "Zone                  Année Valeur_pop_réelle                                          \n",
       "Afghanistan           2017  36296113.0                                   7.360045e+06  \n",
       "Afrique du Sud        2017  57009756.0                                   3.306249e+08  \n",
       "Albanie               2017  2884169.0                                    9.942371e+06  \n",
       "Algérie               2017  41389189.0                                   3.692835e+07  \n",
       "Allemagne             2017  82658409.0                                   2.380103e+08  \n",
       "...                                                                               ...  \n",
       "Émirats arabes unis   2017  9487203.0                                    5.655954e+07  \n",
       "Équateur              2017  16785361.0                                   5.650139e+07  \n",
       "États-Unis d'Amérique 2017  325084756.0                                  2.887294e+09  \n",
       "Éthiopie              2017  106399924.0                                  0.000000e+00  \n",
       "Îles Salomon          2017  636039.0                                     4.643085e+05  \n",
       "\n",
       "[172 rows x 4 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#group by par Zone et Année\n",
    "\n",
    "df_filtre_final2 =df_filtre_final1.groupby([\"Zone\", \"Année\", \"Valeur_pop_réelle\"]).sum()\n",
    "df_filtre_final2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "e55e554d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.720000e+02</td>\n",
       "      <td>1.720000e+02</td>\n",
       "      <td>1.720000e+02</td>\n",
       "      <td>1.720000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>7.083256e+08</td>\n",
       "      <td>8.848837e+07</td>\n",
       "      <td>1.037500e+08</td>\n",
       "      <td>1.031326e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.474456e+09</td>\n",
       "      <td>1.858246e+08</td>\n",
       "      <td>4.580661e+08</td>\n",
       "      <td>3.699126e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.100000e+07</td>\n",
       "      <td>3.000000e+06</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.029521e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>6.600000e+07</td>\n",
       "      <td>1.600000e+07</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.355398e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.687500e+08</td>\n",
       "      <td>7.975000e+07</td>\n",
       "      <td>1.200000e+07</td>\n",
       "      <td>5.248393e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.191400e+10</td>\n",
       "      <td>1.069000e+09</td>\n",
       "      <td>4.223000e+09</td>\n",
       "      <td>3.400189e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Valeur_Production  Valeur_Importations_Quantité  \\\n",
       "count       1.720000e+02                  1.720000e+02   \n",
       "mean        7.083256e+08                  8.848837e+07   \n",
       "std         2.474456e+09                  1.858246e+08   \n",
       "min         0.000000e+00                  0.000000e+00   \n",
       "25%         1.100000e+07                  3.000000e+06   \n",
       "50%         6.600000e+07                  1.600000e+07   \n",
       "75%         3.687500e+08                  7.975000e+07   \n",
       "max         2.191400e+10                  1.069000e+09   \n",
       "\n",
       "       Valeur_Exportations_Quantité  Valeur_Disponibilité_alimentaire_Kg_an  \n",
       "count                  1.720000e+02                            1.720000e+02  \n",
       "mean                   1.037500e+08                            1.031326e+08  \n",
       "std                    4.580661e+08                            3.699126e+08  \n",
       "min                    0.000000e+00                            0.000000e+00  \n",
       "25%                    0.000000e+00                            4.029521e+06  \n",
       "50%                    0.000000e+00                            1.355398e+07  \n",
       "75%                    1.200000e+07                            5.248393e+07  \n",
       "max                    4.223000e+09                            3.400189e+09  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_filtre_final2.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "608af485",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>195740.846106</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>4141.523943</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>183.247028</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>458140.931411</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>331.532293</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238244</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>millions</td>\n",
       "      <td>19835.846559</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238245</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>US$</td>\n",
       "      <td>1354.401687</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238246</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6155</td>\n",
       "      <td>Croissance annuelle en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238247</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-12.643001</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238248</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-13.875718</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>238249 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "0                MK  Indicateurs macro                2  Afghanistan   \n",
       "1                MK  Indicateurs macro                2  Afghanistan   \n",
       "2                MK  Indicateurs macro                2  Afghanistan   \n",
       "3                MK  Indicateurs macro                2  Afghanistan   \n",
       "4                MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "238244           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238245           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238246           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238247           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238248           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                     Élément  \\\n",
       "0               6109                     Valeur en devise locale   \n",
       "1               6110                                 Valeur US $   \n",
       "2               6119                    Valeur US $ par habitant   \n",
       "3               6183   Valeur en devise locale, aux prix de 2015   \n",
       "4               6185  Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                         ...   \n",
       "238244          6110                                 Valeur US $   \n",
       "238245          6119                    Valeur US $ par habitant   \n",
       "238246          6155        Croissance annuelle en devise locale   \n",
       "238247          6129                     Croissance annuelle US$   \n",
       "238248         61290        Croissance annuelle US$ par habitant   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "0              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "1              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "2              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "3              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "4              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "238244         22011    Revenu national brut        2019   2019  millions   \n",
       "238245         22011    Revenu national brut        2019   2019       US$   \n",
       "238246         22011    Revenu national brut        2019   2019         %   \n",
       "238247         22011    Revenu national brut        2019   2019         %   \n",
       "238248         22011    Revenu national brut        2019   2019         %   \n",
       "\n",
       "               Valeur Symbole         Description du Symbole  Note  \n",
       "0       195740.846106       X  Sources internationales sûres   NaN  \n",
       "1         4141.523943       X  Sources internationales sûres   NaN  \n",
       "2          183.247028       X  Sources internationales sûres   NaN  \n",
       "3       458140.931411       X  Sources internationales sûres   NaN  \n",
       "4          331.532293       X  Sources internationales sûres   NaN  \n",
       "...               ...     ...                            ...   ...  \n",
       "238244   19835.846559       X  Sources internationales sûres   NaN  \n",
       "238245    1354.401687      Fc                Donnée calculée   NaN  \n",
       "238246     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238247     -12.643001      Fc                Donnée calculée   NaN  \n",
       "238248     -13.875718      Fc                Donnée calculée   NaN  \n",
       "\n",
       "[238249 rows x 15 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "ed2f90fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Valeur en devise locale', 'Valeur US $',\n",
       "       'Valeur US $ par habitant',\n",
       "       'Valeur en devise locale, aux prix de 2015',\n",
       "       'Valeur US $ par habitant, aux prix du 2015',\n",
       "       'Valeur US $, aux prix du 2015',\n",
       "       'Croissance annuelle en devise locale',\n",
       "       'Croissance annuelle aux prix de 2015', 'Croissance annuelle US$',\n",
       "       'Croissance annuelle US$ par habitant',\n",
       "       'Croissance annuelle US $, aux prix de 2015',\n",
       "       'Croissance annuelle US $ par habitant, aux prix de 2015',\n",
       "       'Part du PIB US $', 'Part du PIB US$, aux prix de 2015',\n",
       "       'Part du PIB en devise locale',\n",
       "       'Part du PIB en devise locale, aux prix de 2015',\n",
       "       'Ratio du valeur ajoutée (Agriculture, Sylviculture et Pêche) en devise locale',\n",
       "       'Ratio du valeur ajoutée (Agriculture, Sylviculture et Pêche) US $',\n",
       "       'Part du valeur ajoutée (industrie manufacturière) en devise locale',\n",
       "       'Part du valeur ajoutée (industrie manufacturière) US $'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#détection colonne \"Element\" pour données PIB\n",
    "\n",
    "\n",
    "data4['Élément'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7821d2f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>195740.846106</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>4141.523943</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>183.247028</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>458140.931411</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>331.532293</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237192</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6181</td>\n",
       "      <td>Croissance annuelle aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-8.100000</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237193</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-11.808381</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237194</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-13.052876</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237195</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6182</td>\n",
       "      <td>Croissance annuelle US $, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-8.100000</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237196</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61820</td>\n",
       "      <td>Croissance annuelle US $ par habitant, aux pri...</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-9.396825</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45434 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "0                MK  Indicateurs macro                2  Afghanistan   \n",
       "1                MK  Indicateurs macro                2  Afghanistan   \n",
       "2                MK  Indicateurs macro                2  Afghanistan   \n",
       "3                MK  Indicateurs macro                2  Afghanistan   \n",
       "4                MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "237192           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237193           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237194           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237195           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237196           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                            Élément  \\\n",
       "0               6109                            Valeur en devise locale   \n",
       "1               6110                                        Valeur US $   \n",
       "2               6119                           Valeur US $ par habitant   \n",
       "3               6183          Valeur en devise locale, aux prix de 2015   \n",
       "4               6185         Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                                ...   \n",
       "237192          6181               Croissance annuelle aux prix de 2015   \n",
       "237193          6129                            Croissance annuelle US$   \n",
       "237194         61290               Croissance annuelle US$ par habitant   \n",
       "237195          6182         Croissance annuelle US $, aux prix de 2015   \n",
       "237196         61820  Croissance annuelle US $ par habitant, aux pri...   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "0              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "1              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "2              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "3              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "4              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "237192         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237193         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237194         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237195         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237196         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "\n",
       "               Valeur Symbole         Description du Symbole  Note  \n",
       "0       195740.846106       X  Sources internationales sûres   NaN  \n",
       "1         4141.523943       X  Sources internationales sûres   NaN  \n",
       "2          183.247028       X  Sources internationales sûres   NaN  \n",
       "3       458140.931411       X  Sources internationales sûres   NaN  \n",
       "4          331.532293       X  Sources internationales sûres   NaN  \n",
       "...               ...     ...                            ...   ...  \n",
       "237192      -8.100000      Fc                Donnée calculée   NaN  \n",
       "237193     -11.808381      Fc                Donnée calculée   NaN  \n",
       "237194     -13.052876      Fc                Donnée calculée   NaN  \n",
       "237195      -8.100000      Fc                Donnée calculée   NaN  \n",
       "237196      -9.396825      Fc                Donnée calculée   NaN  \n",
       "\n",
       "[45434 rows x 15 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonnes 'Produit' et valeur Produit Interieur Brut\n",
    "\n",
    "aa = data4[data4['Produit'] == 'Produit Intérieur Brut']\n",
    "aa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "8aa3ce4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>195740.846106</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>4141.523943</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>183.247028</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>millions</td>\n",
       "      <td>458140.931411</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2002</td>\n",
       "      <td>2002</td>\n",
       "      <td>US$</td>\n",
       "      <td>331.532293</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237192</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6181</td>\n",
       "      <td>Croissance annuelle aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-8.100000</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237193</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-11.808381</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237194</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-13.052876</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237195</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6182</td>\n",
       "      <td>Croissance annuelle US $, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-8.100000</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237196</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61820</td>\n",
       "      <td>Croissance annuelle US $ par habitant, aux pri...</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2019</td>\n",
       "      <td>2019</td>\n",
       "      <td>%</td>\n",
       "      <td>-9.396825</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45434 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "0                MK  Indicateurs macro                2  Afghanistan   \n",
       "1                MK  Indicateurs macro                2  Afghanistan   \n",
       "2                MK  Indicateurs macro                2  Afghanistan   \n",
       "3                MK  Indicateurs macro                2  Afghanistan   \n",
       "4                MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "237192           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237193           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237194           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237195           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237196           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                            Élément  \\\n",
       "0               6109                            Valeur en devise locale   \n",
       "1               6110                                        Valeur US $   \n",
       "2               6119                           Valeur US $ par habitant   \n",
       "3               6183          Valeur en devise locale, aux prix de 2015   \n",
       "4               6185         Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                                ...   \n",
       "237192          6181               Croissance annuelle aux prix de 2015   \n",
       "237193          6129                            Croissance annuelle US$   \n",
       "237194         61290               Croissance annuelle US$ par habitant   \n",
       "237195          6182         Croissance annuelle US $, aux prix de 2015   \n",
       "237196         61820  Croissance annuelle US $ par habitant, aux pri...   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "0              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "1              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "2              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "3              22008  Produit Intérieur Brut        2002   2002  millions   \n",
       "4              22008  Produit Intérieur Brut        2002   2002       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "237192         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237193         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237194         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237195         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "237196         22008  Produit Intérieur Brut        2019   2019         %   \n",
       "\n",
       "               Valeur Symbole         Description du Symbole  \n",
       "0       195740.846106       X  Sources internationales sûres  \n",
       "1         4141.523943       X  Sources internationales sûres  \n",
       "2          183.247028       X  Sources internationales sûres  \n",
       "3       458140.931411       X  Sources internationales sûres  \n",
       "4          331.532293       X  Sources internationales sûres  \n",
       "...               ...     ...                            ...  \n",
       "237192      -8.100000      Fc                Donnée calculée  \n",
       "237193     -11.808381      Fc                Donnée calculée  \n",
       "237194     -13.052876      Fc                Donnée calculée  \n",
       "237195      -8.100000      Fc                Donnée calculée  \n",
       "237196      -9.396825      Fc                Donnée calculée  \n",
       "\n",
       "[45434 rows x 14 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#supression données NAN\n",
    "\n",
    "aa.dropna(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "12a7818a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.862303e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>US$</td>\n",
       "      <td>5.130860e+02</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6183</td>\n",
       "      <td>Valeur en devise locale, aux prix de 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.193944e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6185</td>\n",
       "      <td>Valeur US $ par habitant, aux prix du 2015</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>US$</td>\n",
       "      <td>5.379896e+02</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238232</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6110</td>\n",
       "      <td>Valeur US $</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.007960e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238233</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6119</td>\n",
       "      <td>Valeur US $ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>US$</td>\n",
       "      <td>1.410421e+03</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238234</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6155</td>\n",
       "      <td>Croissance annuelle en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>%</td>\n",
       "      <td>6.960250e+00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238235</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6129</td>\n",
       "      <td>Croissance annuelle US$</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>%</td>\n",
       "      <td>6.960250e+00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238236</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>61290</td>\n",
       "      <td>Croissance annuelle US$ par habitant</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>%</td>\n",
       "      <td>5.410578e+00</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13582 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "180              MK  Indicateurs macro                2  Afghanistan   \n",
       "181              MK  Indicateurs macro                2  Afghanistan   \n",
       "182              MK  Indicateurs macro                2  Afghanistan   \n",
       "183              MK  Indicateurs macro                2  Afghanistan   \n",
       "184              MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "238232           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238233           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238234           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238235           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238236           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                                     Élément  \\\n",
       "180             6109                     Valeur en devise locale   \n",
       "181             6110                                 Valeur US $   \n",
       "182             6119                    Valeur US $ par habitant   \n",
       "183             6183   Valeur en devise locale, aux prix de 2015   \n",
       "184             6185  Valeur US $ par habitant, aux prix du 2015   \n",
       "...              ...                                         ...   \n",
       "238232          6110                                 Valeur US $   \n",
       "238233          6119                    Valeur US $ par habitant   \n",
       "238234          6155        Croissance annuelle en devise locale   \n",
       "238235          6129                     Croissance annuelle US$   \n",
       "238236         61290        Croissance annuelle US$ par habitant   \n",
       "\n",
       "        Code Produit                 Produit  Code année  Année     Unité  \\\n",
       "180            22008  Produit Intérieur Brut        2017   2017  millions   \n",
       "181            22008  Produit Intérieur Brut        2017   2017  millions   \n",
       "182            22008  Produit Intérieur Brut        2017   2017       US$   \n",
       "183            22008  Produit Intérieur Brut        2017   2017  millions   \n",
       "184            22008  Produit Intérieur Brut        2017   2017       US$   \n",
       "...              ...                     ...         ...    ...       ...   \n",
       "238232         22011    Revenu national brut        2017   2017  millions   \n",
       "238233         22011    Revenu national brut        2017   2017       US$   \n",
       "238234         22011    Revenu national brut        2017   2017         %   \n",
       "238235         22011    Revenu national brut        2017   2017         %   \n",
       "238236         22011    Revenu national brut        2017   2017         %   \n",
       "\n",
       "              Valeur Symbole         Description du Symbole  Note  \n",
       "180     1.266867e+06       X  Sources internationales sûres   NaN  \n",
       "181     1.862303e+04       X  Sources internationales sûres   NaN  \n",
       "182     5.130860e+02       X  Sources internationales sûres   NaN  \n",
       "183     1.193944e+06       X  Sources internationales sûres   NaN  \n",
       "184     5.379896e+02       X  Sources internationales sûres   NaN  \n",
       "...              ...     ...                            ...   ...  \n",
       "238232  2.007960e+04       X  Sources internationales sûres   NaN  \n",
       "238233  1.410421e+03      Fc                Donnée calculée   NaN  \n",
       "238234  6.960250e+00      Fc                Donnée calculée   NaN  \n",
       "238235  6.960250e+00      Fc                Donnée calculée   NaN  \n",
       "238236  5.410578e+00      Fc                Donnée calculée   NaN  \n",
       "\n",
       "[13582 rows x 15 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonne \"Année\" et valeur \"2017\"\n",
    "\n",
    "aaa = data4[(data4[\"Année\"]== 2017)]\n",
    "aaa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "d555a0e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22015</td>\n",
       "      <td>Formation brute de capital fixe</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.884782e+05</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22016</td>\n",
       "      <td>Valeur ajoutée (agriculture, sylviculture et p...</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>3.239970e+05</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>858</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22075</td>\n",
       "      <td>Valeur ajoutée (Industrie manufacturière)</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>3.937078e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.282447e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237593</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22016</td>\n",
       "      <td>Valeur ajoutée (agriculture, sylviculture et p...</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.838425e+03</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237839</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22075</td>\n",
       "      <td>Valeur ajoutée (Industrie manufacturière)</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.428248e+03</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237991</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22076</td>\n",
       "      <td>Valeur ajoutée (Fabrication de produits alimen...</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.512960e+03</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238083</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22077</td>\n",
       "      <td>Valeur ajoutée (Fabrication de produits alimen...</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.512960e+03</td>\n",
       "      <td>Fc</td>\n",
       "      <td>Donnée calculée</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238231</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22011</td>\n",
       "      <td>Revenu national brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.007960e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1322 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)         Zone  \\\n",
       "180              MK  Indicateurs macro                2  Afghanistan   \n",
       "396              MK  Indicateurs macro                2  Afghanistan   \n",
       "612              MK  Indicateurs macro                2  Afghanistan   \n",
       "858              MK  Indicateurs macro                2  Afghanistan   \n",
       "990              MK  Indicateurs macro                2  Afghanistan   \n",
       "...             ...                ...              ...          ...   \n",
       "237593           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237839           MK  Indicateurs macro              181     Zimbabwe   \n",
       "237991           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238083           MK  Indicateurs macro              181     Zimbabwe   \n",
       "238231           MK  Indicateurs macro              181     Zimbabwe   \n",
       "\n",
       "        Code Élément                  Élément  Code Produit  \\\n",
       "180             6109  Valeur en devise locale         22008   \n",
       "396             6109  Valeur en devise locale         22015   \n",
       "612             6109  Valeur en devise locale         22016   \n",
       "858             6109  Valeur en devise locale         22075   \n",
       "990             6109  Valeur en devise locale         22011   \n",
       "...              ...                      ...           ...   \n",
       "237593          6109  Valeur en devise locale         22016   \n",
       "237839          6109  Valeur en devise locale         22075   \n",
       "237991          6109  Valeur en devise locale         22076   \n",
       "238083          6109  Valeur en devise locale         22077   \n",
       "238231          6109  Valeur en devise locale         22011   \n",
       "\n",
       "                                                  Produit  Code année  Année  \\\n",
       "180                                Produit Intérieur Brut        2017   2017   \n",
       "396                       Formation brute de capital fixe        2017   2017   \n",
       "612     Valeur ajoutée (agriculture, sylviculture et p...        2017   2017   \n",
       "858             Valeur ajoutée (Industrie manufacturière)        2017   2017   \n",
       "990                                  Revenu national brut        2017   2017   \n",
       "...                                                   ...         ...    ...   \n",
       "237593  Valeur ajoutée (agriculture, sylviculture et p...        2017   2017   \n",
       "237839          Valeur ajoutée (Industrie manufacturière)        2017   2017   \n",
       "237991  Valeur ajoutée (Fabrication de produits alimen...        2017   2017   \n",
       "238083  Valeur ajoutée (Fabrication de produits alimen...        2017   2017   \n",
       "238231                               Revenu national brut        2017   2017   \n",
       "\n",
       "           Unité        Valeur Symbole         Description du Symbole  Note  \n",
       "180     millions  1.266867e+06       X  Sources internationales sûres   NaN  \n",
       "396     millions  1.884782e+05       X  Sources internationales sûres   NaN  \n",
       "612     millions  3.239970e+05       X  Sources internationales sûres   NaN  \n",
       "858     millions  3.937078e+04       X  Sources internationales sûres   NaN  \n",
       "990     millions  1.282447e+06       X  Sources internationales sûres   NaN  \n",
       "...          ...           ...     ...                            ...   ...  \n",
       "237593  millions  1.838425e+03       X  Sources internationales sûres   NaN  \n",
       "237839  millions  2.428248e+03       X  Sources internationales sûres   NaN  \n",
       "237991  millions  1.512960e+03      Fc                Donnée calculée   NaN  \n",
       "238083  millions  1.512960e+03      Fc                Donnée calculée   NaN  \n",
       "238231  millions  2.007960e+04       X  Sources internationales sûres   NaN  \n",
       "\n",
       "[1322 rows x 15 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonne \"Element\" et valeur  en devise locale\n",
    "\n",
    "aaaa = aaa[(aaa[\"Élément\"]== 'Valeur en devise locale')]\n",
    "aaaa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "07f270c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1188</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>202</td>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>4.653579e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2604</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>3</td>\n",
       "      <td>Albanie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.550645e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4194</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>4</td>\n",
       "      <td>Algérie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.887620e+07</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5202</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>79</td>\n",
       "      <td>Allemagne</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>3.259860e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233009</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>236</td>\n",
       "      <td>Venezuela (République bolivarienne du)</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.506069e+08</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234017</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>237</td>\n",
       "      <td>Viet Nam</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>5.005975e+09</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235025</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>249</td>\n",
       "      <td>Yémen</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>5.190032e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236033</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>251</td>\n",
       "      <td>Zambie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.462520e+05</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237161</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.204090e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>210 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)  \\\n",
       "180              MK  Indicateurs macro                2   \n",
       "1188             MK  Indicateurs macro              202   \n",
       "2604             MK  Indicateurs macro                3   \n",
       "4194             MK  Indicateurs macro                4   \n",
       "5202             MK  Indicateurs macro               79   \n",
       "...             ...                ...              ...   \n",
       "233009           MK  Indicateurs macro              236   \n",
       "234017           MK  Indicateurs macro              237   \n",
       "235025           MK  Indicateurs macro              249   \n",
       "236033           MK  Indicateurs macro              251   \n",
       "237161           MK  Indicateurs macro              181   \n",
       "\n",
       "                                          Zone  Code Élément  \\\n",
       "180                                Afghanistan          6109   \n",
       "1188                            Afrique du Sud          6109   \n",
       "2604                                   Albanie          6109   \n",
       "4194                                   Algérie          6109   \n",
       "5202                                 Allemagne          6109   \n",
       "...                                        ...           ...   \n",
       "233009  Venezuela (République bolivarienne du)          6109   \n",
       "234017                                Viet Nam          6109   \n",
       "235025                                   Yémen          6109   \n",
       "236033                                  Zambie          6109   \n",
       "237161                                Zimbabwe          6109   \n",
       "\n",
       "                        Élément  Code Produit                 Produit  \\\n",
       "180     Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "1188    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "2604    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "4194    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "5202    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "...                         ...           ...                     ...   \n",
       "233009  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "234017  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "235025  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "236033  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "237161  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "\n",
       "        Code année  Année     Unité        Valeur Symbole  \\\n",
       "180           2017   2017  millions  1.266867e+06       X   \n",
       "1188          2017   2017  millions  4.653579e+06       X   \n",
       "2604          2017   2017  millions  1.550645e+06       X   \n",
       "4194          2017   2017  millions  1.887620e+07       X   \n",
       "5202          2017   2017  millions  3.259860e+06       X   \n",
       "...            ...    ...       ...           ...     ...   \n",
       "233009        2017   2017  millions  1.506069e+08       X   \n",
       "234017        2017   2017  millions  5.005975e+09       X   \n",
       "235025        2017   2017  millions  5.190032e+06       X   \n",
       "236033        2017   2017  millions  2.462520e+05       X   \n",
       "237161        2017   2017  millions  2.204090e+04       X   \n",
       "\n",
       "               Description du Symbole  Note  \n",
       "180     Sources internationales sûres   NaN  \n",
       "1188    Sources internationales sûres   NaN  \n",
       "2604    Sources internationales sûres   NaN  \n",
       "4194    Sources internationales sûres   NaN  \n",
       "5202    Sources internationales sûres   NaN  \n",
       "...                               ...   ...  \n",
       "233009  Sources internationales sûres   NaN  \n",
       "234017  Sources internationales sûres   NaN  \n",
       "235025  Sources internationales sûres   NaN  \n",
       "236033  Sources internationales sûres   NaN  \n",
       "237161  Sources internationales sûres   NaN  \n",
       "\n",
       "[210 rows x 15 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aaaaa = aaaa[aaaa['Produit'] == 'Produit Intérieur Brut']\n",
    "aaaaa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "00e31692",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-56-d904f2ff653f>:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  aaaaa['Valeur_PIB'] = aaaaa['Valeur']*1000000\n"
     ]
    }
   ],
   "source": [
    "#transformation valeur * 1000000 et créer une colonne \"Valeur_PIB\"\n",
    "\n",
    "aaaaa['Valeur_PIB'] = aaaaa['Valeur']*1000000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "dcd3044c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "      <th>Valeur_PIB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.266867e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1188</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>202</td>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>4.653579e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.653579e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2604</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>3</td>\n",
       "      <td>Albanie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.550645e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.550645e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4194</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>4</td>\n",
       "      <td>Algérie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.887620e+07</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.887620e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5202</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>79</td>\n",
       "      <td>Allemagne</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>3.259860e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.259860e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233009</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>236</td>\n",
       "      <td>Venezuela (République bolivarienne du)</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.506069e+08</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.506069e+14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234017</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>237</td>\n",
       "      <td>Viet Nam</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>5.005975e+09</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.005975e+15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235025</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>249</td>\n",
       "      <td>Yémen</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>5.190032e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.190032e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236033</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>251</td>\n",
       "      <td>Zambie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.462520e+05</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.462520e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237161</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.204090e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.204090e+10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>210 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)  \\\n",
       "180              MK  Indicateurs macro                2   \n",
       "1188             MK  Indicateurs macro              202   \n",
       "2604             MK  Indicateurs macro                3   \n",
       "4194             MK  Indicateurs macro                4   \n",
       "5202             MK  Indicateurs macro               79   \n",
       "...             ...                ...              ...   \n",
       "233009           MK  Indicateurs macro              236   \n",
       "234017           MK  Indicateurs macro              237   \n",
       "235025           MK  Indicateurs macro              249   \n",
       "236033           MK  Indicateurs macro              251   \n",
       "237161           MK  Indicateurs macro              181   \n",
       "\n",
       "                                          Zone  Code Élément  \\\n",
       "180                                Afghanistan          6109   \n",
       "1188                            Afrique du Sud          6109   \n",
       "2604                                   Albanie          6109   \n",
       "4194                                   Algérie          6109   \n",
       "5202                                 Allemagne          6109   \n",
       "...                                        ...           ...   \n",
       "233009  Venezuela (République bolivarienne du)          6109   \n",
       "234017                                Viet Nam          6109   \n",
       "235025                                   Yémen          6109   \n",
       "236033                                  Zambie          6109   \n",
       "237161                                Zimbabwe          6109   \n",
       "\n",
       "                        Élément  Code Produit                 Produit  \\\n",
       "180     Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "1188    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "2604    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "4194    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "5202    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "...                         ...           ...                     ...   \n",
       "233009  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "234017  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "235025  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "236033  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "237161  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "\n",
       "        Code année  Année     Unité        Valeur Symbole  \\\n",
       "180           2017   2017  millions  1.266867e+06       X   \n",
       "1188          2017   2017  millions  4.653579e+06       X   \n",
       "2604          2017   2017  millions  1.550645e+06       X   \n",
       "4194          2017   2017  millions  1.887620e+07       X   \n",
       "5202          2017   2017  millions  3.259860e+06       X   \n",
       "...            ...    ...       ...           ...     ...   \n",
       "233009        2017   2017  millions  1.506069e+08       X   \n",
       "234017        2017   2017  millions  5.005975e+09       X   \n",
       "235025        2017   2017  millions  5.190032e+06       X   \n",
       "236033        2017   2017  millions  2.462520e+05       X   \n",
       "237161        2017   2017  millions  2.204090e+04       X   \n",
       "\n",
       "               Description du Symbole  Note    Valeur_PIB  \n",
       "180     Sources internationales sûres   NaN  1.266867e+12  \n",
       "1188    Sources internationales sûres   NaN  4.653579e+12  \n",
       "2604    Sources internationales sûres   NaN  1.550645e+12  \n",
       "4194    Sources internationales sûres   NaN  1.887620e+13  \n",
       "5202    Sources internationales sûres   NaN  3.259860e+12  \n",
       "...                               ...   ...           ...  \n",
       "233009  Sources internationales sûres   NaN  1.506069e+14  \n",
       "234017  Sources internationales sûres   NaN  5.005975e+15  \n",
       "235025  Sources internationales sûres   NaN  5.190032e+12  \n",
       "236033  Sources internationales sûres   NaN  2.462520e+11  \n",
       "237161  Sources internationales sûres   NaN  2.204090e+10  \n",
       "\n",
       "[210 rows x 16 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aaaaa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "ac7357f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Zone</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Note</th>\n",
       "      <th>Valeur_PIB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.266867e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1188</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>202</td>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>4.653579e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.653579e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2604</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>3</td>\n",
       "      <td>Albanie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.550645e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.550645e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4194</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>4</td>\n",
       "      <td>Algérie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.887620e+07</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.887620e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5202</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>79</td>\n",
       "      <td>Allemagne</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>3.259860e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.259860e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233009</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>236</td>\n",
       "      <td>Venezuela (République bolivarienne du)</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.506069e+08</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.506069e+14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234017</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>237</td>\n",
       "      <td>Viet Nam</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>5.005975e+09</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.005975e+15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235025</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>249</td>\n",
       "      <td>Yémen</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>5.190032e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.190032e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236033</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>251</td>\n",
       "      <td>Zambie</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.462520e+05</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.462520e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237161</th>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>181</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>6109</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>millions</td>\n",
       "      <td>2.204090e+04</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.204090e+10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>210 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Code Domaine            Domaine  Code zone (FAO)  \\\n",
       "180              MK  Indicateurs macro                2   \n",
       "1188             MK  Indicateurs macro              202   \n",
       "2604             MK  Indicateurs macro                3   \n",
       "4194             MK  Indicateurs macro                4   \n",
       "5202             MK  Indicateurs macro               79   \n",
       "...             ...                ...              ...   \n",
       "233009           MK  Indicateurs macro              236   \n",
       "234017           MK  Indicateurs macro              237   \n",
       "235025           MK  Indicateurs macro              249   \n",
       "236033           MK  Indicateurs macro              251   \n",
       "237161           MK  Indicateurs macro              181   \n",
       "\n",
       "                                          Zone  Code Élément  \\\n",
       "180                                Afghanistan          6109   \n",
       "1188                            Afrique du Sud          6109   \n",
       "2604                                   Albanie          6109   \n",
       "4194                                   Algérie          6109   \n",
       "5202                                 Allemagne          6109   \n",
       "...                                        ...           ...   \n",
       "233009  Venezuela (République bolivarienne du)          6109   \n",
       "234017                                Viet Nam          6109   \n",
       "235025                                   Yémen          6109   \n",
       "236033                                  Zambie          6109   \n",
       "237161                                Zimbabwe          6109   \n",
       "\n",
       "                        Élément  Code Produit                 Produit  \\\n",
       "180     Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "1188    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "2604    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "4194    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "5202    Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "...                         ...           ...                     ...   \n",
       "233009  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "234017  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "235025  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "236033  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "237161  Valeur en devise locale         22008  Produit Intérieur Brut   \n",
       "\n",
       "        Code année  Année     Unité        Valeur Symbole  \\\n",
       "180           2017   2017  millions  1.266867e+06       X   \n",
       "1188          2017   2017  millions  4.653579e+06       X   \n",
       "2604          2017   2017  millions  1.550645e+06       X   \n",
       "4194          2017   2017  millions  1.887620e+07       X   \n",
       "5202          2017   2017  millions  3.259860e+06       X   \n",
       "...            ...    ...       ...           ...     ...   \n",
       "233009        2017   2017  millions  1.506069e+08       X   \n",
       "234017        2017   2017  millions  5.005975e+09       X   \n",
       "235025        2017   2017  millions  5.190032e+06       X   \n",
       "236033        2017   2017  millions  2.462520e+05       X   \n",
       "237161        2017   2017  millions  2.204090e+04       X   \n",
       "\n",
       "               Description du Symbole  Note    Valeur_PIB  \n",
       "180     Sources internationales sûres   NaN  1.266867e+12  \n",
       "1188    Sources internationales sûres   NaN  4.653579e+12  \n",
       "2604    Sources internationales sûres   NaN  1.550645e+12  \n",
       "4194    Sources internationales sûres   NaN  1.887620e+13  \n",
       "5202    Sources internationales sûres   NaN  3.259860e+12  \n",
       "...                               ...   ...           ...  \n",
       "233009  Sources internationales sûres   NaN  1.506069e+14  \n",
       "234017  Sources internationales sûres   NaN  5.005975e+15  \n",
       "235025  Sources internationales sûres   NaN  5.190032e+12  \n",
       "236033  Sources internationales sûres   NaN  2.462520e+11  \n",
       "237161  Sources internationales sûres   NaN  2.204090e+10  \n",
       "\n",
       "[210 rows x 16 columns]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#suppresion des doublons par Zone pour n'obtenir que colonne Produit = \"Produit Interieur Brut\"\n",
    "\n",
    "df_final6 = aaaaa.drop_duplicates('Zone')\n",
    "df_final6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "0ef4dbc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#supression valeur avec NAN\n",
    "\n",
    "df_final6.dropna(axis=1, inplace= True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "a5cf4a17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "      <th>Code Domaine</th>\n",
       "      <th>Domaine</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Unité</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Symbole</th>\n",
       "      <th>Description du Symbole</th>\n",
       "      <th>Valeur_PIB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2017</td>\n",
       "      <td>2.800000e+07</td>\n",
       "      <td>29000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>7.360045e+06</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.266867e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afrique du Sud</td>\n",
       "      <td>2017</td>\n",
       "      <td>1.667000e+09</td>\n",
       "      <td>514000000.0</td>\n",
       "      <td>6.300000e+07</td>\n",
       "      <td>3.306249e+08</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>202.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>4.653579e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>4.653579e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Albanie</td>\n",
       "      <td>2017</td>\n",
       "      <td>1.300000e+07</td>\n",
       "      <td>38000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>9.942371e+06</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.550645e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.550645e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Algérie</td>\n",
       "      <td>2017</td>\n",
       "      <td>2.750000e+08</td>\n",
       "      <td>2000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.692835e+07</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.887620e+07</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.887620e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Allemagne</td>\n",
       "      <td>2017</td>\n",
       "      <td>1.514000e+09</td>\n",
       "      <td>842000000.0</td>\n",
       "      <td>6.460000e+08</td>\n",
       "      <td>2.380103e+08</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>79.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>3.259860e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>3.259860e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Émirats arabes unis</td>\n",
       "      <td>2017</td>\n",
       "      <td>4.800000e+07</td>\n",
       "      <td>433000000.0</td>\n",
       "      <td>9.400000e+07</td>\n",
       "      <td>5.655954e+07</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>225.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.416136e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.416136e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Équateur</td>\n",
       "      <td>2017</td>\n",
       "      <td>3.400000e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.650139e+07</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>58.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.042959e+05</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.042959e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>États-Unis d'Amérique</td>\n",
       "      <td>2017</td>\n",
       "      <td>2.191400e+10</td>\n",
       "      <td>123000000.0</td>\n",
       "      <td>3.692000e+09</td>\n",
       "      <td>2.887294e+09</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>231.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.954298e+07</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.954298e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>Éthiopie</td>\n",
       "      <td>2017</td>\n",
       "      <td>1.400000e+07</td>\n",
       "      <td>1000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>238.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>1.832786e+06</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>1.832786e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>Îles Salomon</td>\n",
       "      <td>2017</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.643085e+05</td>\n",
       "      <td>MK</td>\n",
       "      <td>Indicateurs macro</td>\n",
       "      <td>25.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>Valeur en devise locale</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>Produit Intérieur Brut</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>millions</td>\n",
       "      <td>9.589055e+03</td>\n",
       "      <td>X</td>\n",
       "      <td>Sources internationales sûres</td>\n",
       "      <td>9.589055e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Zone  Année  Valeur_Production  \\\n",
       "0              Afghanistan   2017       2.800000e+07   \n",
       "1           Afrique du Sud   2017       1.667000e+09   \n",
       "2                  Albanie   2017       1.300000e+07   \n",
       "3                  Algérie   2017       2.750000e+08   \n",
       "4                Allemagne   2017       1.514000e+09   \n",
       "..                     ...    ...                ...   \n",
       "167    Émirats arabes unis   2017       4.800000e+07   \n",
       "168               Équateur   2017       3.400000e+08   \n",
       "169  États-Unis d'Amérique   2017       2.191400e+10   \n",
       "170               Éthiopie   2017       1.400000e+07   \n",
       "171           Îles Salomon   2017       0.000000e+00   \n",
       "\n",
       "     Valeur_Importations_Quantité  Valeur_Exportations_Quantité  \\\n",
       "0                      29000000.0                  0.000000e+00   \n",
       "1                     514000000.0                  6.300000e+07   \n",
       "2                      38000000.0                  0.000000e+00   \n",
       "3                       2000000.0                  0.000000e+00   \n",
       "4                     842000000.0                  6.460000e+08   \n",
       "..                            ...                           ...   \n",
       "167                   433000000.0                  9.400000e+07   \n",
       "168                           0.0                  0.000000e+00   \n",
       "169                   123000000.0                  3.692000e+09   \n",
       "170                     1000000.0                  0.000000e+00   \n",
       "171                     6000000.0                  0.000000e+00   \n",
       "\n",
       "     Valeur_Disponibilité_alimentaire_Kg_an Code Domaine            Domaine  \\\n",
       "0                              7.360045e+06           MK  Indicateurs macro   \n",
       "1                              3.306249e+08           MK  Indicateurs macro   \n",
       "2                              9.942371e+06           MK  Indicateurs macro   \n",
       "3                              3.692835e+07           MK  Indicateurs macro   \n",
       "4                              2.380103e+08           MK  Indicateurs macro   \n",
       "..                                      ...          ...                ...   \n",
       "167                            5.655954e+07           MK  Indicateurs macro   \n",
       "168                            5.650139e+07           MK  Indicateurs macro   \n",
       "169                            2.887294e+09           MK  Indicateurs macro   \n",
       "170                            0.000000e+00           MK  Indicateurs macro   \n",
       "171                            4.643085e+05           MK  Indicateurs macro   \n",
       "\n",
       "     Code zone (FAO)  Code Élément                  Élément  Code Produit  \\\n",
       "0                2.0        6109.0  Valeur en devise locale       22008.0   \n",
       "1              202.0        6109.0  Valeur en devise locale       22008.0   \n",
       "2                3.0        6109.0  Valeur en devise locale       22008.0   \n",
       "3                4.0        6109.0  Valeur en devise locale       22008.0   \n",
       "4               79.0        6109.0  Valeur en devise locale       22008.0   \n",
       "..               ...           ...                      ...           ...   \n",
       "167            225.0        6109.0  Valeur en devise locale       22008.0   \n",
       "168             58.0        6109.0  Valeur en devise locale       22008.0   \n",
       "169            231.0        6109.0  Valeur en devise locale       22008.0   \n",
       "170            238.0        6109.0  Valeur en devise locale       22008.0   \n",
       "171             25.0        6109.0  Valeur en devise locale       22008.0   \n",
       "\n",
       "                    Produit  Code année     Unité        Valeur Symbole  \\\n",
       "0    Produit Intérieur Brut      2017.0  millions  1.266867e+06       X   \n",
       "1    Produit Intérieur Brut      2017.0  millions  4.653579e+06       X   \n",
       "2    Produit Intérieur Brut      2017.0  millions  1.550645e+06       X   \n",
       "3    Produit Intérieur Brut      2017.0  millions  1.887620e+07       X   \n",
       "4    Produit Intérieur Brut      2017.0  millions  3.259860e+06       X   \n",
       "..                      ...         ...       ...           ...     ...   \n",
       "167  Produit Intérieur Brut      2017.0  millions  1.416136e+06       X   \n",
       "168  Produit Intérieur Brut      2017.0  millions  1.042959e+05       X   \n",
       "169  Produit Intérieur Brut      2017.0  millions  1.954298e+07       X   \n",
       "170  Produit Intérieur Brut      2017.0  millions  1.832786e+06       X   \n",
       "171  Produit Intérieur Brut      2017.0  millions  9.589055e+03       X   \n",
       "\n",
       "            Description du Symbole    Valeur_PIB  \n",
       "0    Sources internationales sûres  1.266867e+12  \n",
       "1    Sources internationales sûres  4.653579e+12  \n",
       "2    Sources internationales sûres  1.550645e+12  \n",
       "3    Sources internationales sûres  1.887620e+13  \n",
       "4    Sources internationales sûres  3.259860e+12  \n",
       "..                             ...           ...  \n",
       "167  Sources internationales sûres  1.416136e+12  \n",
       "168  Sources internationales sûres  1.042959e+11  \n",
       "169  Sources internationales sûres  1.954298e+13  \n",
       "170  Sources internationales sûres  1.832786e+12  \n",
       "171  Sources internationales sûres  9.589055e+09  \n",
       "\n",
       "[172 rows x 19 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "union3 = pd.merge(df_filtre_final2,df_final6, how=\"left\", on=[\"Zone\", \"Année\"])\n",
    "union3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "56741d5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "      <th>Code zone (FAO)</th>\n",
       "      <th>Code Élément</th>\n",
       "      <th>Code Produit</th>\n",
       "      <th>Code année</th>\n",
       "      <th>Valeur</th>\n",
       "      <th>Valeur_PIB</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <th>2017</th>\n",
       "      <td>2.800000e+07</td>\n",
       "      <td>29000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>7.360045e+06</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.266867e+06</td>\n",
       "      <td>1.266867e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afrique du Sud</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.667000e+09</td>\n",
       "      <td>514000000.0</td>\n",
       "      <td>6.300000e+07</td>\n",
       "      <td>3.306249e+08</td>\n",
       "      <td>202.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>4.653579e+06</td>\n",
       "      <td>4.653579e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Albanie</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.300000e+07</td>\n",
       "      <td>38000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>9.942371e+06</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.550645e+06</td>\n",
       "      <td>1.550645e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Algérie</th>\n",
       "      <th>2017</th>\n",
       "      <td>2.750000e+08</td>\n",
       "      <td>2000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.692835e+07</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.887620e+07</td>\n",
       "      <td>1.887620e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allemagne</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.514000e+09</td>\n",
       "      <td>842000000.0</td>\n",
       "      <td>6.460000e+08</td>\n",
       "      <td>2.380103e+08</td>\n",
       "      <td>79.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>3.259860e+06</td>\n",
       "      <td>3.259860e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Émirats arabes unis</th>\n",
       "      <th>2017</th>\n",
       "      <td>4.800000e+07</td>\n",
       "      <td>433000000.0</td>\n",
       "      <td>9.400000e+07</td>\n",
       "      <td>5.655954e+07</td>\n",
       "      <td>225.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.416136e+06</td>\n",
       "      <td>1.416136e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Équateur</th>\n",
       "      <th>2017</th>\n",
       "      <td>3.400000e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.650139e+07</td>\n",
       "      <td>58.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.042959e+05</td>\n",
       "      <td>1.042959e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>États-Unis d'Amérique</th>\n",
       "      <th>2017</th>\n",
       "      <td>2.191400e+10</td>\n",
       "      <td>123000000.0</td>\n",
       "      <td>3.692000e+09</td>\n",
       "      <td>2.887294e+09</td>\n",
       "      <td>231.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.954298e+07</td>\n",
       "      <td>1.954298e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Éthiopie</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.400000e+07</td>\n",
       "      <td>1000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>238.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>1.832786e+06</td>\n",
       "      <td>1.832786e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Îles Salomon</th>\n",
       "      <th>2017</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.643085e+05</td>\n",
       "      <td>25.0</td>\n",
       "      <td>6109.0</td>\n",
       "      <td>22008.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>9.589055e+03</td>\n",
       "      <td>9.589055e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Valeur_Production  Valeur_Importations_Quantité  \\\n",
       "Zone                  Année                                                    \n",
       "Afghanistan           2017        2.800000e+07                    29000000.0   \n",
       "Afrique du Sud        2017        1.667000e+09                   514000000.0   \n",
       "Albanie               2017        1.300000e+07                    38000000.0   \n",
       "Algérie               2017        2.750000e+08                     2000000.0   \n",
       "Allemagne             2017        1.514000e+09                   842000000.0   \n",
       "...                                        ...                           ...   \n",
       "Émirats arabes unis   2017        4.800000e+07                   433000000.0   \n",
       "Équateur              2017        3.400000e+08                           0.0   \n",
       "États-Unis d'Amérique 2017        2.191400e+10                   123000000.0   \n",
       "Éthiopie              2017        1.400000e+07                     1000000.0   \n",
       "Îles Salomon          2017        0.000000e+00                     6000000.0   \n",
       "\n",
       "                             Valeur_Exportations_Quantité  \\\n",
       "Zone                  Année                                 \n",
       "Afghanistan           2017                   0.000000e+00   \n",
       "Afrique du Sud        2017                   6.300000e+07   \n",
       "Albanie               2017                   0.000000e+00   \n",
       "Algérie               2017                   0.000000e+00   \n",
       "Allemagne             2017                   6.460000e+08   \n",
       "...                                                   ...   \n",
       "Émirats arabes unis   2017                   9.400000e+07   \n",
       "Équateur              2017                   0.000000e+00   \n",
       "États-Unis d'Amérique 2017                   3.692000e+09   \n",
       "Éthiopie              2017                   0.000000e+00   \n",
       "Îles Salomon          2017                   0.000000e+00   \n",
       "\n",
       "                             Valeur_Disponibilité_alimentaire_Kg_an  \\\n",
       "Zone                  Année                                           \n",
       "Afghanistan           2017                             7.360045e+06   \n",
       "Afrique du Sud        2017                             3.306249e+08   \n",
       "Albanie               2017                             9.942371e+06   \n",
       "Algérie               2017                             3.692835e+07   \n",
       "Allemagne             2017                             2.380103e+08   \n",
       "...                                                             ...   \n",
       "Émirats arabes unis   2017                             5.655954e+07   \n",
       "Équateur              2017                             5.650139e+07   \n",
       "États-Unis d'Amérique 2017                             2.887294e+09   \n",
       "Éthiopie              2017                             0.000000e+00   \n",
       "Îles Salomon          2017                             4.643085e+05   \n",
       "\n",
       "                             Code zone (FAO)  Code Élément  Code Produit  \\\n",
       "Zone                  Année                                                \n",
       "Afghanistan           2017               2.0        6109.0       22008.0   \n",
       "Afrique du Sud        2017             202.0        6109.0       22008.0   \n",
       "Albanie               2017               3.0        6109.0       22008.0   \n",
       "Algérie               2017               4.0        6109.0       22008.0   \n",
       "Allemagne             2017              79.0        6109.0       22008.0   \n",
       "...                                      ...           ...           ...   \n",
       "Émirats arabes unis   2017             225.0        6109.0       22008.0   \n",
       "Équateur              2017              58.0        6109.0       22008.0   \n",
       "États-Unis d'Amérique 2017             231.0        6109.0       22008.0   \n",
       "Éthiopie              2017             238.0        6109.0       22008.0   \n",
       "Îles Salomon          2017              25.0        6109.0       22008.0   \n",
       "\n",
       "                             Code année        Valeur    Valeur_PIB  \n",
       "Zone                  Année                                          \n",
       "Afghanistan           2017       2017.0  1.266867e+06  1.266867e+12  \n",
       "Afrique du Sud        2017       2017.0  4.653579e+06  4.653579e+12  \n",
       "Albanie               2017       2017.0  1.550645e+06  1.550645e+12  \n",
       "Algérie               2017       2017.0  1.887620e+07  1.887620e+13  \n",
       "Allemagne             2017       2017.0  3.259860e+06  3.259860e+12  \n",
       "...                                 ...           ...           ...  \n",
       "Émirats arabes unis   2017       2017.0  1.416136e+06  1.416136e+12  \n",
       "Équateur              2017       2017.0  1.042959e+05  1.042959e+11  \n",
       "États-Unis d'Amérique 2017       2017.0  1.954298e+07  1.954298e+13  \n",
       "Éthiopie              2017       2017.0  1.832786e+06  1.832786e+12  \n",
       "Îles Salomon          2017       2017.0  9.589055e+03  9.589055e+09  \n",
       "\n",
       "[172 rows x 10 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_filtre_final3 = union3.groupby([\"Zone\", \"Année\"]).sum()\n",
    "df_filtre_final3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "6b79f530",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Valeur_Production</th>\n",
       "      <th>Valeur_Importations_Quantité</th>\n",
       "      <th>Valeur_Exportations_Quantité</th>\n",
       "      <th>Valeur_Disponibilité_alimentaire_Kg_an</th>\n",
       "      <th>Valeur_PIB</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone</th>\n",
       "      <th>Année</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Afghanistan</th>\n",
       "      <th>2017</th>\n",
       "      <td>2.800000e+07</td>\n",
       "      <td>29000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>7.360045e+06</td>\n",
       "      <td>1.266867e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Afrique du Sud</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.667000e+09</td>\n",
       "      <td>514000000.0</td>\n",
       "      <td>6.300000e+07</td>\n",
       "      <td>3.306249e+08</td>\n",
       "      <td>4.653579e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Albanie</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.300000e+07</td>\n",
       "      <td>38000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>9.942371e+06</td>\n",
       "      <td>1.550645e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Algérie</th>\n",
       "      <th>2017</th>\n",
       "      <td>2.750000e+08</td>\n",
       "      <td>2000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.692835e+07</td>\n",
       "      <td>1.887620e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allemagne</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.514000e+09</td>\n",
       "      <td>842000000.0</td>\n",
       "      <td>6.460000e+08</td>\n",
       "      <td>2.380103e+08</td>\n",
       "      <td>3.259860e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Émirats arabes unis</th>\n",
       "      <th>2017</th>\n",
       "      <td>4.800000e+07</td>\n",
       "      <td>433000000.0</td>\n",
       "      <td>9.400000e+07</td>\n",
       "      <td>5.655954e+07</td>\n",
       "      <td>1.416136e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Équateur</th>\n",
       "      <th>2017</th>\n",
       "      <td>3.400000e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5.650139e+07</td>\n",
       "      <td>1.042959e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>États-Unis d'Amérique</th>\n",
       "      <th>2017</th>\n",
       "      <td>2.191400e+10</td>\n",
       "      <td>123000000.0</td>\n",
       "      <td>3.692000e+09</td>\n",
       "      <td>2.887294e+09</td>\n",
       "      <td>1.954298e+13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Éthiopie</th>\n",
       "      <th>2017</th>\n",
       "      <td>1.400000e+07</td>\n",
       "      <td>1000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.832786e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Îles Salomon</th>\n",
       "      <th>2017</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.643085e+05</td>\n",
       "      <td>9.589055e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Valeur_Production  Valeur_Importations_Quantité  \\\n",
       "Zone                  Année                                                    \n",
       "Afghanistan           2017        2.800000e+07                    29000000.0   \n",
       "Afrique du Sud        2017        1.667000e+09                   514000000.0   \n",
       "Albanie               2017        1.300000e+07                    38000000.0   \n",
       "Algérie               2017        2.750000e+08                     2000000.0   \n",
       "Allemagne             2017        1.514000e+09                   842000000.0   \n",
       "...                                        ...                           ...   \n",
       "Émirats arabes unis   2017        4.800000e+07                   433000000.0   \n",
       "Équateur              2017        3.400000e+08                           0.0   \n",
       "États-Unis d'Amérique 2017        2.191400e+10                   123000000.0   \n",
       "Éthiopie              2017        1.400000e+07                     1000000.0   \n",
       "Îles Salomon          2017        0.000000e+00                     6000000.0   \n",
       "\n",
       "                             Valeur_Exportations_Quantité  \\\n",
       "Zone                  Année                                 \n",
       "Afghanistan           2017                   0.000000e+00   \n",
       "Afrique du Sud        2017                   6.300000e+07   \n",
       "Albanie               2017                   0.000000e+00   \n",
       "Algérie               2017                   0.000000e+00   \n",
       "Allemagne             2017                   6.460000e+08   \n",
       "...                                                   ...   \n",
       "Émirats arabes unis   2017                   9.400000e+07   \n",
       "Équateur              2017                   0.000000e+00   \n",
       "États-Unis d'Amérique 2017                   3.692000e+09   \n",
       "Éthiopie              2017                   0.000000e+00   \n",
       "Îles Salomon          2017                   0.000000e+00   \n",
       "\n",
       "                             Valeur_Disponibilité_alimentaire_Kg_an  \\\n",
       "Zone                  Année                                           \n",
       "Afghanistan           2017                             7.360045e+06   \n",
       "Afrique du Sud        2017                             3.306249e+08   \n",
       "Albanie               2017                             9.942371e+06   \n",
       "Algérie               2017                             3.692835e+07   \n",
       "Allemagne             2017                             2.380103e+08   \n",
       "...                                                             ...   \n",
       "Émirats arabes unis   2017                             5.655954e+07   \n",
       "Équateur              2017                             5.650139e+07   \n",
       "États-Unis d'Amérique 2017                             2.887294e+09   \n",
       "Éthiopie              2017                             0.000000e+00   \n",
       "Îles Salomon          2017                             4.643085e+05   \n",
       "\n",
       "                               Valeur_PIB  \n",
       "Zone                  Année                \n",
       "Afghanistan           2017   1.266867e+12  \n",
       "Afrique du Sud        2017   4.653579e+12  \n",
       "Albanie               2017   1.550645e+12  \n",
       "Algérie               2017   1.887620e+13  \n",
       "Allemagne             2017   3.259860e+12  \n",
       "...                                   ...  \n",
       "Émirats arabes unis   2017   1.416136e+12  \n",
       "Équateur              2017   1.042959e+11  \n",
       "États-Unis d'Amérique 2017   1.954298e+13  \n",
       "Éthiopie              2017   1.832786e+12  \n",
       "Îles Salomon          2017   9.589055e+09  \n",
       "\n",
       "[172 rows x 5 columns]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtre sur colonne Zone, Produit_x, Element_x , Année, Valeur_pop_reelle, 'Valeur_Production', 'Valeur_Importations_Quantité', 'Valeur_Exportations_Quantité', 'Valeur_Disponibilité_alimentaire_Kg_an\n",
    "\n",
    "df_filtre_final4 = df_filtre_final3.filter(items=[ 'Valeur_Production', 'Valeur_Importations_Quantité', 'Valeur_Exportations_Quantité', 'Valeur_Disponibilité_alimentaire_Kg_an', 'Valeur_PIB']) \n",
    "df_filtre_final4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "cf281e15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<AxesSubplot:xlabel='Valeur_Production', ylabel='Valeur_Production'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Importations_Quantité', ylabel='Valeur_Production'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Exportations_Quantité', ylabel='Valeur_Production'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Disponibilité_alimentaire_Kg_an', ylabel='Valeur_Production'>,\n",
       "        <AxesSubplot:xlabel='Valeur_PIB', ylabel='Valeur_Production'>],\n",
       "       [<AxesSubplot:xlabel='Valeur_Production', ylabel='Valeur_Importations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Importations_Quantité', ylabel='Valeur_Importations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Exportations_Quantité', ylabel='Valeur_Importations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Disponibilité_alimentaire_Kg_an', ylabel='Valeur_Importations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_PIB', ylabel='Valeur_Importations_Quantité'>],\n",
       "       [<AxesSubplot:xlabel='Valeur_Production', ylabel='Valeur_Exportations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Importations_Quantité', ylabel='Valeur_Exportations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Exportations_Quantité', ylabel='Valeur_Exportations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Disponibilité_alimentaire_Kg_an', ylabel='Valeur_Exportations_Quantité'>,\n",
       "        <AxesSubplot:xlabel='Valeur_PIB', ylabel='Valeur_Exportations_Quantité'>],\n",
       "       [<AxesSubplot:xlabel='Valeur_Production', ylabel='Valeur_Disponibilité_alimentaire_Kg_an'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Importations_Quantité', ylabel='Valeur_Disponibilité_alimentaire_Kg_an'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Exportations_Quantité', ylabel='Valeur_Disponibilité_alimentaire_Kg_an'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Disponibilité_alimentaire_Kg_an', ylabel='Valeur_Disponibilité_alimentaire_Kg_an'>,\n",
       "        <AxesSubplot:xlabel='Valeur_PIB', ylabel='Valeur_Disponibilité_alimentaire_Kg_an'>],\n",
       "       [<AxesSubplot:xlabel='Valeur_Production', ylabel='Valeur_PIB'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Importations_Quantité', ylabel='Valeur_PIB'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Exportations_Quantité', ylabel='Valeur_PIB'>,\n",
       "        <AxesSubplot:xlabel='Valeur_Disponibilité_alimentaire_Kg_an', ylabel='Valeur_PIB'>,\n",
       "        <AxesSubplot:xlabel='Valeur_PIB', ylabel='Valeur_PIB'>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x648 with 25 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#graphique - croisement deux à deux des variables\n",
    "from pandas.plotting import scatter_matrix\n",
    "scatter_matrix(df_filtre_final4,figsize=(9,9))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "a8fe8264",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Nous pouvons voir que la matrice de dispersion(scatter_matrix), matrice de covariance entre variable,\n",
    "#que les variables 'Valeur-Production' est corrélé à la 'valeur_disponibilité alimentaire_Kcal', et vice versa."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "37125227",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Clustering simple \n",
    "#Réalisation ACP\n",
    "\n",
    "#import pandas as pd\n",
    "#import numpy as np\n",
    "#from sklearn import decomposition\n",
    "#from sklearn import preprocessing\n",
    "\n",
    "\n",
    "# choix du nombre de composantes à calculer\n",
    "n_comp = 5\n",
    "\n",
    "# import de l'échantillon\n",
    "data = df_filtre_final4\n",
    "\n",
    "# selection des colonnes à prendre en compte dans l'ACP\n",
    "data_pca = data[['Valeur_Production', 'Valeur_Importations_Quantité', 'Valeur_Exportations_Quantité', 'Valeur_Disponibilité_alimentaire_Kg_an', 'Valeur_PIB']]\n",
    "\n",
    "# préparation des données pour l'ACP\n",
    "data_pca = data_pca.fillna(data_pca.mean()) # remplacer les valeurs inconnues par la moyenne de la variable\n",
    "X = data_pca.values\n",
    "names = data.index \n",
    "features = data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "18892026",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn import decomposition\n",
    "from sklearn import preprocessing\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Centrage et Réduction\n",
    "std_scale = preprocessing.StandardScaler().fit(X)\n",
    "X_scaled = std_scale.transform(X)\n",
    "\n",
    "# Calcul des composantes principales\n",
    "pca = decomposition.PCA(n_components=n_comp)\n",
    "pca.fit(X_scaled)\n",
    "\n",
    "# Eboulis des valeurs propres\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "#1ère méthode \n",
    "\n",
    "#y = list(pca.explained_variance_ratio_)\n",
    "#x = range(len(y))\n",
    "\n",
    "#ycum = np.cumsum(y)\n",
    "\n",
    "#plt.bar(x,y)\n",
    "\n",
    "#plt.plot(x,ycum,\"-r\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "4055abf1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#éboulis des valeurs propres avec label\n",
    "#2ème méthode\n",
    "\n",
    "def display_scree_plot(pca):\n",
    "    scree = pca.explained_variance_ratio_*100\n",
    "    plt.bar(np.arange(len(scree)), scree)\n",
    "    plt.plot(np.arange(len(scree)), scree.cumsum(),c=\"red\",marker='o')\n",
    "    plt.xlabel(\"rang de l'axe d'inertie\")\n",
    "    plt.ylabel(\"pourcentage d'inertie\")\n",
    "    plt.title(\"Eboulis des valeurs propres\")\n",
    "    plt.show(block=False)\n",
    "    \n",
    "# Eboulis des valeurs propres\n",
    "display_scree_plot(pca)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "cfcf683e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#le graphique des eboulis des valeurs propres nous permet de choisir le nombre de facteurs\n",
    "#But : obtenir le maximum d'inertie conservé avec le minimum de facteurs \n",
    "#règle du \"coude\" : on coupe l'éboulis des valeurs propres à l'endroit ou celui ci possède un coude.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "07d7c05b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Nous pouvons voir que le coude se forme au rang de l'axe d'inertie = 2\n",
    "#Donc nombre de facteur = 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "147f9ddf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Cercle des corrélations\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.collections import LineCollection\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "def display_circles(pcs, n_comp, pca, axis_ranks, labels=None, label_rotation=0, lims=None):\n",
    "    for d1, d2 in axis_ranks: # On affiche les 2 premiers plans fatoriel\n",
    "        if d2 < n_comp:\n",
    "\n",
    "            # initialisation de la figure\n",
    "            fig, ax = plt.subplots(figsize=(8,8))\n",
    "\n",
    "            # détermination des limites du graphique\n",
    "            if lims is not None :\n",
    "                xmin, xmax, ymin, ymax = lims\n",
    "            elif pcs.shape[1] < 30 :\n",
    "                xmin, xmax, ymin, ymax = -1, 1, -1, 1\n",
    "            else :\n",
    "                xmin, xmax, ymin, ymax = min(pcs[d1,:]), max(pcs[d1,:]), min(pcs[d2,:]), max(pcs[d2,:])\n",
    "\n",
    "            # affichage des flèches\n",
    "            # s'il y a plus de 30 flèches, on n'affiche pas le triangle à leur extrémité\n",
    "            if pcs.shape[1] < 30 :\n",
    "                plt.quiver(np.zeros(pcs.shape[1]), np.zeros(pcs.shape[1]),\n",
    "                   pcs[d1,:], pcs[d2,:], \n",
    "                   angles='xy', scale_units='xy', scale=1, color=\"grey\")\n",
    "\n",
    "            else:\n",
    "                lines = [[[0,0],[x,y]] for x,y in pcs[[d1,d2]].T]\n",
    "                ax.add_collection(LineCollection(lines, axes=ax, alpha=.1, color='black'))\n",
    "\n",
    "            # affichage des noms des variables  \n",
    "            if labels is not None:  \n",
    "                for i,(x, y) in enumerate(pcs[[d1,d2]].T):\n",
    "                    if x >= xmin and x <= xmax and y >= ymin and y <= ymax :\n",
    "                        plt.text(x, y, labels[i], fontsize='14', ha='center', va='center', rotation=label_rotation, color=\"blue\", alpha=0.5)\n",
    "\n",
    "            # affichage du cercle\n",
    "            circle = plt.Circle((0,0), 1, facecolor='none', edgecolor='b')\n",
    "            plt.gca().add_artist(circle)\n",
    "\n",
    "            # définition des limites du graphique\n",
    "            plt.xlim(xmin, xmax)\n",
    "            plt.ylim(ymin, ymax)\n",
    "            plt.ylim(ymin, ymax)\n",
    "            \n",
    "            # affichage des lignes horizontales et verticales\n",
    "            plt.plot([-1, 1], [0, 0], color='grey', ls='--')\n",
    "            plt.plot([0, 0], [-1, 1], color='grey', ls='--')\n",
    "           \n",
    "            \n",
    "            # nom des axes, avec le pourcentage d'inertie expliqué\n",
    "            plt.xlabel('F{} ({}%)'.format(d1+1, round(100*pca.explained_variance_ratio_[d1],1)))\n",
    "            plt.ylabel('F{} ({}%)'.format(d2+1, round(100*pca.explained_variance_ratio_[d2],1)))\n",
    "            \n",
    "            \n",
    "            plt.title(\"Cercle des corrélations (F{} et F{})\".format(d1+1, d1+2))\n",
    "            plt.show(block=False)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "pcs = pca.components_\n",
    "display_circles(pcs, n_comp, pca, [(0,1),(2,3)], labels = np.array(features))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "53d7b3ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#Les variables les plus corrélées à F1 sont :;\n",
    "#Disponibilité alimentaire (positivement)\n",
    "#valeur production (positivement)\n",
    "#valeur exportations (négativement)\n",
    "\n",
    "\n",
    "#Les variables les plus corrélées à F2 sont :\n",
    "#Valeur PIB (positivement)\n",
    "#Valeur importations (négativement)\n",
    "\n",
    "#En résumé  = Plus il y'a de production, plus il ya de disponibilité alimentaire au niveau national de viandes de volailles. \n",
    "            # moins il y'a d'exportations, plus il y'a de disponibilité alimentaire au niveau national de viandes de volailles\n",
    "    \n",
    "           # = plus le PIB national et les valeurs d'importations sont anticorrélé, donc PIB élevé moins d'importations \n",
    "            #et si PIB moins élevé, importations plus forte"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "bb0217ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Projection des individus\n",
    "\n",
    "def display_factorial_planes(X_projected, n_comp, pca, axis_ranks, labels=None, alpha=1, illustrative_var=None):\n",
    "    for d1,d2 in axis_ranks:\n",
    "        if d2 < n_comp:\n",
    "\n",
    "            # initialisation de la figure       \n",
    "            fig = plt.figure(figsize=(20,20))\n",
    "\n",
    "            # affichage des points\n",
    "            if illustrative_var is None:\n",
    "                plt.scatter(X_projected[:, d1], X_projected[:, d2], alpha=alpha)\n",
    "            else:\n",
    "                illustrative_var = np.array(illustrative_var)\n",
    "                for value in np.unique(illustrative_var):\n",
    "                    selected = np.where(illustrative_var == value)\n",
    "                    plt.scatter(X_projected[selected, d1], X_projected[selected, d2], alpha=alpha, label=value)\n",
    "                plt.legend()\n",
    "\n",
    "            # affichage des labels des points\n",
    "            if labels is not None:\n",
    "                for i,(x,y) in enumerate(X_projected[:,[d1,d2]]):\n",
    "                    plt.text(x, y, labels[i],\n",
    "                              fontsize='10', ha='center',va='center') \n",
    "\n",
    "            # détermination des limites du graphique\n",
    "            boundary = np.max(np.abs(X_projected[:, [d1,d2]])) * 1.1\n",
    "            plt.xlim([-boundary,boundary])\n",
    "            plt.ylim([-boundary,boundary])\n",
    "\n",
    "            # affichage des lignes horizontales et verticales\n",
    "            plt.plot([-100, 100], [0, 0], color='grey', ls='--')\n",
    "            plt.plot([0, 0], [-100, 100], color='grey', ls='--')\n",
    "            \n",
    "\n",
    "            # nom des axes, avec le pourcentage d'inertie expliqué\n",
    "            plt.xlabel('F{} ({}%)'.format(d1+1, round(100*pca.explained_variance_ratio_[d1],1)))\n",
    "            plt.ylabel('F{} ({}%)'.format(d2+1, round(100*pca.explained_variance_ratio_[d2],1)))\n",
    "\n",
    "            plt.title(\"Projection des individus (sur F{} et F{})\".format(d1+1, d2+1))\n",
    "            plt.show(block=False)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "X_projected = pca.transform(X_scaled)\n",
    "display_factorial_planes(X_projected, n_comp, pca, [(0,1),(2,3)], labels = np.array(names))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "c72d3591",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Il faut interpréter ce graphique en parallèle du cercle des corrélations. \n",
    "#En effet, le cercle des corrélations nous indique quelles variables sont très corrélées (ou anticorrélées) à F1 et F2.\n",
    "#En effet, nous avons dit que nous pouvions voir les axes principaux d’inertie comme des « nouvelles variables »\n",
    "#qui synthétisent des variables déjà existantes. \n",
    "\n",
    "#Comme F1 est très corrélée : \n",
    "#Disponibilité alimentaire (positivement)\n",
    "#valeur production (positivement)\n",
    "#valeur exportations (négativement)\n",
    "#Ainsi, se déplacer le long des abscisses dans le sens croissant, c’est un peu se déplacer vers les pays qui ont une\n",
    "#Disponibilité alimentaire et une valeur production élevé de viandes de volailles (Ex Chine continentale, Etas Unis d'Amérique). \n",
    "#Nous pouvons voir que un amas de pays sont très condensé au niveau du centre de l'axe des abcisses\n",
    "\n",
    "#Comme F2 est très corrélé :\n",
    "#Valeur PIB (positivement)\n",
    "#Valeur importations (négativement)\n",
    "\n",
    "#Ainsi, se déplacer le long des ordonnées dans le sens croissant, c’est un peu se déplacer vers les pays qui ont une\n",
    "#un PIB élevé Ex Iran République Islamique, Indonésié, et Viet Nam\n",
    "#Et dans le sens décroissant le long des axes des ordonnées ce sont les pays qui ont une importations plus élevé \n",
    "#de viande de volailles dont Chine RAS de Honk Kong, Royaume Uni, Irlande du Nord, Emirats Arabes....)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "97ced354",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Analyse exploratoire des données \n",
    "#Dendrogramme méthode CAH \n",
    "\n",
    "#Le nombre de classes \n",
    "#Les différents groupes\n",
    "\n",
    "#Heatmap dengrogramme \n",
    "\n",
    "from matplotlib.collections import LineCollection\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from scipy.cluster.hierarchy import dendrogram\n",
    "\n",
    "\n",
    "def plot_dendrogram(Z, names):\n",
    "    plt.figure(figsize=(10,25))\n",
    "    plt.title('Hierarchical Clustering Dendrogram')\n",
    "    plt.xlabel('distance')\n",
    "    dendrogram(\n",
    "        Z,\n",
    "        labels = names,\n",
    "        orientation = \"left\",\n",
    "    )\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "4eb0b169",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x1800 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from scipy.cluster.hierarchy import linkage, fcluster\n",
    "from sklearn import preprocessing\n",
    "\n",
    "\n",
    "# import de l'échantillon \n",
    "data = df_filtre_final4\n",
    "\n",
    "# Valeur\n",
    "valeur = [df_filtre_final4.loc[Zone, \"Valeur_Importations_Quantité\"] for Zone in data.index]\n",
    "\n",
    "# préparation des données pour le clustering\n",
    "X = data.values\n",
    "names = data.index\n",
    "\n",
    "# Centrage et Réduction\n",
    "std_scale = preprocessing.StandardScaler().fit(X)\n",
    "X_scaled = std_scale.transform(X)\n",
    "\n",
    "# Clustering hiérarchique\n",
    "Z = linkage(X_scaled, 'ward')\n",
    "\n",
    "# Affichage du dendrogramme\n",
    "plot_dendrogram(Z, names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "a76cca14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,\n",
       "       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n",
       "       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n",
       "       3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n",
       "       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n",
       "       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n",
       "       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n",
       "       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3], dtype=int32)"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Coupage du dendrogramme\n",
    "\n",
    "cluster = fcluster(Z, 3, criterion='maxclust') \n",
    "cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "7a52924e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "5ab4314e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#index triés des groupes\n",
    "import numpy as np\n",
    "idg = np.argsort(cluster)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "aa3c35ea",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>(Brésil, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>(États-Unis d'Amérique, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>(Chine, continentale, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>(Indonésie, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>(Iran (République islamique d'), 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>3</td>\n",
       "      <td>(Guinée-Bissau, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>3</td>\n",
       "      <td>(Guyana, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>3</td>\n",
       "      <td>(Géorgie, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>3</td>\n",
       "      <td>(Gambie, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>3</td>\n",
       "      <td>(Îles Salomon, 2017)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index                                       0\n",
       "0        1                          (Brésil, 2017)\n",
       "1        1           (États-Unis d'Amérique, 2017)\n",
       "2        1             (Chine, continentale, 2017)\n",
       "3        2                       (Indonésie, 2017)\n",
       "4        2  (Iran (République islamique d'), 2017)\n",
       "..     ...                                     ...\n",
       "167      3                   (Guinée-Bissau, 2017)\n",
       "168      3                          (Guyana, 2017)\n",
       "169      3                         (Géorgie, 2017)\n",
       "170      3                          (Gambie, 2017)\n",
       "171      3                    (Îles Salomon, 2017)\n",
       "\n",
       "[172 rows x 2 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Regroupement via le numero de cluster via Zone\n",
    "\n",
    "\n",
    "cluster_trie = pandas.DataFrame(df_filtre_final4.index[idg], cluster[idg])\n",
    "\n",
    "cluster_trie = cluster_trie.reset_index()\n",
    "\n",
    "\n",
    "cluster_trie"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "65b1c511",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>index</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>167</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "index  1  2    3\n",
       "0      3  2  167"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#tableau de contingence par index\n",
    "\n",
    "cluster_trie.pivot_table(columns=\"index\", aggfunc=len, fill_value=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "ed6759bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Le cluster Numero 3 a capté la majorité des pays (167 sur 172)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "2fe3fa97",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-85-f5937377bd3a>:29: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
      "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
      "  plt.scatter(X_projected[:, 0], X_projected[:, 1], c=clusters.astype(np.float), cmap = 'jet', alpha=.2)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn import decomposition\n",
    "\n",
    "# Nombre de clusters souhaités\n",
    "n_clust = 3\n",
    "\n",
    "# import de l'échantillon\n",
    "data = df_filtre_final4\n",
    "\n",
    "# préparation des données pour le clustering\n",
    "X = data.values\n",
    "\n",
    "# Centrer et réduire n'est ici pas nécessaire car les variables sont exprimées dans la même unité mais je centre et reduis \n",
    "X_scaled = preprocessing.StandardScaler().fit_transform(X)\n",
    "\n",
    "# Clustering par K-means\n",
    "km = KMeans(n_clusters= n_clust)\n",
    "km.fit(X)\n",
    "\n",
    "# Récupération des clusters attribués à chaque individu\n",
    "clusters = km.labels_\n",
    "\n",
    "# Affichage du clustering par projection des individus sur le prmeier plan factoriel\n",
    "pca = decomposition.PCA(n_components=3).fit(X)\n",
    "X_projected = pca.transform(X)\n",
    "plt.scatter(X_projected[:, 0], X_projected[:, 1], c=clusters.astype(np.float), cmap = 'jet', alpha=.2)\n",
    "plt.title(\"Projection des {} individus sur le 1e plan factoriel\".format(X_projected.shape[0]))\n",
    "plt.show(block=False)\n",
    "\n",
    "plt.figure()\n",
    "centroids = km.cluster_centers_\n",
    "centroids_projected = pca.transform(centroids)\n",
    "plt.scatter(centroids_projected[:,0],centroids_projected[:,1])\n",
    "plt.title(\"Projection des {} centres sur le 1e plan factoriel\".format(len(centroids)))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "2de53d62",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Le nombre de classes est ici de 3 groupes bien distinct en 3 couleurs diffèrents sur le premier graphique\n",
    "\n",
    "#Le deuxième graphique caractérise les centroïdes de ces 3 classes \n",
    "\n",
    "#Cependant, ces analyses nous permettent pas totalement de cibler en petit groupe un groupement de pays pour exporter nos poulets "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "23b11b29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 6 11  6  6 10 11  6 11  8  6  8  5  6  6  6  6 11  6  6  6  6  1  5  6\n",
      "  6  5  6  6  6  8  5 10  6  5  3  6  8  5  6  6 11  6  5  6  6  6  8  6\n",
      "  6  6  6 11  8  5  6  5  6  5  5  6  6  6  6  5  6  6  8  4  4 11  5  6\n",
      "  6  8  6  9  5  5  6  6  6  5  6  6  6  6  6  6  6  6  8  6  6  6  6  6\n",
      "  6  6  9  6  6  6  8  6  6  6  6  6  6  6  6  5  6  6  8  6  6 10  8  7\n",
      "  6  5  8  5 10  6  6  8  6  6  6  6  6  6  6  6  6  6  6  6  5  6  6  6\n",
      "  6  6  5  6  6  6  5  7  6  6  6  6  6  8  8  6  6  6 12  5  6  6  8 11\n",
      "  6  2  6  6]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([ 21, 169,  34,  67,  68,  25,  30, 140, 121,  37,  22,  70, 146,\n",
       "       111,  63,  58,  57, 123,  53, 163,  81, 150,  55,  33,  77,  11,\n",
       "        76,  42, 109, 110, 108, 115, 112, 113,   0, 106, 105, 104, 103,\n",
       "       101, 100,  99,  97,  96,  95,  94,  93,  92,  91, 107, 116, 130,\n",
       "       125, 147, 148, 149, 152, 153, 154, 145, 155, 159, 160, 161, 164,\n",
       "       165, 168, 156, 120, 144, 142, 126, 128, 129,  89, 131, 132, 143,\n",
       "       133, 135, 136, 137, 138, 139, 141, 134,  88,  85,  86,  48,  47,\n",
       "        45,  87,  43,  41,  39,  38,  35,  32,  28,  27,  26,  24,  23,\n",
       "        20,  19,  18,  17,  15,  14,  13,  12,   9,   6,   3,   2,  49,\n",
       "        50,  44, 171,  64,  72,  62,  61,  74,  60,  59,  56,  54,  78,\n",
       "        79,  80,  82,  83,  84, 170,  65,  71, 151, 119,  66, 166,  90,\n",
       "         8, 158, 157, 122,  29,  52, 114,  46,  10,  73, 118,  36, 102,\n",
       "       127,  75,  98, 124, 117,   4,  31,   1, 167,  69,  16,   7,  40,\n",
       "         5,  51, 162], dtype=int64)"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#matérialisation des classes plus cibler \n",
    "plt.title('CAH avec matérialisation des groupement plus cible')\n",
    "dendrogram(Z,labels=df_filtre_final4.index,orientation='left',color_threshold=3)\n",
    "plt.show()\n",
    "\n",
    "#découpage à la hauteur t = 3 ==> identifiants de groupes obtenus\n",
    "groupes_cah = fcluster(Z,t=3,criterion='distance')\n",
    "print(groupes_cah)\n",
    "\n",
    "#index triés des groupes\n",
    "import numpy as np\n",
    "idg = np.argsort(groupes_cah)\n",
    "\n",
    "idg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "14e09cbf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Nous pouvons voir  12 classes (groupements distincts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "2b5ea35c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>(Afghanistan, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>(Namibie, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>(Nicaragua, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>(Niger, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>(Norvège, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>10</td>\n",
       "      <td>(Sierra Leone, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>10</td>\n",
       "      <td>(Côte d'Ivoire, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>10</td>\n",
       "      <td>(Mexique, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>11</td>\n",
       "      <td>(Iraq, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>11</td>\n",
       "      <td>(Paraguay, 2017)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>172 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index                      0\n",
       "0        0    (Afghanistan, 2017)\n",
       "1        0        (Namibie, 2017)\n",
       "2        0      (Nicaragua, 2017)\n",
       "3        0          (Niger, 2017)\n",
       "4        0        (Norvège, 2017)\n",
       "..     ...                    ...\n",
       "167     10   (Sierra Leone, 2017)\n",
       "168     10  (Côte d'Ivoire, 2017)\n",
       "169     10        (Mexique, 2017)\n",
       "170     11           (Iraq, 2017)\n",
       "171     11       (Paraguay, 2017)\n",
       "\n",
       "[172 rows x 2 columns]"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#k-means sur les données centrées et réduites\n",
    "from sklearn import cluster\n",
    "kmeans = cluster.KMeans(n_clusters=12)\n",
    "kmeans.fit(df_filtre_final4)\n",
    "\n",
    "#index triés des groupes\n",
    "idk = np.argsort(kmeans.labels_)\n",
    "\n",
    "#affichage des observations et leurs groupes\n",
    "clust = pandas.DataFrame(df_filtre_final4.index[idk],kmeans.labels_[idk])\n",
    "\n",
    "clust1 = clust.reset_index()\n",
    "clust1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "cbcde22f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>index</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>134</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "index   0   1   2   3   4   5   6   7   8   9   10  11\n",
       "0      134   1   1   1   1   1   4   1   9   1  16   2"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#tableau de contingence par index\n",
    "\n",
    "clust1.pivot_table(columns=\"index\", aggfunc=len, fill_value=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "d656b4f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[4.48554337e+11, 1.35885588e+16, 5.00470813e+15, ...,\n",
       "        3.01269949e+14, 2.60561371e+13, 2.21188529e+14],\n",
       "       [2.93815822e+12, 1.35851721e+16, 5.00132142e+15, ...,\n",
       "        2.97883237e+14, 2.26694250e+13, 2.17801817e+14],\n",
       "       [1.64775992e+11, 1.35882751e+16, 5.00442435e+15, ...,\n",
       "        3.00986171e+14, 2.57723585e+13, 2.20904751e+14],\n",
       "       ...,\n",
       "       [1.78275726e+13, 1.35702827e+16, 4.98643202e+15, ...,\n",
       "        2.82993837e+14, 7.78005075e+12, 2.02912417e+14],\n",
       "       [1.17365575e+11, 1.35879929e+16, 5.00414221e+15, ...,\n",
       "        3.00704030e+14, 2.54902180e+13, 2.20622610e+14],\n",
       "       [1.70583202e+12, 1.35898161e+16, 5.00596541e+15, ...,\n",
       "        3.02527227e+14, 2.73134149e+13, 2.22445807e+14]])"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#distances aux centres de classes des observations\n",
    "kmeans.transform(df_filtre_final4)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "bb58ca5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>col_0</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>row_0</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>91</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "col_0  0   1   2   3   4   5   6   7   8   9   10  11\n",
       "row_0                                                \n",
       "1       1   0   0   0   0   0   0   0   0   0   0   0\n",
       "2       0   0   0   0   0   0   0   0   0   0   1   0\n",
       "3       0   0   0   0   0   0   0   0   1   0   0   0\n",
       "4       0   1   0   0   1   0   0   0   0   0   0   0\n",
       "5      21   0   0   0   0   0   1   0   0   0   1   0\n",
       "6      91   0   0   0   0   0   2   0   6   1   9   1\n",
       "7       1   0   0   0   0   0   0   0   0   0   1   0\n",
       "8      10   0   0   1   0   0   1   1   2   0   2   0\n",
       "9       0   0   0   0   0   1   0   0   0   0   1   0\n",
       "10      4   0   0   0   0   0   0   0   0   0   0   0\n",
       "11      6   0   0   0   0   0   0   0   0   0   1   1\n",
       "12      0   0   1   0   0   0   0   0   0   0   0   0"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#correspondance avec les groupes de la CAH\n",
    "pandas.crosstab(groupes_cah,kmeans.labels_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "3d663a5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>(Afghanistan, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>(Namibie, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>(Nicaragua, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>(Niger, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>(Norvège, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>0</td>\n",
       "      <td>(Eswatini, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>0</td>\n",
       "      <td>(Fidji, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>0</td>\n",
       "      <td>(Israël, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>0</td>\n",
       "      <td>(Italie, 2017)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>0</td>\n",
       "      <td>(Irlande, 2017)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>134 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index                    0\n",
       "0        0  (Afghanistan, 2017)\n",
       "1        0      (Namibie, 2017)\n",
       "2        0    (Nicaragua, 2017)\n",
       "3        0        (Niger, 2017)\n",
       "4        0      (Norvège, 2017)\n",
       "..     ...                  ...\n",
       "129      0     (Eswatini, 2017)\n",
       "130      0        (Fidji, 2017)\n",
       "131      0       (Israël, 2017)\n",
       "132      0       (Italie, 2017)\n",
       "133      0      (Irlande, 2017)\n",
       "\n",
       "[134 rows x 2 columns]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ccc = clust1[clust1['index'] == 0]\n",
    "ccc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "f212ba5e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.98883648 0.97719496 0.95488093 0.9453962  0.92483656 0.86954358\n",
      " 0.86533224 0.85707667 0.85158161]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#librairie pour évaluation des partitions\n",
    "from sklearn import metrics\n",
    "\n",
    "#utilisation de la métrique \"silhouette\"\n",
    "#faire varier le nombre de clusters de 2 à 10\n",
    "res = np.arange(9,dtype=\"double\")\n",
    "for k in np.arange(9):\n",
    "    km = cluster.KMeans(n_clusters=k+2)\n",
    "    km.fit(df_filtre_final4)\n",
    "    res[k] = metrics.silhouette_score(df_filtre_final4,km.labels_)\n",
    "print(res)\n",
    "\n",
    "#graphique\n",
    "import matplotlib.pyplot as plt\n",
    "plt.title(\"Silhouette\")\n",
    "plt.xlabel(\"# of clusters\")\n",
    "plt.plot(np.arange(2,11,1),res)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "057e73b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Nb de clusters de 12 trop élevés, donc nous choisirons nb de 7 classes via graphique de 'silouhette'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "3af549cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Valeur_Production                         1.047022e+21\n",
      "Valeur_Importations_Quantité              5.904765e+18\n",
      "Valeur_Exportations_Quantité              3.588000e+19\n",
      "Valeur_Disponibilité_alimentaire_Kg_an    2.339885e+19\n",
      "Valeur_PIB                                4.398825e+32\n",
      "dtype: float64\n",
      "0     134\n",
      "1       1\n",
      "2       1\n",
      "3       1\n",
      "4       1\n",
      "5       1\n",
      "6       4\n",
      "7       1\n",
      "8       9\n",
      "9       1\n",
      "10     16\n",
      "11      2\n",
      "dtype: int64\n",
      "    Valeur_Production  Valeur_Importations_Quantité  \\\n",
      "0        3.807015e+08                  7.714179e+07   \n",
      "1        2.301000e+09                  1.000000e+06   \n",
      "2        9.180000e+08                  2.910000e+08   \n",
      "3        8.380000e+08                  1.370000e+08   \n",
      "4        2.174000e+09                  6.000000e+06   \n",
      "5        2.215000e+09                  1.069000e+09   \n",
      "6        1.214250e+09                  4.500000e+07   \n",
      "7        1.564000e+09                  7.800000e+07   \n",
      "8        2.757556e+09                  8.255556e+07   \n",
      "9        0.000000e+00                  0.000000e+00   \n",
      "10       1.937000e+09                  1.191875e+08   \n",
      "11       7.050000e+07                  2.355000e+08   \n",
      "\n",
      "    Valeur_Exportations_Quantité  Valeur_Disponibilité_alimentaire_Kg_an  \\\n",
      "0                   9.135075e+07                            5.212660e+07   \n",
      "1                   0.000000e+00                            2.683267e+08   \n",
      "2                   1.000000e+06                            1.841559e+08   \n",
      "3                   6.000000e+06                            1.284791e+08   \n",
      "4                   4.500000e+07                            3.140903e+08   \n",
      "5                   1.000000e+07                            3.464532e+08   \n",
      "6                   2.975000e+07                            1.477172e+08   \n",
      "7                   2.000000e+06                            2.201758e+08   \n",
      "8                   7.722222e+07                            4.807524e+08   \n",
      "9                   0.000000e+00                            7.776881e+06   \n",
      "10                  2.951250e+08                            2.675886e+08   \n",
      "11                  2.000000e+06                            4.266079e+07   \n",
      "\n",
      "      Valeur_PIB  \n",
      "0   1.715421e+12  \n",
      "1   1.358983e+16  \n",
      "2   5.005975e+15  \n",
      "3   1.835698e+15  \n",
      "4   1.531653e+16  \n",
      "5   5.458974e+14  \n",
      "6   1.605238e+14  \n",
      "7   9.204710e+14  \n",
      "8   9.626711e+13  \n",
      "9   3.025368e+14  \n",
      "10  2.732300e+13  \n",
      "11  2.224554e+14  \n",
      "Valeur_Production                         8.641862e+19\n",
      "Valeur_Importations_Quantité              1.110604e+18\n",
      "Valeur_Exportations_Quantité              7.197697e+17\n",
      "Valeur_Disponibilité_alimentaire_Kg_an    2.240980e+18\n",
      "Valeur_PIB                                4.398773e+32\n",
      "dtype: float64\n",
      "Valeur_Production                         0.082538\n",
      "Valeur_Importations_Quantité              0.188086\n",
      "Valeur_Exportations_Quantité              0.020060\n",
      "Valeur_Disponibilité_alimentaire_Kg_an    0.095773\n",
      "Valeur_PIB                                0.999988\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "#moyenne par variable\n",
    "m = df_filtre_final4.mean()\n",
    "\n",
    "#TSS\n",
    "TSS = df_filtre_final4.shape[0]*df_filtre_final4.var(ddof=0)\n",
    "print(TSS)\n",
    "\n",
    "#data.frame conditionnellement aux groupes\n",
    "gb = df_filtre_final4.groupby(kmeans.labels_)\n",
    "\n",
    "#effectifs conditionnels\n",
    "nk = gb.size()\n",
    "print(nk)\n",
    "\n",
    "#moyennes conditionnelles\n",
    "mk = gb.mean()\n",
    "print(mk)\n",
    "\n",
    "#pour chaque groupe écart à la moyenne par variable\n",
    "EMk = (mk-m)**2\n",
    "\n",
    "#pondéré par les effectifs du groupe\n",
    "EM = EMk.multiply(nk,axis=0)\n",
    "\n",
    "#somme des valeurs => BSS\n",
    "BSS = np.sum(EM,axis=0)\n",
    "print(BSS)\n",
    "\n",
    "#carré du rapport de corrélation\n",
    "#variance expliquée par l'appartenance aux groupes\n",
    "#pour chaque variable\n",
    "R2 = BSS/TSS\n",
    "print(R2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "c411ea0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#ACP\n",
    "from sklearn.decomposition import PCA\n",
    "acp = PCA(n_components=5).fit_transform(df_filtre_final4)\n",
    "\n",
    "#projeter dans le plan factoriel\n",
    "#avec un code couleur différent selon le groupe\n",
    "\n",
    "\n",
    "for couleur,k in zip(['red','blue','lawngreen','aqua', 'orange', 'black', 'yellow'],[0,1,2,3, 4, 5, 6, 7]):\n",
    "    plt.scatter(acp[kmeans.labels_==k,0],acp[kmeans.labels_==k,1],c=couleur)\n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "49ad1a6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(38, 5)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\selin\\anaconda3\\lib\\site-packages\\sklearn\\preprocessing\\_data.py:194: UserWarning: Numerical issues were encountered when centering the data and might not be solved. Dataset may contain too large values. You may need to prescale your features.\n",
      "  warnings.warn(\"Numerical issues were encountered \"\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4 4 4 4 4 4 1 4 4 4 4 4 4 4 2 2 4 3 4 4 4 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n",
      " 1]\n"
     ]
    }
   ],
   "source": [
    "#retirer des observations le groupe n°0 du k-means précédent\n",
    "df_filtre_final4_subset = df_filtre_final4.iloc[kmeans.labels_!=0,:]\n",
    "print(df_filtre_final4_subset.shape)\n",
    "\n",
    "#centrer et réduire\n",
    "df_filtre_final4_subset_cr = preprocessing.scale(df_filtre_final4_subset)\n",
    "\n",
    "#générer la matrice des liens\n",
    "Z_subset = linkage(df_filtre_final4_subset_cr,method='ward',metric='euclidean')\n",
    "\n",
    "#cah et affichage du dendrogramme\n",
    "plt.title(\"CAH\")\n",
    "dendrogram(Z_subset,labels=df_filtre_final4_subset.index,orientation='left',color_threshold=7)\n",
    "plt.show()\n",
    "\n",
    "#groupes\n",
    "groupes_subset_cah =  fcluster(Z_subset,t=7,criterion='distance')\n",
    "print(groupes_subset_cah)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "04c34514",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#ACP\n",
    "acp_subset = PCA(n_components=4).fit_transform(df_filtre_final4_subset_cr)\n",
    "\n",
    "#projeter dans le plan factoriel\n",
    "#avec un code couleur selon le groupe\n",
    "\n",
    "\n",
    "plt.figure(figsize=(10,10))\n",
    "for couleur,k in zip(['red','blue','lawngreen','aqua', 'orange'],[0,1,2,3,4]):\n",
    "            plt.scatter(acp_subset[groupes_subset_cah==k,0],acp_subset[groupes_subset_cah==k,1],c=couleur)\n",
    "\n",
    "#mettre les labels des points\n",
    "\n",
    "for i,label in enumerate(df_filtre_final4_subset.index):\n",
    "    plt.annotate(label,(acp_subset[i,0],acp_subset[i,1]))\n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ebdd4cfd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
